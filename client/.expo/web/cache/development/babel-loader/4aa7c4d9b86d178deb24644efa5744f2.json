{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/client/src/components/Messages/MessagesRoomScreen.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ThemeContext, Button, Icon } from \"react-native-elements\";\nimport { sendPrivateMessage, fetchConversation, sendReadAck } from \"../../actions/chatActions\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\n\nvar Message = function Message(_ref) {\n  var message = _ref.message,\n      incoming = _ref.incoming,\n      theme = _ref.theme,\n      i = _ref.i,\n      readAck = _ref.readAck;\n  return React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, !incoming && React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: {\n      backgroundColor: incoming ? \"white\" : theme.colors.primary,\n      borderTopLeftRadius: !incoming ? 10 : 0,\n      borderTopRightRadius: 10,\n      borderBottomLeftRadius: 10,\n      borderBottomRightRadius: incoming ? 10 : 0,\n      maxWidth: \"80%\",\n      paddingHorizontal: 8,\n      paddingVertical: 8,\n      marginBottom: 8,\n      marginHorizontal: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    selectable: true,\n    style: {\n      color: !incoming ? \"white\" : \"black\",\n      textAlign: incoming ? \"left\" : \"right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, message.text), readAck.message_id === item._id && React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Lu il y a \", moment(readAck.timestamp).locale(\"fr\").fromNow())), incoming && React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 20\n    }\n  }));\n};\n\nvar RoomScreen = function RoomScreen(_ref2) {\n  var route = _ref2.route;\n  var conversation_id = route.params.conversation_id;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      newMessage = _useState2[0],\n      setNewMessage = _useState2[1];\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      user = _useSelector.user;\n\n  var conversation = useSelector(function (state) {\n    return state.chat.conversations.filter(function (conv) {\n      return conv._id === conversation_id;\n    })[0];\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    function fetchData() {\n      dispatch(fetchConversation(conversation_id));\n      if (conversation.lastMessage.read === false) dispatch(sendReadAck(conversation_id));\n    }\n\n    fetchData();\n  }, []);\n\n  var onSendMessage = function onSendMessage() {\n    var interlocutors = conversation == null ? void 0 : conversation.participants.filter(function (p) {\n      return p._id != user._id;\n    });\n    dispatch(sendPrivateMessage({\n      text: newMessage,\n      conversation_id: conversation_id,\n      recipient: interlocutors[0]\n    }));\n    setNewMessage(\"\");\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"space-between\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, (conversation == null ? void 0 : conversation.messages) ? React.createElement(FlatList, {\n    data: conversation.messages,\n    renderItem: function renderItem(_ref3, i) {\n      var item = _ref3.item;\n      return React.createElement(Message, {\n        i: i,\n        message: item,\n        incoming: (item == null ? void 0 : item.sender) !== user._id,\n        theme: theme,\n        readAck: conversation.readAck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item == null ? void 0 : item._id;\n    },\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }) : React.createElement(ActivityIndicator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, conversation.read && conversation.lastMessage.sender !== user._id && React.createElement(Text, {\n    style: {\n      flex: 1,\n      textAlign: \"right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Vu \\xE0 \", conversation.read.sentAt), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      backgroundColor: \"white\",\n      paddingVertical: 8,\n      paddingHorizontal: 16,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      alignContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      height: 40,\n      flex: 1\n    },\n    onChangeText: function onChangeText(text) {\n      return setNewMessage(text);\n    },\n    value: newMessage,\n    multiline: true,\n    placeholder: \"Ecrivez votre message ici.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    icon: React.createElement(Icon, {\n      name: \"send\",\n      size: 20,\n      color: newMessage ? theme.colors.primary : theme.colors.grey2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }),\n    disabled: !newMessage,\n    type: \"clear\",\n    onPress: function onPress() {\n      return onSendMessage();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default RoomScreen;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/Messages/MessagesRoomScreen.js"],"names":["React","useContext","useState","useEffect","useDispatch","useSelector","ThemeContext","Button","Icon","sendPrivateMessage","fetchConversation","sendReadAck","_","moment","Message","message","incoming","theme","i","readAck","flexDirection","flex","backgroundColor","colors","primary","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","maxWidth","paddingHorizontal","paddingVertical","marginBottom","marginHorizontal","color","textAlign","text","message_id","item","_id","timestamp","locale","fromNow","RoomScreen","route","conversation_id","params","newMessage","setNewMessage","state","auth","user","conversation","chat","conversations","filter","conv","dispatch","fetchData","lastMessage","read","onSendMessage","interlocutors","participants","p","recipient","justifyContent","messages","sender","sentAt","alignItems","alignContent","height","grey2"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  FlatList,\n  ActivityIndicator,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ThemeContext, Button, Icon } from \"react-native-elements\";\nimport {\n  sendPrivateMessage,\n  fetchConversation,\n  sendReadAck,\n} from \"../../actions/chatActions\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\n\nconst Message = ({ message, incoming, theme, i, readAck }) => {\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n      }}\n    >\n      {!incoming && <View style={{ flex: 1 }}></View>}\n      <View\n        style={{\n          backgroundColor: incoming ? \"white\" : theme.colors.primary,\n          borderTopLeftRadius: !incoming ? 10 : 0,\n          borderTopRightRadius: 10,\n          borderBottomLeftRadius: 10,\n          borderBottomRightRadius: incoming ? 10 : 0,\n          maxWidth: \"80%\",\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          marginBottom: 8,\n          marginHorizontal: 8,\n        }}\n      >\n        <Text\n          selectable\n          style={{\n            color: !incoming ? \"white\" : \"black\",\n            textAlign: incoming ? \"left\" : \"right\",\n          }}\n        >\n          {message.text}\n        </Text>\n        {readAck.message_id === item._id && (\n          <Text>\n            Lu il y a {moment(readAck.timestamp).locale(\"fr\").fromNow()}\n          </Text>\n        )}\n      </View>\n      {incoming && <View style={{ flex: 1 }}></View>}\n    </View>\n  );\n};\n\nconst RoomScreen = ({ route }) => {\n  const { conversation_id } = route.params;\n  const [newMessage, setNewMessage] = useState(\"\");\n  const { theme } = useContext(ThemeContext);\n\n  const { user } = useSelector((state) => state.auth);\n  const conversation = useSelector(\n    (state) =>\n      state.chat.conversations.filter((conv) => conv._id === conversation_id)[0]\n  );\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchConversation(conversation_id));\n      if (conversation.lastMessage.read === false)\n        dispatch(sendReadAck(conversation_id));\n    }\n    fetchData();\n  }, []);\n\n  const onSendMessage = () => {\n    const interlocutors = conversation?.participants.filter(\n      (p) => p._id != user._id\n    );\n    dispatch(\n      sendPrivateMessage({\n        text: newMessage,\n        conversation_id,\n        recipient: interlocutors[0],\n      })\n    );\n    setNewMessage(\"\");\n  };\n\n  // is something triggered from here when reveiving a message that isn't triggered outside of this screen\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      {conversation?.messages ? (\n        <FlatList\n          data={conversation.messages}\n          renderItem={({ item }, i) => (\n            <Message\n              i={i}\n              message={item}\n              incoming={item?.sender !== user._id}\n              theme={theme}\n              readAck={conversation.readAck}\n            />\n          )}\n          keyExtractor={(item) => item?._id}\n          inverted={true}\n        />\n      ) : (\n        <ActivityIndicator />\n      )}\n      <View>\n        {conversation.read && conversation.lastMessage.sender !== user._id && (\n          <Text style={{ flex: 1, textAlign: \"right\" }}>\n            Vu à {conversation.read.sentAt}\n          </Text>\n        )}\n        <View\n          style={{\n            flexDirection: \"row\",\n            backgroundColor: \"white\",\n            paddingVertical: 8,\n            paddingHorizontal: 16,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            alignContent: \"center\",\n          }}\n        >\n          <TextInput\n            style={{\n              height: 40,\n              flex: 1,\n            }}\n            onChangeText={(text) => setNewMessage(text)}\n            value={newMessage}\n            multiline\n            placeholder=\"Ecrivez votre message ici.\"\n          />\n          <Button\n            icon={\n              <Icon\n                name=\"send\"\n                size={20}\n                color={newMessage ? theme.colors.primary : theme.colors.grey2}\n              />\n            }\n            disabled={!newMessage}\n            type=\"clear\"\n            onPress={() => onSendMessage()}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default RoomScreen;\n"]},"metadata":{},"sourceType":"module"}