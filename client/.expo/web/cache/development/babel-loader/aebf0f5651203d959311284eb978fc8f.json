{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/client/src/components/CustomOverlay/DateInput.js\";\nimport React, { useState, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar DateInput = function DateInput(_ref) {\n  var _dateInput$initialVal, _dateInput$initialVal2, _dateInput$initialVal3;\n\n  var dateInput = _ref.dateInput,\n      dispatchRedirectReset = _ref.dispatchRedirectReset,\n      theme = _ref.theme;\n\n  var _useState = useState(((_dateInput$initialVal = dateInput.initialValue) == null ? void 0 : _dateInput$initialVal.getDate()) || \"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      day = _useState2[0],\n      setDay = _useState2[1];\n\n  var _useState3 = useState(((_dateInput$initialVal2 = dateInput.initialValue) == null ? void 0 : _dateInput$initialVal2.getMonth()) + 1 || \"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      month = _useState4[0],\n      setMonth = _useState4[1];\n\n  var _useState5 = useState(((_dateInput$initialVal3 = dateInput.initialValue) == null ? void 0 : _dateInput$initialVal3.getYear()) || \"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      year = _useState6[0],\n      setYear = _useState6[1];\n\n  var dayInputRef = useRef();\n  var monthInputRef = useRef();\n  var yearInputRef = useRef();\n\n  if (day.length === 2) {\n    monthInputRef.current.focus();\n  }\n\n  if (month.length === 2) {\n    if (day.length < 2) {\n      dayInputRef.current.focus();\n    } else {\n      yearInputRef.current.focus();\n    }\n  }\n\n  if (year.length === 4) {\n    if (day.length < 2) {\n      dayInputRef.current.focus();\n    } else if (month.length < 2) {\n      month.current.focus();\n    } else {\n      dateInput.onChangeText(new Date(year, month - 1, day));\n      dispatchRedirectReset();\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    autoFocus: true,\n    ref: dayInputRef,\n    value: day,\n    style: [theme.TextInput, styles.input, {\n      width: 40\n    }],\n    placeholder: \"DD\",\n    placeholderTextColor: \"grey\",\n    onChangeText: function onChangeText(text) {\n      return setDay(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"/\"), React.createElement(TextInput, {\n    value: month,\n    ref: monthInputRef,\n    placeholder: \"MM\",\n    placeholderTextColor: \"grey\",\n    onChangeText: function onChangeText(text) {\n      return setMonth(text);\n    },\n    style: [theme.TextInput, styles.input, {\n      width: 40\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"/\"), React.createElement(TextInput, {\n    value: year,\n    ref: yearInputRef,\n    placeholder: \"YYYY\",\n    placeholderTextColor: \"grey\",\n    onChangeText: function onChangeText(text) {\n      return setYear(text);\n    },\n    style: [theme.TextInput, styles.input, {\n      width: 80\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default DateInput;\nvar styles = StyleSheet.create({\n  root: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    elevation: 1,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 20\n  },\n  input: {\n    height: 40,\n    textAlign: \"center\",\n    marginHorizontal: 8\n  }\n});","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/CustomOverlay/DateInput.js"],"names":["React","useState","useRef","DateInput","dateInput","dispatchRedirectReset","theme","initialValue","getDate","day","setDay","getMonth","month","setMonth","getYear","year","setYear","dayInputRef","monthInputRef","yearInputRef","length","current","focus","onChangeText","Date","styles","root","TextInput","input","width","text","StyleSheet","create","backgroundColor","borderRadius","paddingHorizontal","paddingVertical","elevation","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","textAlign","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { View, TextInput, Text, StyleSheet } from \"react-native\";\n\nconst DateInput = ({ dateInput, dispatchRedirectReset, theme }) => {\n  const [day, setDay] = useState(dateInput.initialValue?.getDate() || \"\");\n  const [month, setMonth] = useState(\n    dateInput.initialValue?.getMonth() + 1 || \"\"\n  );\n  const [year, setYear] = useState(dateInput.initialValue?.getYear() || \"\");\n\n  const dayInputRef = useRef();\n  const monthInputRef = useRef();\n  const yearInputRef = useRef();\n\n  if (day.length === 2) {\n    monthInputRef.current.focus();\n  }\n  if (month.length === 2) {\n    if (day.length < 2) {\n      dayInputRef.current.focus();\n    } else {\n      yearInputRef.current.focus();\n    }\n  }\n  if (year.length === 4) {\n    if (day.length < 2) {\n      dayInputRef.current.focus();\n    } else if (month.length < 2) {\n      month.current.focus();\n    } else {\n      dateInput.onChangeText(new Date(year, month - 1, day));\n      dispatchRedirectReset();\n    }\n  }\n\n  return (\n    <View style={styles.root}>\n      <TextInput\n        autoFocus={true}\n        ref={dayInputRef}\n        value={day}\n        style={[theme.TextInput, styles.input, { width: 40 }]}\n        placeholder=\"DD\"\n        placeholderTextColor=\"grey\"\n        onChangeText={(text) => setDay(text)}\n      />\n      <Text>/</Text>\n      <TextInput\n        value={month}\n        ref={monthInputRef}\n        placeholder=\"MM\"\n        placeholderTextColor=\"grey\"\n        onChangeText={(text) => setMonth(text)}\n        style={[theme.TextInput, styles.input, { width: 40 }]}\n      />\n      <Text>/</Text>\n      <TextInput\n        value={year}\n        ref={yearInputRef}\n        placeholder=\"YYYY\"\n        placeholderTextColor=\"grey\"\n        onChangeText={(text) => setYear(text)}\n        style={[theme.TextInput, styles.input, { width: 80 }]}\n      />\n    </View>\n  );\n};\n\nexport default DateInput;\n\nconst styles = StyleSheet.create({\n  root: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    elevation: 1,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.5,\n    shadowRadius: 20,\n  },\n  input: {\n    height: 40,\n    textAlign: \"center\",\n    marginHorizontal: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}