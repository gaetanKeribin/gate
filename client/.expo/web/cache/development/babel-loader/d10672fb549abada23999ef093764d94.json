{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/client/src/components/CustomOverlay/SmallForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Icon } from \"react-native-elements\";\n\nvar SmallForm = function SmallForm(_ref) {\n  var form = _ref.form,\n      dispatchRedirectReset = _ref.dispatchRedirectReset,\n      theme = _ref.theme,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, form.message && React.createElement(Text, {\n    style: {\n      fontSize: 14,\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, form.message), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"stretch\",\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    value: inputValue,\n    multiline: true,\n    placeholder: \"Ecrivez ici.\",\n    placeholderTextColor: \"grey\",\n    onChangeText: function onChangeText(text) {\n      return setInputValue(text);\n    },\n    style: {\n      backgroundColor: theme.colors.grey5,\n      borderColor: theme.colors.grey4,\n      borderWidth: 1,\n      borderRadius: 5,\n      height: 60,\n      paddingHorizontal: 4,\n      paddingVertical: 4,\n      flex: 1\n    },\n    textAlignVertical: \"top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    style: {\n      height: 60,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    icon: React.createElement(Icon, {\n      name: \"send\",\n      size: 20,\n      color: inputValue ? theme.colors.primary : theme.colors.grey2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }),\n    disabled: !inputValue,\n    type: \"clear\",\n    onPress: function onPress() {\n      dispatch(form.action(_objectSpread(_defineProperty({}, form.inputName, inputValue), form.actionParams)));\n      dispatchRedirectReset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SmallForm;\nvar styles = StyleSheet.create({\n  root: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    elevation: 1,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 20\n  },\n  input: {\n    height: 40,\n    textAlign: \"center\",\n    marginHorizontal: 8\n  }\n});","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/CustomOverlay/SmallForm.js"],"names":["React","useState","useRef","Icon","SmallForm","form","dispatchRedirectReset","theme","dispatch","inputValue","setInputValue","styles","root","message","fontSize","flexDirection","alignItems","justifyContent","alignContent","marginTop","text","backgroundColor","colors","grey5","borderColor","grey4","borderWidth","borderRadius","height","paddingHorizontal","paddingVertical","flex","primary","grey2","action","inputName","actionParams","StyleSheet","create","elevation","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","input","textAlign","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { View, TextInput, Text, StyleSheet } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\n\nconst SmallForm = ({ form, dispatchRedirectReset, theme, dispatch }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  return (\n    <View style={styles.root}>\n      {form.message && (\n        <Text\n          style={{\n            fontSize: 14,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            alignContent: \"center\",\n            marginTop: 8,\n          }}\n        >\n          {form.message}\n        </Text>\n      )}\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"stretch\",\n          marginTop: 8,\n        }}\n      >\n        <TextInput\n          value={inputValue}\n          multiline\n          placeholder=\"Ecrivez ici.\"\n          placeholderTextColor=\"grey\"\n          onChangeText={(text) => setInputValue(text)}\n          style={{\n            backgroundColor: theme.colors.grey5,\n            borderColor: theme.colors.grey4,\n            borderWidth: 1,\n            borderRadius: 5,\n            height: 60,\n            paddingHorizontal: 4,\n            paddingVertical: 4,\n            flex: 1,\n          }}\n          textAlignVertical=\"top\"\n        />\n        <Button\n          style={{\n            height: 60,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          icon={\n            <Icon\n              name=\"send\"\n              size={20}\n              color={inputValue ? theme.colors.primary : theme.colors.grey2}\n            />\n          }\n          disabled={!inputValue}\n          type=\"clear\"\n          onPress={() => {\n            dispatch(\n              form.action({\n                [form.inputName]: inputValue,\n                ...form.actionParams,\n              })\n            );\n            dispatchRedirectReset();\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default SmallForm;\n\nconst styles = StyleSheet.create({\n  root: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    elevation: 1,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.5,\n    shadowRadius: 20,\n  },\n  input: {\n    height: 40,\n    textAlign: \"center\",\n    marginHorizontal: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}