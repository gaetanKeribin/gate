{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/Profile/OptionsScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Button, Input, ThemeContext } from \"react-native-elements\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { updateUser as _updateUser, deleteAccount as _deleteAccount, updateUserPassword as _updateUserPassword } from \"../../actions/authActions\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nvar ProfileEditScreen = function ProfileEditScreen(_ref) {\n  var updateUser = _ref.updateUser,\n      deleteAccount = _ref.deleteAccount,\n      auth = _ref.auth,\n      updateUserPassword = _ref.updateUserPassword;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var _useState = useState(auth.user.description),\n      _useState2 = _slicedToArray(_useState, 2),\n      desc = _useState2[0],\n      setDesc = _useState2[1];\n\n  var _useState3 = useState(auth.user.email),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(auth.user.jobTitle),\n      _useState6 = _slicedToArray(_useState5, 2),\n      jobTitle = _useState6[0],\n      setJobTitle = _useState6[1];\n\n  var _useState7 = useState(auth.user.organisation),\n      _useState8 = _slicedToArray(_useState7, 2),\n      organisation = _useState8[0],\n      setOrganisation = _useState8[1];\n\n  var _useState9 = useState(\"\" + auth.user.promo),\n      _useState10 = _slicedToArray(_useState9, 2),\n      promo = _useState10[0],\n      setPromo = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      password = _useState12[0],\n      setPassword = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      confirmation = _useState14[0],\n      setConfirmation = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showPasswordForm = _useState16[0],\n      setShowPasswordForm = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      showPasswordEditForm = _useState18[0],\n      setShowPasswordEditForm = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      passwordError = _useState20[0],\n      setPasswordError = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      newPassword = _useState22[0],\n      setNewPassword = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      showEditPasswordForm = _useState24[0],\n      setShowEditPasswordForm = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      showDeleteAccountForm = _useState26[0],\n      setShowDeleteAccountForm = _useState26[1];\n\n  var onEditProfile = function onEditProfile() {\n    updateUser(_objectSpread({}, auth.user, {\n      description: desc,\n      email: email,\n      jobTitle: jobTitle,\n      organisation: organisation,\n      promo: promo\n    }));\n  };\n\n  var onChangePassword = function onChangePassword() {\n    if (newPassword.length < 8) {\n      return setPasswordError(\"Choisissez un mot de passe d'au moins 8 caractÃ¨res.\");\n    } else if (newPassword !== confirmation) {\n      return setPasswordError(\"Les mots de passe ne correspondent pas.\");\n    }\n\n    updateUserPassword(password, newPassword);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"space-between\",\n      paddingVertical: 8,\n      paddingHorizontal: 8,\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      paddingVertical: 12,\n      paddingHorizontal: 12,\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    },\n    onPress: function onPress() {\n      return setShowEditPasswordForm(!showEditPasswordForm);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Changer mon mot de passe\"), React.createElement(Icon, {\n    name: showEditPasswordForm ? \"chevron-down\" : \"chevron-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })), showEditPasswordForm && React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 27\n      }\n    }),\n    label: \"Ancien mot de passe\",\n    secureTextEntry: true,\n    value: password,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 20,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 27\n      }\n    }),\n    label: \"Nouveau mot de passe\",\n    secureTextEntry: true,\n    value: newPassword,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 20,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      setPasswordError(\"\");\n      setNewPassword(value);\n    },\n    errorMessage: passwordError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: confirmation === newPassword ? \"check\" : \"close\",\n      color: confirmation === newPassword ? \"green\" : \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }),\n    label: \"Confirmation\",\n    secureTextEntry: true,\n    value: confirmation,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 40,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      return setConfirmation(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }), React.createElement(Button, {\n    title: \"Valider\",\n    onPress: function onPress() {\n      return onChangePassword();\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.primary\n    },\n    loading: auth.isUpdatingPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Supprimer mon compte\"), showDeleteAccountForm && React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 27\n      }\n    }),\n    label: \"Ancien mot de passe\",\n    secureTextEntry: true,\n    value: password,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 20,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  })))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateUser: function updateUser(user) {\n      return dispatch(_updateUser(user));\n    },\n    deleteAccount: function deleteAccount(password) {\n      return dispatch(_deleteAccount(password));\n    },\n    updateUserPassword: function updateUserPassword(password, newPassword) {\n      return dispatch(_updateUserPassword(password, newPassword));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEditScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/Profile/OptionsScreen.js"],"names":["React","useState","useContext","connect","Icon","Button","Input","ThemeContext","updateUser","deleteAccount","updateUserPassword","TouchableOpacity","ProfileEditScreen","auth","theme","user","description","desc","setDesc","email","setEmail","jobTitle","setJobTitle","organisation","setOrganisation","promo","setPromo","password","setPassword","confirmation","setConfirmation","showPasswordForm","setShowPasswordForm","showPasswordEditForm","setShowPasswordEditForm","passwordError","setPasswordError","newPassword","setNewPassword","showEditPasswordForm","setShowEditPasswordForm","showDeleteAccountForm","setShowDeleteAccountForm","onEditProfile","onChangePassword","length","flex","alignContent","paddingVertical","paddingHorizontal","backgroundColor","flexDirection","justifyContent","marginRight","marginBottom","marginTop","value","colors","primary","isUpdatingPassword","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Button, Input, ThemeContext } from \"react-native-elements\";\nimport { View, ScrollView, Text } from \"react-native\";\nimport {\n  updateUser,\n  deleteAccount,\n  updateUserPassword\n} from \"../../actions/authActions\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nconst ProfileEditScreen = ({\n  updateUser,\n  deleteAccount,\n  auth,\n  updateUserPassword\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const [desc, setDesc] = useState(auth.user.description);\n  const [email, setEmail] = useState(auth.user.email);\n  const [jobTitle, setJobTitle] = useState(auth.user.jobTitle);\n  const [organisation, setOrganisation] = useState(auth.user.organisation);\n  const [promo, setPromo] = useState(`${auth.user.promo}`);\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [showPasswordForm, setShowPasswordForm] = useState(false);\n  const [showPasswordEditForm, setShowPasswordEditForm] = useState(false);\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [showEditPasswordForm, setShowEditPasswordForm] = useState(false);\n  const [showDeleteAccountForm, setShowDeleteAccountForm] = useState(false);\n\n  const onEditProfile = () => {\n    updateUser({\n      ...auth.user,\n      description: desc,\n      email,\n      jobTitle,\n      organisation,\n      promo\n    });\n  };\n\n  const onChangePassword = () => {\n    if (newPassword.length < 8) {\n      return setPasswordError(\n        \"Choisissez un mot de passe d'au moins 8 caractÃ¨res.\"\n      );\n    } else if (newPassword !== confirmation) {\n      return setPasswordError(\"Les mots de passe ne correspondent pas.\");\n    }\n    updateUserPassword(password, newPassword);\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\"\n      }}\n    >\n      <ScrollView>\n        <View>\n          <TouchableOpacity\n            style={{\n              paddingVertical: 12,\n              paddingHorizontal: 12,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            }}\n            onPress={() => setShowEditPasswordForm(!showEditPasswordForm)}\n          >\n            <Text>Changer mon mot de passe</Text>\n            <Icon name={showEditPasswordForm ? \"chevron-down\" : \"chevron-up\"} />\n          </TouchableOpacity>\n          {showEditPasswordForm && (\n            <View>\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Ancien mot de passe\"\n                secureTextEntry\n                value={password}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={value => setPassword(value)}\n              />\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Nouveau mot de passe\"\n                secureTextEntry\n                value={newPassword}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={value => {\n                  setPasswordError(\"\");\n                  setNewPassword(value);\n                }}\n                errorMessage={passwordError}\n              />\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={\n                  <Icon\n                    name={confirmation === newPassword ? \"check\" : \"close\"}\n                    color={confirmation === newPassword ? \"green\" : \"red\"}\n                  />\n                }\n                label=\"Confirmation\"\n                secureTextEntry\n                value={confirmation}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 40, marginTop: 8 }}\n                onChangeText={value => setConfirmation(value)}\n              />\n              <Button\n                title=\"Valider\"\n                onPress={() => onChangePassword()}\n                buttonStyle={{ backgroundColor: theme.colors.primary }}\n                loading={auth.isUpdatingPassword}\n              />\n            </View>\n          )}\n        </View>\n        <View>\n          <Text>Supprimer mon compte</Text>\n          {showDeleteAccountForm && (\n            <View>\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Ancien mot de passe\"\n                secureTextEntry\n                value={password}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={value => setPassword(value)}\n              />\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: user => dispatch(updateUser(user)),\n    deleteAccount: password => dispatch(deleteAccount(password)),\n    updateUserPassword: (password, newPassword) =>\n      dispatch(updateUserPassword(password, newPassword))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEditScreen);\n"]},"metadata":{},"sourceType":"module"}