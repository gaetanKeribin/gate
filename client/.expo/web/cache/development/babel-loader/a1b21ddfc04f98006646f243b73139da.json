{"ast":null,"code":"var _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/Notifier.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Overlay, Icon } from \"react-native-elements\";\nimport { resetNotification } from \"../actions/notifyActions\";\nimport * as RootNavigation from \"../RootNavigation.js\";\n\nvar Notifier = function Notifier(_ref) {\n  var notification = _ref.notification,\n      reset = _ref.reset;\n  notification.message && setTimeout(function () {\n    reset();\n    console.log(notification.redirect);\n    notification.redirect && RootNavigation.navigate(notification.redirect, {});\n  }, notification.timeout);\n\n  if (notification.format === \"partial\") {\n    return;\n  } else {\n    return React.createElement(Overlay, {\n      isVisible: notification.show === true,\n      windowBackgroundColor: \"rgba(255, 255, 255, .5)\",\n      width: \"auto\",\n      height: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, React.createElement(Icon, {\n      name: notification.variant === \"success\" ? \"check-circle-outline\" : notification.variant === \"warning\" ? \"alert-circle-outline\" : notification.variant === \"info\" ? \"information-outline\" : \"close-circle-outline\",\n      size: 25,\n      color: notification.variant === \"success\" ? \"green\" : notification.variant === \"warning\" ? \"yellow\" : notification.variant === \"info\" ? \"blue\" : \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, notification.message)));\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    notification: state.notification\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    reset: function reset() {\n      return dispatch(resetNotification());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifier);\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/Notifier.js"],"names":["React","useEffect","connect","Overlay","Icon","resetNotification","RootNavigation","Notifier","notification","reset","message","setTimeout","console","log","redirect","navigate","timeout","format","show","variant","mapStateToProps","state","mapDispatchToProps","dispatch","styles","StyleSheet","create"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAEA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,uBAA9B;AACA,SAASC,iBAAT;AACA,OAAO,KAAKC,cAAZ;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA6B;AAAA,MAA1BC,YAA0B,QAA1BA,YAA0B;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC5CD,EAAAA,YAAY,CAACE,OAAb,IACEC,UAAU,CAAC,YAAM;AACfF,IAAAA,KAAK;AACLG,IAAAA,OAAO,CAACC,GAAR,CAAYL,YAAY,CAACM,QAAzB;AAEAN,IAAAA,YAAY,CAACM,QAAb,IACER,cAAc,CAACS,QAAf,CAAwBP,YAAY,CAACM,QAArC,EAA+C,EAA/C,CADF;AAED,GANS,EAMPN,YAAY,CAACQ,OANN,CADZ;;AASA,MAAIR,YAAY,CAACS,MAAb,KAAwB,SAA5B,EAAuC;AACrC;AACD,GAFD,MAEO;AACL,WACE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAET,YAAY,CAACU,IAAb,KAAsB,IADnC;AAEE,MAAA,qBAAqB,EAAC,yBAFxB;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,MAAM,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,IAAI,EACFV,YAAY,CAACW,OAAb,KAAyB,SAAzB,GACI,sBADJ,GAEIX,YAAY,CAACW,OAAb,KAAyB,SAAzB,GACA,sBADA,GAEAX,YAAY,CAACW,OAAb,KAAyB,MAAzB,GACA,qBADA,GAEA,sBARR;AAUE,MAAA,IAAI,EAAE,EAVR;AAWE,MAAA,KAAK,EACHX,YAAY,CAACW,OAAb,KAAyB,SAAzB,GACI,OADJ,GAEIX,YAAY,CAACW,OAAb,KAAyB,SAAzB,GACA,QADA,GAEAX,YAAY,CAACW,OAAb,KAAyB,MAAzB,GACA,MADA,GAEA,KAlBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAsBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOX,YAAY,CAACE,OAApB,CAtBF,CANF,CADF;AAiCD;AACF,CA/CD;;AAiDA,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCb,IAAAA,YAAY,EAAEa,KAAK,CAACb;AADY,GAAL;AAAA,CAA7B;;AAIA,IAAMc,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLd,IAAAA,KAAK,EAAE;AAAA,aAAMc,QAAQ,CAAClB,iBAAiB,EAAlB,CAAd;AAAA;AADF,GAAP;AAGD,CAJD;;AAMA,eAAeH,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,QAA7C,CAAf;AAEA,IAAMiB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Overlay, Icon } from \"react-native-elements\";\nimport { resetNotification } from \"../actions/notifyActions\";\nimport * as RootNavigation from \"../RootNavigation.js\";\n\nconst Notifier = ({ notification, reset }) => {\n  notification.message &&\n    setTimeout(() => {\n      reset();\n      console.log(notification.redirect);\n\n      notification.redirect &&\n        RootNavigation.navigate(notification.redirect, {});\n    }, notification.timeout);\n\n  if (notification.format === \"partial\") {\n    return;\n  } else {\n    return (\n      <Overlay\n        isVisible={notification.show === true}\n        windowBackgroundColor=\"rgba(255, 255, 255, .5)\"\n        width=\"auto\"\n        height=\"auto\"\n      >\n        <View>\n          <Icon\n            name={\n              notification.variant === \"success\"\n                ? \"check-circle-outline\"\n                : notification.variant === \"warning\"\n                ? \"alert-circle-outline\"\n                : notification.variant === \"info\"\n                ? \"information-outline\"\n                : \"close-circle-outline\"\n            }\n            size={25}\n            color={\n              notification.variant === \"success\"\n                ? \"green\"\n                : notification.variant === \"warning\"\n                ? \"yellow\"\n                : notification.variant === \"info\"\n                ? \"blue\"\n                : \"red\"\n            }\n          />\n          <Text>{notification.message}</Text>\n        </View>\n      </Overlay>\n    );\n  }\n};\n\nconst mapStateToProps = state => ({\n  notification: state.notification\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    reset: () => dispatch(resetNotification())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifier);\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"module"}