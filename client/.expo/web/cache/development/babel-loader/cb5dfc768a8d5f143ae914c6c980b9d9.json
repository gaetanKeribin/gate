{"ast":null,"code":"var _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/People/PeopleReadScreen.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Avatar, Divider, Icon, Button } from \"react-native-elements\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport theme from \"../../Theme.json\";\nimport _ from \"lodash\";\n\nvar PeopleScreen = function PeopleScreen(_ref) {\n  var _user$avatar;\n\n  var route = _ref.route;\n  var user = route.params.user;\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"space-between\",\n      paddingVertical: 10,\n      paddingHorizontal: 8,\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [theme.colors.primary, theme.colors.secondary],\n    start: [0.25, 1],\n    end: [0, 0],\n    style: {\n      flexDirection: \"row\",\n      marginBottom: 20,\n      paddingVertical: 8,\n      paddingHorizontal: 16,\n      borderRadius: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: theme.colors.grey5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, _.capitalize(user.firstname)), React.createElement(Text, {\n    style: {\n      fontSize: 30,\n      color: \"white\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, _.capitalize(user.lastname))), user.avatar ? React.createElement(Avatar, {\n    size: \"xlarge\",\n    containerStyle: {\n      borderColor: \"white\",\n      borderWidth: 3\n    },\n    source: {\n      uri: \"http://10.0.2.2:8005/api/files/avatar/\" + ((_user$avatar = user.avatar) == null ? void 0 : _user$avatar.filename)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }) : React.createElement(Avatar, {\n    size: \"xlarge\",\n    containerStyle: {\n      borderColor: \"white\",\n      borderWidth: 3\n    },\n    title: user.firstname.charAt(0).concat(user.lastname.charAt(0)).toUpperCase(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"briefcase\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginHorizontal: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, user.jobTitle, \" chez \", user.organisation)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"flex-start\",\n      justifyContent: \"flex-start\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"school\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginHorizontal: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Promotion \", user.promo)), React.createElement(Divider, {\n    style: {\n      marginVertical: 8,\n      backgroundColor: \"grey\",\n      borderWidth: 1,\n      width: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"justify\",\n      flex: 1,\n      marginEnd: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, user.description)), React.createElement(Divider, {\n    style: {\n      marginVertical: 8,\n      backgroundColor: \"grey\",\n      borderWidth: 1,\n      width: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"at\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, user.email)))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PeopleScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/People/PeopleReadScreen.js"],"names":["React","connect","Avatar","Divider","Icon","Button","LinearGradient","theme","_","PeopleScreen","route","user","params","flex","alignContent","paddingVertical","paddingHorizontal","backgroundColor","colors","primary","secondary","flexDirection","marginBottom","borderRadius","justifyContent","fontSize","color","grey5","capitalize","firstname","fontWeight","lastname","avatar","borderColor","borderWidth","uri","filename","charAt","concat","toUpperCase","textAlignVertical","marginHorizontal","jobTitle","organisation","alignItems","promo","marginVertical","width","textAlign","marginEnd","description","marginStart","email","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { View, Text, ScrollView } from \"react-native\";\nimport { Avatar, Divider, Icon, Button } from \"react-native-elements\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport theme from \"../../Theme.json\";\nimport _ from \"lodash\";\n\nconst PeopleScreen = ({ route }) => {\n  const { user } = route.params;\n\n  return (\n    <View\n      style={{\n        flex: 1\n      }}\n    >\n      <View\n        style={{\n          flex: 1,\n          alignContent: \"space-between\",\n          paddingVertical: 10,\n          paddingHorizontal: 8,\n          backgroundColor: \"white\"\n        }}\n      >\n        <ScrollView\n          style={{\n            flex: 1\n          }}\n        >\n          <LinearGradient\n            colors={[theme.colors.primary, theme.colors.secondary]}\n            start={[0.25, 1]}\n            end={[0, 0]}\n            style={{\n              flexDirection: \"row\",\n              marginBottom: 20,\n              paddingVertical: 8,\n              paddingHorizontal: 16,\n              borderRadius: 5\n            }}\n          >\n            <View\n              style={{\n                flex: 1,\n                alignContent: \"center\",\n                justifyContent: \"center\"\n              }}\n            >\n              <Text style={{ fontSize: 20, color: theme.colors.grey5 }}>\n                {_.capitalize(user.firstname)}\n              </Text>\n              <Text\n                style={{ fontSize: 30, color: \"white\", fontWeight: \"bold\" }}\n              >\n                {_.capitalize(user.lastname)}\n              </Text>\n            </View>\n            {user.avatar ? (\n              <Avatar\n                size=\"xlarge\"\n                containerStyle={{\n                  borderColor: \"white\",\n                  borderWidth: 3\n                }}\n                source={{\n                  uri: `http://10.0.2.2:8005/api/files/avatar/${user.avatar?.filename}`\n                }}\n              />\n            ) : (\n              <Avatar\n                size=\"xlarge\"\n                containerStyle={{\n                  borderColor: \"white\",\n                  borderWidth: 3\n                }}\n                title={user.firstname\n                  .charAt(0)\n                  .concat(user.lastname.charAt(0))\n                  .toUpperCase()}\n              />\n            )}\n          </LinearGradient>\n          <View style={{ flexDirection: \"row\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text\n              style={{\n                textAlignVertical: \"bottom\",\n                marginHorizontal: 8,\n                flex: 1\n              }}\n            >\n              {user.jobTitle} chez {user.organisation}\n            </Text>\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"flex-start\",\n              justifyContent: \"flex-start\"\n            }}\n          >\n            <Icon name=\"school\" size={20} color=\"grey\" />\n            <Text\n              style={{\n                textAlignVertical: \"bottom\",\n                marginHorizontal: 8,\n                flex: 1\n              }}\n            >\n              Promotion {user.promo}\n            </Text>\n          </View>\n          <Divider\n            style={{\n              marginVertical: 8,\n              backgroundColor: \"grey\",\n              borderWidth: 1,\n              width: 20\n            }}\n          />\n          <View style={{ flexDirection: \"row\" }}>\n            <Text style={{ textAlign: \"justify\", flex: 1, marginEnd: 8 }}>\n              {user.description}\n            </Text>\n          </View>\n          <Divider\n            style={{\n              marginVertical: 8,\n              backgroundColor: \"grey\",\n              borderWidth: 1,\n              width: 20\n            }}\n          />\n          <View style={{ flexDirection: \"row\" }}>\n            <Icon name=\"at\" size={20} color=\"grey\" />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {user.email}\n            </Text>\n          </View>\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PeopleScreen);\n"]},"metadata":{},"sourceType":"module"}