{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { apiConfig } from \"../config\";\nimport { showOverlay } from \"../actions/overlayAction\";\nexport var devMiddleware = function devMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      console.log(action.type);\n      return next(action);\n    };\n  };\n};\nexport var socketMiddleware = function socketMiddleware() {\n  var socket;\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        var _action$type;\n\n        if (!socket && store.getState().auth.isLoggedIn) {\n          console.log(\"socket somehow disconnected\");\n        }\n\n        if (action.type === \"REQUEST_LOG_IN:SUCCESS\" || action.type === \"REQUEST_SIGN_UP:SUCCESS\" || action.type === \"REQUEST_VERIFY_TOKEN:SUCCESS\") {\n          var token = action.payload.token;\n          socket = io(apiConfig.baseUrl, {\n            forceNode: true,\n            transportOptions: {\n              polling: {\n                extraHeaders: {\n                  \"Access-Control-Allow-Origin\": \"*\",\n                  authorization: token\n                }\n              }\n            }\n          });\n          socket.on(\"connected\", function (data) {\n            console.log(\"Socket connected\");\n          });\n          socket.on(\"unauthorized\", function (data) {\n            console.log(\"Socket disconnected\");\n          });\n          socket.on(\"authenticated\", function (data) {\n            console.log(\"Socket authenticated\");\n          });\n          socket.on(\"default\", function (data) {\n            store.dispatch(_objectSpread({}, data, {\n              receivedAt: new Date()\n            }));\n          });\n        }\n\n        if (((_action$type = action.type) == null ? void 0 : _action$type.substring(0, 6)) === \"SOCKET\") {\n          socket.emit(action.event, action.payload);\n        }\n\n        if (action.type === \"REQUEST_LOG_OUT:SUCCESS\") {\n          socket.disconnect();\n          console.log(\"socket disconnected\");\n        }\n\n        return next(action);\n      };\n    };\n  };\n};\nexport var axiosMiddleware = function axiosMiddleware(store) {\n  return function (next) {\n    return function (action) {\n      var _action$type2, _action$type3;\n\n      if (((_action$type2 = action.type) == null ? void 0 : _action$type2.substring(0, 7)) === \"REQUEST\" && ((_action$type3 = action.type) == null ? void 0 : _action$type3.includes(\":\")) === false) {\n        var https;\n\n        if (action.type.substring(0, 14) === \"REQUEST_UPLOAD\") {\n          https = axios.create({\n            baseURL: apiConfig.baseUrl + \"/api/\",\n            timeout: 3000,\n            headers: {\n              accept: \"application/json\",\n              \"Access-Control-Allow-Origin\": \"*\",\n              \"Content-Type\": \"multipart/form-data\",\n              Authorization: \"Bearer \" + store.getState().auth.token\n            }\n          });\n        } else {\n          https = axios.create({\n            baseURL: apiConfig.baseUrl + \"/api/\",\n            timeout: 3000,\n            headers: {\n              \"Access-Control-Allow-Origin\": \"*\",\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + store.getState().auth.token\n            }\n          });\n        }\n\n        var request = new Promise(function (resolve, reject) {\n          var res;\n\n          switch (action.method) {\n            case \"GET\":\n              res = https.get(action.route);\n              return resolve(res);\n\n            case \"POST\":\n              res = https.post(action.route, action.payload);\n              return resolve(res);\n\n            case \"DELETE\":\n              res = https.delete(action.route, action.payload);\n              return resolve(res);\n\n            case \"PATCH\":\n              res = https.patch(action.route, action.payload);\n              return resolve(res);\n\n            default:\n              return;\n          }\n        });\n        request.then(function (res) {\n          return store.dispatch({\n            type: action.type + \":SUCCESS\",\n            payload: res.data,\n            receivedAt: new Date()\n          });\n        }).catch(function (err) {\n          var _err$response;\n\n          console.log(err);\n\n          if (action.errorNotification || ((_err$response = err.response) == null ? void 0 : _err$response.data.forceReconnect) === true) {}\n\n          return store.dispatch({\n            type: action.type + \":ERROR\",\n            error: err,\n            receivedAt: new Date()\n          });\n        });\n        return next(action);\n      } else {\n        return next(action);\n      }\n    };\n  };\n};","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/store/reduxMiddlewares.js"],"names":["io","axios","apiConfig","showOverlay","devMiddleware","store","next","action","console","log","type","socketMiddleware","socket","getState","auth","isLoggedIn","token","payload","baseUrl","forceNode","transportOptions","polling","extraHeaders","authorization","on","data","dispatch","receivedAt","Date","substring","emit","event","disconnect","axiosMiddleware","includes","https","create","baseURL","timeout","headers","accept","Authorization","request","Promise","resolve","reject","res","method","get","route","post","delete","patch","then","catch","err","errorNotification","response","forceReconnect","error"],"mappings":"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","sourcesContent":["import io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { apiConfig } from \"../config\";\nimport { showOverlay } from \"../actions/overlayAction\";\n\nexport const devMiddleware = (store) => (next) => (action) => {\n  console.log(action.type);\n  return next(action);\n};\n\nexport const socketMiddleware = () => {\n  let socket;\n  return (store) => (next) => (action) => {\n    if (!socket && store.getState().auth.isLoggedIn) {\n      console.log(\"socket somehow disconnected\");\n    }\n    if (\n      action.type === \"REQUEST_LOG_IN:SUCCESS\" ||\n      action.type === \"REQUEST_SIGN_UP:SUCCESS\" ||\n      action.type === \"REQUEST_VERIFY_TOKEN:SUCCESS\"\n    ) {\n      const { token } = action.payload;\n      socket = io(apiConfig.baseUrl, {\n        forceNode: true,\n        transportOptions: {\n          polling: {\n            extraHeaders: {\n              \"Access-Control-Allow-Origin\": \"*\",\n              authorization: token,\n            },\n          },\n        },\n      });\n      socket.on(\"connected\", (data) => {\n        console.log(\"Socket connected\");\n      });\n      socket.on(\"unauthorized\", (data) => {\n        console.log(\"Socket disconnected\");\n      });\n      socket.on(\"authenticated\", (data) => {\n        console.log(\"Socket authenticated\");\n      });\n      socket.on(\"default\", (data) => {\n        // {\n        //   type: \"SOMETHING\",\n        //   data: { conversation_id, message },\n        //   receivedAt,\n        // };\n        store.dispatch({\n          ...data,\n          receivedAt: new Date(),\n        });\n      });\n    }\n    if (action.type?.substring(0, 6) === \"SOCKET\") {\n      socket.emit(action.event, action.payload);\n    }\n    if (action.type === \"REQUEST_LOG_OUT:SUCCESS\") {\n      socket.disconnect();\n      console.log(\"socket disconnected\");\n    }\n\n    return next(action);\n  };\n};\n\nexport const axiosMiddleware = (store) => (next) => (action) => {\n  if (\n    action.type?.substring(0, 7) === \"REQUEST\" &&\n    action.type?.includes(\":\") === false\n  ) {\n    let https;\n    if (action.type.substring(0, 14) === \"REQUEST_UPLOAD\") {\n      https = axios.create({\n        baseURL: apiConfig.baseUrl + \"/api/\",\n        timeout: 3000,\n        headers: {\n          accept: \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${store.getState().auth.token}`,\n        },\n      });\n    } else {\n      https = axios.create({\n        baseURL: apiConfig.baseUrl + \"/api/\",\n        timeout: 3000,\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${store.getState().auth.token}`,\n        },\n      });\n    }\n    const request = new Promise(function (resolve, reject) {\n      let res;\n\n      switch (action.method) {\n        case \"GET\":\n          res = https.get(action.route);\n          return resolve(res);\n        case \"POST\":\n          res = https.post(action.route, action.payload);\n          return resolve(res);\n        case \"DELETE\":\n          res = https.delete(action.route, action.payload);\n          return resolve(res);\n        case \"PATCH\":\n          res = https.patch(action.route, action.payload);\n          return resolve(res);\n        default:\n          return;\n      }\n    });\n    request\n      .then((res) => {\n        return store.dispatch({\n          type: `${action.type}:SUCCESS`,\n          payload: res.data,\n          receivedAt: new Date(),\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        if (\n          action.errorNotification ||\n          err.response?.data.forceReconnect === true\n        ) {\n        }\n        return store.dispatch({\n          type: `${action.type}:ERROR`,\n          error: err,\n          receivedAt: new Date(),\n        });\n      });\n\n    return next(action);\n  } else {\n    return next(action);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}