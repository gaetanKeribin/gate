{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/client/src/components/Jobs/JobsListScreen.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Icon, Button } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { fetchJobs } from \"../../actions/jobsActions\";\nimport CustomInput from \"../CustomInput\";\n\nvar Item = function Item(_ref) {\n  var item = _ref.item,\n      navigation = _ref.navigation;\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Read\", {\n        job: item,\n        id: item._id\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingTop: 8,\n      paddingHorizontal: 20,\n      marginVertical: 4,\n      marginHorizontal: 0,\n      borderBottomWidth: 1,\n      borderBottomColor: theme.colors.grey4,\n      paddingVertical: 12,\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      fontWeight: \"bold\",\n      fontSize: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, item == null ? void 0 : item.jobTitle, \" en \", item == null ? void 0 : item.employmentType), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"briefcase\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, item == null ? void 0 : item.organisation)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1,\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"map-marker\",\n    size: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, _.capitalize(item == null ? void 0 : item.city)), React.createElement(Text, {\n    color: \"grey\",\n    style: {\n      color: \"grey\",\n      fontSize: 10,\n      textAlignVertical: \"bottom\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, _.capitalize(moment(item == null ? void 0 : item.publishedAt).locale(\"fr\").fromNow()))))));\n};\n\nvar JobsListScreen = function JobsListScreen(_ref2) {\n  var _jobs$jobs;\n\n  var navigation = _ref2.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      jobs = _useSelector.jobs;\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var searchableKeys = [\"firstname\", \"lastname\", \"organisation\", \"city\", \"country\", \"jobTitle\", \"promo\"];\n  useEffect(function () {\n    function fetchData() {\n      dispatch(fetchJobs());\n    }\n\n    fetchData();\n  }, []);\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    fetchJobs();\n    setRefreshing(false);\n  }, [refreshing]);\n  var data = jobs == null ? void 0 : (_jobs$jobs = jobs.jobs) == null ? void 0 : _jobs$jobs.filter(function (u) {\n    var a = false;\n    searchableKeys.every(function (sk, i) {\n      if ((\"\" + u[sk]).toLowerCase().search(search.toLowerCase()) > -1) a = true;\n      if (a === true) return false;else return true;\n    });\n    return a;\n  });\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.searchBarContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, React.createElement(CustomInput, {\n    onChangeText: setSearch,\n    placeholder: \"John, Doe, Paris, KPMG...\",\n    value: search,\n    leftIcon: \"magnify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })), jobs.isLoaded ? React.createElement(FlatList, {\n    style: styles.FlatList,\n    data: data,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(Item, {\n        item: item,\n        navigation: navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item == null ? void 0 : item._id;\n    },\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  })), React.createElement(Button, {\n    containerStyle: {\n      position: \"absolute\",\n      bottom: 0,\n      left: 10\n    },\n    buttonStyle: {\n      borderRadius: 50\n    },\n    icon: React.createElement(Icon, {\n      name: \"plus\",\n      size: 30,\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }),\n    onPress: function onPress() {\n      return navigation.navigate(\"Post\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default JobsListScreen;\nvar styles = StyleSheet.create({\n  container: {\n    width: Dimensions.get(\"window\").width < 500 ? Dimensions.get(\"window\").width : 500\n  },\n  searchBarContainer: {\n    padding: 8,\n    backgroundColor: \"white\",\n    borderColor: \"lightgrey\",\n    margin: 12,\n    borderRadius: 4,\n    borderWidth: 1\n  },\n  FlatList: {\n    backgroundColor: \"white\",\n    borderColor: \"lightgrey\",\n    borderWidth: 1,\n    margin: 12,\n    borderRadius: 4\n  },\n  addButton: {\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 20\n  }\n});","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/Jobs/JobsListScreen.js"],"names":["React","useState","useEffect","useCallback","connect","useDispatch","useSelector","moment","_","Icon","Button","theme","TouchableOpacity","fetchJobs","CustomInput","Item","item","navigation","navigate","job","id","_id","paddingTop","paddingHorizontal","marginVertical","marginHorizontal","borderBottomWidth","borderBottomColor","colors","grey4","paddingVertical","flexDirection","flex","textAlignVertical","fontWeight","fontSize","jobTitle","employmentType","alignItems","marginStart","organisation","capitalize","city","color","publishedAt","locale","fromNow","JobsListScreen","refreshing","setRefreshing","dispatch","state","jobs","search","setSearch","searchableKeys","fetchData","onRefresh","data","filter","u","a","every","sk","i","toLowerCase","styles","container","searchBarContainer","isLoaded","FlatList","alignContent","justifyContent","position","bottom","left","borderRadius","StyleSheet","create","width","Dimensions","get","padding","backgroundColor","borderColor","margin","borderWidth","addButton","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport {\n  View,\n  FlatList,\n  Text,\n  RefreshControl,\n  ActivityIndicator,\n  StyleSheet,\n  Dimensions,\n} from \"react-native\";\nimport { Icon, Button } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { fetchJobs } from \"../../actions/jobsActions\";\nimport CustomInput from \"../CustomInput\";\n\nconst Item = ({ item, navigation }) => {\n  return (\n    <TouchableOpacity\n      onPress={() =>\n        navigation.navigate(\"Read\", {\n          job: item,\n          id: item._id,\n        })\n      }\n    >\n      <View\n        style={{\n          paddingTop: 8,\n          paddingHorizontal: 20,\n          marginVertical: 4,\n          marginHorizontal: 0,\n          borderBottomWidth: 1,\n          borderBottomColor: theme.colors.grey4,\n          paddingVertical: 12,\n          flexDirection: \"row\",\n        }}\n      >\n        <View style={{ flex: 1 }}>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16,\n            }}\n          >\n            {item?.jobTitle} en {item?.employmentType}\n          </Text>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              {item?.organisation}\n            </Text>\n          </View>\n          <View style={{ flexDirection: \"row\", flex: 1, alignItems: \"center\" }}>\n            <Icon name=\"map-marker\" size={20} />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {_.capitalize(item?.city)}\n            </Text>\n            <Text\n              color=\"grey\"\n              style={{\n                color: \"grey\",\n                fontSize: 10,\n                textAlignVertical: \"bottom\",\n              }}\n            >\n              {_.capitalize(moment(item?.publishedAt).locale(\"fr\").fromNow())}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst JobsListScreen = ({ navigation }) => {\n  const [refreshing, setRefreshing] = useState(false);\n  const dispatch = useDispatch();\n  const { jobs } = useSelector((state) => state);\n\n  const [search, setSearch] = useState(\"\");\n  const searchableKeys = [\n    \"firstname\",\n    \"lastname\",\n    \"organisation\",\n    \"city\",\n    \"country\",\n    \"jobTitle\",\n    \"promo\",\n  ];\n\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchJobs());\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    fetchJobs();\n    setRefreshing(false);\n  }, [refreshing]);\n\n  const data = jobs?.jobs?.filter((u) => {\n    let a = false;\n    searchableKeys.every((sk, i) => {\n      if (`${u[sk]}`.toLowerCase().search(search.toLowerCase()) > -1) a = true;\n      if (a === true) return false;\n      else return true;\n    });\n    return a;\n  });\n\n  return (\n    <View style={{ flex: 1, flexDirection: \"row\" }}>\n      <View style={{ flex: 1 }} />\n      <View style={styles.container}>\n        <View style={styles.searchBarContainer}>\n          <CustomInput\n            onChangeText={setSearch}\n            placeholder=\"John, Doe, Paris, KPMG...\"\n            value={search}\n            leftIcon=\"magnify\"\n          />\n        </View>\n        {jobs.isLoaded ? (\n          <FlatList\n            style={styles.FlatList}\n            data={data}\n            renderItem={({ item }) => (\n              <Item item={item} navigation={navigation} />\n            )}\n            keyExtractor={(item) => item?._id}\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n          />\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <ActivityIndicator size=\"large\" />\n          </View>\n        )}\n        <Button\n          containerStyle={{\n            position: \"absolute\",\n            bottom: 0,\n            left: 10,\n          }}\n          buttonStyle={{\n            borderRadius: 50,\n          }}\n          icon={<Icon name=\"plus\" size={30} color=\"white\" />}\n          onPress={() => navigation.navigate(\"Post\")}\n        />\n      </View>\n      <View style={{ flex: 1 }} />\n    </View>\n  );\n};\n\nexport default JobsListScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    width:\n      Dimensions.get(\"window\").width < 500\n        ? Dimensions.get(\"window\").width\n        : 500,\n  },\n  searchBarContainer: {\n    padding: 8,\n    backgroundColor: \"white\",\n    borderColor: \"lightgrey\",\n    margin: 12,\n    borderRadius: 4,\n    borderWidth: 1,\n  },\n  FlatList: {\n    backgroundColor: \"white\",\n    borderColor: \"lightgrey\",\n    borderWidth: 1,\n    margin: 12,\n    borderRadius: 4,\n  },\n  addButton: {\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.5,\n    shadowRadius: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}