{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/EditProfileScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Button, Input, ThemeContext, Overlay } from \"react-native-elements\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { updateUser as _updateUser, deleteAccount as _deleteAccount, updateUserPassword as _updateUserPassword } from \"../actions/authActions\";\n\nvar EditProfileScreen = function EditProfileScreen(_ref) {\n  var updateUser = _ref.updateUser,\n      deleteAccount = _ref.deleteAccount,\n      auth = _ref.auth,\n      updateUserPassword = _ref.updateUserPassword;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var _useState = useState(auth.user.description),\n      _useState2 = _slicedToArray(_useState, 2),\n      desc = _useState2[0],\n      setDesc = _useState2[1];\n\n  var _useState3 = useState(auth.user.email),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(auth.user.jobTitle),\n      _useState6 = _slicedToArray(_useState5, 2),\n      jobTitle = _useState6[0],\n      setJobTitle = _useState6[1];\n\n  var _useState7 = useState(auth.user.organisation),\n      _useState8 = _slicedToArray(_useState7, 2),\n      organisation = _useState8[0],\n      setOrganisation = _useState8[1];\n\n  var _useState9 = useState(\"\" + auth.user.promo),\n      _useState10 = _slicedToArray(_useState9, 2),\n      promo = _useState10[0],\n      setPromo = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      password = _useState12[0],\n      setPassword = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      confirmation = _useState14[0],\n      setConfirmation = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showPasswordForm = _useState16[0],\n      setShowPasswordForm = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      showPasswordEditForm = _useState18[0],\n      setShowPasswordEditForm = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      passwordError = _useState20[0],\n      setPasswordError = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      newPassword = _useState22[0],\n      setNewPassword = _useState22[1];\n\n  var onEditProfile = function onEditProfile() {\n    updateUser(_objectSpread({}, auth.user, {\n      description: desc,\n      email: email,\n      jobTitle: jobTitle,\n      organisation: organisation,\n      promo: promo\n    }));\n  };\n\n  var onChangePassword = function onChangePassword() {\n    if (newPassword.length < 8) {\n      return setPasswordError(\"Choisissez un mot de passe d'au moins 8 caractÃ¨res.\");\n    }\n\n    if (newPassword !== confirmation) {\n      return setPasswordError(\"Les mots de passe ne correspondent pas.\");\n    }\n\n    updateUserPassword({\n      password: password,\n      newPassword: newPassword\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"space-between\",\n      paddingVertical: 8,\n      paddingHorizontal: 8,\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    label: \"Promotion\",\n    value: promo,\n    onChangeText: function onChangeText(text) {\n      return setPromo(text);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"school\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    value: organisation,\n    label: \"Organisation\",\n    onChangeText: function onChangeText(text) {\n      return setOrganisation(text);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"domain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    value: jobTitle,\n    onChangeText: function onChangeText(text) {\n      return setJobTitle(text);\n    },\n    label: \"Profession\",\n    leftIcon: React.createElement(Icon, {\n      name: \"briefcase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"Description\",\n    value: desc,\n    multiline: true,\n    numberOfLines: 8,\n    onChangeText: function onChangeText(text) {\n      return setDesc(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"email\",\n    value: email,\n    leftIcon: React.createElement(Icon, {\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }),\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      paddingTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Valider les changements\",\n    onPress: function onPress() {\n      return onEditProfile();\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.success\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Changer mon mot de passe\",\n    onPress: function onPress() {\n      return setShowPasswordEditForm(true);\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.primary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Supprimer mon compte\",\n    onPress: function onPress() {\n      return setShowPasswordForm(true);\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.error\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })), React.createElement(Overlay, {\n    visible: showPasswordEditForm,\n    height: \"auto\",\n    onBackdropPress: function onBackdropPress() {\n      return setShowPasswordEditForm(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }),\n    label: \"Ancien mot de passe\",\n    secureTextEntry: true,\n    value: password,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 20,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }),\n    label: \"Nouveau mot de passe\",\n    secureTextEntry: true,\n    value: newPassword,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 20,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      setPasswordError(\"\");\n      setNewPassword(value);\n    },\n    errorMessage: passwordError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: confirmation === newPassword ? \"check\" : \"close\",\n      color: confirmation === newPassword ? \"green\" : \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }),\n    label: \"Confirmation\",\n    secureTextEntry: true,\n    value: confirmation,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 40,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      return setConfirmation(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Valider\",\n    onPress: function onPress() {\n      return onChangePassword();\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.primary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  })), React.createElement(Overlay, {\n    visible: showPasswordForm,\n    height: \"auto\",\n    onBackdropPress: function onBackdropPress() {\n      return setShowPasswordForm(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }),\n    label: \"Mot de passe\",\n    secureTextEntry: true,\n    value: password,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 20,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Supprimer mon compte\",\n    onPress: function onPress() {\n      return deleteAccount(password);\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.error\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateUser: function updateUser(user) {\n      return dispatch(_updateUser(user));\n    },\n    deleteAccount: function deleteAccount() {\n      return dispatch(_deleteAccount(password));\n    },\n    updateUserPassword: function updateUserPassword() {\n      return dispatch(_updateUserPassword(password));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfileScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/EditProfileScreen.js"],"names":["React","useState","useContext","connect","Icon","Button","Input","ThemeContext","Overlay","updateUser","deleteAccount","updateUserPassword","EditProfileScreen","auth","theme","user","description","desc","setDesc","email","setEmail","jobTitle","setJobTitle","organisation","setOrganisation","promo","setPromo","password","setPassword","confirmation","setConfirmation","showPasswordForm","setShowPasswordForm","showPasswordEditForm","setShowPasswordEditForm","passwordError","setPasswordError","newPassword","setNewPassword","onEditProfile","onChangePassword","length","flex","alignContent","paddingVertical","paddingHorizontal","backgroundColor","text","paddingTop","colors","success","primary","error","marginRight","marginBottom","marginTop","value","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Icon,\n  Button,\n  Input,\n  ThemeContext,\n  Overlay\n} from \"react-native-elements\";\nimport { View, ScrollView } from \"react-native\";\nimport {\n  updateUser,\n  deleteAccount,\n  updateUserPassword\n} from \"../actions/authActions\";\n\nconst EditProfileScreen = ({\n  updateUser,\n  deleteAccount,\n  auth,\n  updateUserPassword\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const [desc, setDesc] = useState(auth.user.description);\n  const [email, setEmail] = useState(auth.user.email);\n  const [jobTitle, setJobTitle] = useState(auth.user.jobTitle);\n  const [organisation, setOrganisation] = useState(auth.user.organisation);\n  const [promo, setPromo] = useState(`${auth.user.promo}`);\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [showPasswordForm, setShowPasswordForm] = useState(false);\n  const [showPasswordEditForm, setShowPasswordEditForm] = useState(false);\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n\n  const onEditProfile = () => {\n    updateUser({\n      ...auth.user,\n      description: desc,\n      email,\n      jobTitle,\n      organisation,\n      promo\n    });\n  };\n\n  const onChangePassword = () => {\n    if (newPassword.length < 8) {\n      return setPasswordError(\n        \"Choisissez un mot de passe d'au moins 8 caractÃ¨res.\"\n      );\n    }\n    if (newPassword !== confirmation) {\n      return setPasswordError(\"Les mots de passe ne correspondent pas.\");\n    }\n    updateUserPassword({ password, newPassword });\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\"\n      }}\n    >\n      <ScrollView>\n        <Input\n          label=\"Promotion\"\n          value={promo}\n          onChangeText={text => setPromo(text)}\n          leftIcon={<Icon name=\"school\" />}\n        />\n        <Input\n          value={organisation}\n          label=\"Organisation\"\n          onChangeText={text => setOrganisation(text)}\n          leftIcon={<Icon name=\"domain\" />}\n        />\n        <Input\n          value={jobTitle}\n          onChangeText={text => setJobTitle(text)}\n          label=\"Profession\"\n          leftIcon={<Icon name=\"briefcase\" />}\n        />\n        <Input\n          label=\"Description\"\n          value={desc}\n          multiline\n          numberOfLines={8}\n          onChangeText={text => setDesc(text)}\n        />\n        <Input\n          label=\"email\"\n          value={email}\n          leftIcon={<Icon name=\"email\" />}\n          onChangeText={text => setEmail(text)}\n        />\n      </ScrollView>\n      <View style={{ paddingTop: 8 }}>\n        <Button\n          title=\"Valider les changements\"\n          onPress={() => onEditProfile()}\n          buttonStyle={{ backgroundColor: theme.colors.success }}\n        />\n        <Button\n          title=\"Changer mon mot de passe\"\n          onPress={() => setShowPasswordEditForm(true)}\n          buttonStyle={{ backgroundColor: theme.colors.primary }}\n        />\n        <Button\n          title=\"Supprimer mon compte\"\n          onPress={() => setShowPasswordForm(true)}\n          buttonStyle={{ backgroundColor: theme.colors.error }}\n        />\n      </View>\n      <Overlay\n        visible={showPasswordEditForm}\n        height=\"auto\"\n        onBackdropPress={() => setShowPasswordEditForm(false)}\n      >\n        <Input\n          placeholder=\"Mot de passe\"\n          leftIcon={<Icon name=\"lock\" />}\n          label=\"Ancien mot de passe\"\n          secureTextEntry\n          value={password}\n          leftIconContainerStyle={{ marginRight: 12 }}\n          containerStyle={{ marginBottom: 20, marginTop: 8 }}\n          onChangeText={value => setPassword(value)}\n        />\n        <Input\n          placeholder=\"Mot de passe\"\n          leftIcon={<Icon name=\"lock\" />}\n          label=\"Nouveau mot de passe\"\n          secureTextEntry\n          value={newPassword}\n          leftIconContainerStyle={{ marginRight: 12 }}\n          containerStyle={{ marginBottom: 20, marginTop: 8 }}\n          onChangeText={value => {\n            setPasswordError(\"\");\n            setNewPassword(value);\n          }}\n          errorMessage={passwordError}\n        />\n        <Input\n          placeholder=\"Mot de passe\"\n          leftIcon={\n            <Icon\n              name={confirmation === newPassword ? \"check\" : \"close\"}\n              color={confirmation === newPassword ? \"green\" : \"red\"}\n            />\n          }\n          label=\"Confirmation\"\n          secureTextEntry\n          value={confirmation}\n          leftIconContainerStyle={{ marginRight: 12 }}\n          containerStyle={{ marginBottom: 40, marginTop: 8 }}\n          onChangeText={value => setConfirmation(value)}\n        />\n        <Button\n          title=\"Valider\"\n          onPress={() => onChangePassword()}\n          buttonStyle={{ backgroundColor: theme.colors.primary }}\n        />\n      </Overlay>\n      <Overlay\n        visible={showPasswordForm}\n        height=\"auto\"\n        onBackdropPress={() => setShowPasswordForm(false)}\n      >\n        <Input\n          placeholder=\"Mot de passe\"\n          leftIcon={<Icon name=\"lock\" />}\n          label=\"Mot de passe\"\n          secureTextEntry\n          value={password}\n          leftIconContainerStyle={{ marginRight: 12 }}\n          containerStyle={{ marginBottom: 20, marginTop: 8 }}\n          onChangeText={value => setPassword(value)}\n        />\n        <Button\n          title=\"Supprimer mon compte\"\n          onPress={() => deleteAccount(password)}\n          buttonStyle={{ backgroundColor: theme.colors.error }}\n        />\n      </Overlay>\n    </View>\n  );\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: user => dispatch(updateUser(user)),\n    deleteAccount: () => dispatch(deleteAccount(password)),\n    updateUserPassword: () => dispatch(updateUserPassword(password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfileScreen);\n"]},"metadata":{},"sourceType":"module"}