{"ast":null,"code":"import React from \"react\";\nimport \"react-native-gesture-handler\";\nimport { Provider, useSelector, shallowEqual } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { store, persistor } from \"./store/index\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { ThemeProvider, Icon } from \"react-native-elements\";\nimport MyJobs from \"./components/MyJobs\";\nimport Jobs from \"./components/Jobs\";\nimport Profile from \"./components/Profile\";\nimport People from \"./components/People\";\nimport Messages from \"./components/Messages\";\nimport Auth from \"./components/Auth\";\nimport Notifier from \"./components/Notifier\";\nimport theme from \"./Theme.json\";\nimport { navigationRef, isMountedRef } from \"./RootNavigation\";\nvar BottomTab = createBottomTabNavigator();\nvar Drawer = createDrawerNavigator();\n\nvar MainStack = function MainStack() {\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: \"People\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          switch (route.name) {\n            case \"Home\":\n              iconName = \"home\";\n              break;\n\n            case \"Jobs\":\n              iconName = \"briefcase\";\n              break;\n\n            case \"People\":\n              iconName = \"account-group\";\n              break;\n\n            case \"Messages\":\n              iconName = \"forum\";\n              break;\n\n            default:\n              break;\n          }\n\n          return React.createElement(Icon, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: theme.colors.primary,\n      inactiveTintColor: \"gray\"\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"People\",\n    component: People,\n    options: {\n      title: \"Alumnis\"\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Jobs\",\n    component: Jobs,\n    options: {\n      title: \"Emplois\"\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Messages\",\n    component: Messages,\n    options: {\n      title: \"Messages\"\n    }\n  }));\n};\n\nvar AppStack = function AppStack() {\n  var isLoggedIn = useSelector(function (state) {\n    return state.auth.isLoggedIn;\n  }, shallowEqual);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      maxWidth: 500\n    }\n  }, isLoggedIn ? React.createElement(Drawer.Navigator, {\n    initialRouteName: \"Main\",\n    headerMode: \"screen\"\n  }, React.createElement(Drawer.Screen, {\n    name: \"Main\",\n    component: MainStack,\n    options: {\n      title: \"Acceuil\"\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: Profile,\n    options: {\n      title: \"Mon profil\"\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"MyJobs\",\n    component: MyJobs,\n    options: {\n      title: \"Mes offres d'emplois\"\n    }\n  })) : React.createElement(Auth, null));\n};\n\nvar App = function App() {\n  React.useEffect(function () {\n    isMountedRef.current = true;\n    return function () {\n      return isMountedRef.current = false;\n    };\n  }, []);\n  return React.createElement(Provider, {\n    store: store\n  }, React.createElement(PersistGate, {\n    loading: null,\n    persistor: persistor\n  }, React.createElement(ThemeProvider, {\n    theme: theme\n  }, React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      flexDirection: \"row\",\n      justifyContent: \"center\"\n    }\n  }, Platform.OS === \"ios\" && React.createElement(StatusBar, {\n    barStyle: \"default\"\n  }), React.createElement(NavigationContainer, {\n    ref: navigationRef\n  }, React.createElement(AppStack, null), React.createElement(Notifier, null))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/App.js"],"names":["React","Provider","useSelector","shallowEqual","store","persistor","PersistGate","NavigationContainer","createBottomTabNavigator","createDrawerNavigator","ThemeProvider","Icon","MyJobs","Jobs","Profile","People","Messages","Auth","Notifier","theme","navigationRef","isMountedRef","BottomTab","Drawer","MainStack","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","colors","primary","inactiveTintColor","title","AppStack","isLoggedIn","state","auth","flex","maxWidth","App","useEffect","current","flexDirection","justifyContent","Platform","OS"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"react-native-gesture-handler\";\nimport { Provider, useSelector, shallowEqual } from \"react-redux\";\nimport { View, SafeAreaView, Platform, StatusBar } from \"react-native\";\nimport { store, persistor } from \"./store/index\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { ThemeProvider, Icon } from \"react-native-elements\";\nimport MyJobs from \"./components/MyJobs\";\nimport Jobs from \"./components/Jobs\";\nimport Profile from \"./components/Profile\";\nimport People from \"./components/People\";\nimport Messages from \"./components/Messages\";\nimport Auth from \"./components/Auth\";\nimport Notifier from \"./components/Notifier\";\nimport theme from \"./Theme.json\";\nimport { navigationRef, isMountedRef } from \"./RootNavigation\";\n\nconst BottomTab = createBottomTabNavigator();\nconst Drawer = createDrawerNavigator();\n\nconst MainStack = () => {\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"People\"\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          switch (route.name) {\n            case \"Home\":\n              iconName = \"home\";\n              break;\n            case \"Jobs\":\n              iconName = \"briefcase\";\n              break;\n            case \"People\":\n              iconName = \"account-group\";\n              break;\n            case \"Messages\":\n              iconName = \"forum\";\n              break;\n            default:\n              break;\n          }\n\n          return <Icon name={iconName} size={size} color={color} />;\n        }\n      })}\n      tabBarOptions={{\n        activeTintColor: theme.colors.primary,\n        inactiveTintColor: \"gray\"\n      }}\n    >\n      <BottomTab.Screen\n        name=\"People\"\n        component={People}\n        options={{ title: \"Alumnis\" }}\n      />\n      <BottomTab.Screen\n        name=\"Jobs\"\n        component={Jobs}\n        options={{ title: \"Emplois\" }}\n      />\n      <BottomTab.Screen\n        name=\"Messages\"\n        component={Messages}\n        options={{ title: \"Messages\" }}\n      />\n    </BottomTab.Navigator>\n  );\n};\n\nconst AppStack = () => {\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn, shallowEqual);\n  return (\n    <View\n      style={{\n        flex: 1,\n        maxWidth: 500\n      }}\n    >\n      {isLoggedIn ? (\n        <Drawer.Navigator initialRouteName=\"Main\" headerMode=\"screen\">\n          <Drawer.Screen\n            name=\"Main\"\n            component={MainStack}\n            options={{ title: \"Acceuil\" }}\n          />\n          <Drawer.Screen\n            name=\"Profile\"\n            component={Profile}\n            options={{ title: \"Mon profil\" }}\n          />\n          <Drawer.Screen\n            name=\"MyJobs\"\n            component={MyJobs}\n            options={{ title: \"Mes offres d'emplois\" }}\n          />\n        </Drawer.Navigator>\n      ) : (\n        <Auth />\n      )}\n    </View>\n  );\n};\n\nconst App = () => {\n  React.useEffect(() => {\n    isMountedRef.current = true;\n\n    return () => (isMountedRef.current = false);\n  }, []);\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <SafeAreaView\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"center\"\n            }}\n          >\n            {Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />}\n            <NavigationContainer ref={navigationRef}>\n              <AppStack />\n              <Notifier />\n            </NavigationContainer>\n          </SafeAreaView>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}