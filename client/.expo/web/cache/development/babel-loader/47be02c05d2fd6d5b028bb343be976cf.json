{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/JobsScreen.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AppNavbar from \"./AppNavbar\";\nimport { Icon, Overlay } from \"react-native-elements\";\nimport theme from \"../Theme.json\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { fetchJobs as _fetchJobs } from \"../actions/jobsActions\";\n\nvar Item = function Item(_ref) {\n  var item = _ref.item;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showMore = _useState2[0],\n      setShowMore = _useState2[1];\n\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setShowMore(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      fontWeight: \"bold\",\n      fontSize: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, item.jobTitle, \" en \", item.employmentType), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"briefcase\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, item.organisation)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"map-marker\",\n    size: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, _.capitalize(item.city)), React.createElement(Text, {\n    color: \"grey\",\n    style: {\n      color: \"grey\",\n      fontSize: 10,\n      textAlignVertical: \"bottom\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, _.capitalize(moment(item.publishedAt).locale(\"fr\").fromNow()))), React.createElement(Overlay, {\n    isVisible: showMore,\n    width: \"auto\",\n    height: 500,\n    containerStyle: {\n      paddingHorizontal: 8\n    },\n    onBackdropPress: function onBackdropPress() {\n      return setShowMore(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      textAlign: \"center\",\n      fontWeight: \"bold\",\n      fontSize: 16,\n      marginBottom: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, item.jobTitle, \" en \", item.employmentType), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, React.createElement(Icon, {\n    name: \"briefcase\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, item.organisation)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, React.createElement(Icon, {\n    name: \"map-marker\",\n    size: 18,\n    color: theme.colors.grey2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, _.capitalize(item.city))), React.createElement(Text, {\n    style: {\n      color: theme.colors.grey3,\n      fontWeight: \"bold\",\n      fontSize: 16,\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Description\"), React.createElement(Text, {\n    style: {\n      marginBottom: 4,\n      textAlign: \"justify\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, item.jobDesc), item.salary && React.createElement(Text, {\n    style: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, \"R\\xE9mun\\xE9ration \\xE0 hauteur de \", item.salary, \" brut.\"), item.asap && React.createElement(Text, {\n    style: {\n      color: theme.colors.primary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, \"Poste \\xE0 pourvoir d\\xE8s que possible.\"), React.createElement(Text, {\n    style: {\n      color: theme.colors.grey3,\n      fontWeight: \"bold\",\n      fontSize: 16,\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Contact\"), React.createElement(Text, {\n    style: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, item.contact)))))));\n};\n\nvar JobsScreen = function JobsScreen(_ref2) {\n  var navigation = _ref2.navigation,\n      fetchJobs = _ref2.fetchJobs,\n      jobs = _ref2.jobs,\n      auth = _ref2.auth;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  useEffect(function () {\n    function fetchData() {\n      fetchJobs();\n    }\n\n    fetchData();\n  }, []);\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    fetchJobs();\n    setRefreshing(false);\n  }, [refreshing]);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, React.createElement(AppNavbar, {\n    navigation: navigation,\n    title: \"Emplois\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }), jobs.isLoaded ? React.createElement(FlatList, {\n    style: styles.feed,\n    data: jobs.jobs,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(Item, {\n        item: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 37\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  item: {\n    paddingTop: 8,\n    paddingHorizontal: 20,\n    marginVertical: 4,\n    marginHorizontal: 0,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.grey4,\n    paddingVertical: 12,\n    flexDirection: \"row\"\n  },\n  title: {\n    fontSize: 32\n  },\n  feed: {\n    borderRadius: 0,\n    shadowOffset: {\n      width: 10,\n      height: 10\n    },\n    shadowColor: \"black\",\n    shadowOpacity: 0.3,\n    elevation: 2,\n    backgroundColor: \"white\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    jobs: state.jobs\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchJobs: function fetchJobs() {\n      return dispatch(_fetchJobs());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobsScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/JobsScreen.js"],"names":["React","useState","useEffect","useCallback","connect","moment","_","AppNavbar","Icon","Overlay","theme","TouchableOpacity","fetchJobs","Item","item","showMore","setShowMore","styles","flex","textAlignVertical","fontWeight","fontSize","jobTitle","employmentType","flexDirection","marginStart","organisation","capitalize","city","color","publishedAt","locale","fromNow","paddingHorizontal","textAlign","marginBottom","colors","grey2","grey3","marginTop","jobDesc","salary","asap","primary","contact","JobsScreen","navigation","jobs","auth","refreshing","setRefreshing","fetchData","onRefresh","container","isLoaded","feed","_id","alignContent","justifyContent","StyleSheet","create","backgroundColor","paddingTop","marginVertical","marginHorizontal","borderBottomWidth","borderBottomColor","grey4","paddingVertical","title","borderRadius","shadowOffset","width","height","shadowColor","shadowOpacity","elevation","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport {\n  View,\n  FlatList,\n  StyleSheet,\n  Text,\n  ScrollView,\n  RefreshControl,\n  ActivityIndicator\n} from \"react-native\";\nimport AppNavbar from \"./AppNavbar\";\nimport { Icon, Overlay } from \"react-native-elements\";\nimport theme from \"../Theme.json\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { fetchJobs } from \"../actions/jobsActions\";\n\nconst Item = ({ item }) => {\n  const [showMore, setShowMore] = useState(false);\n\n  return (\n    <TouchableOpacity onPress={() => setShowMore(true)}>\n      <View style={styles.item}>\n        <View style={{ flex: 1 }}>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16\n            }}\n          >\n            {item.jobTitle} en {item.employmentType}\n          </Text>\n          <View style={{ flexDirection: \"row\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              {item.organisation}\n            </Text>\n          </View>\n          <View style={{ flexDirection: \"row\", flex: 1 }}>\n            <Icon name=\"map-marker\" size={20} />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {_.capitalize(item.city)}\n            </Text>\n            <Text\n              color=\"grey\"\n              style={{\n                color: \"grey\",\n                fontSize: 10,\n                textAlignVertical: \"bottom\"\n              }}\n            >\n              {_.capitalize(\n                moment(item.publishedAt)\n                  .locale(\"fr\")\n                  .fromNow()\n              )}\n            </Text>\n          </View>\n          <Overlay\n            isVisible={showMore}\n            width=\"auto\"\n            height={500}\n            containerStyle={{\n              paddingHorizontal: 8\n            }}\n            onBackdropPress={() => setShowMore(false)}\n          >\n            <View>\n              <ScrollView>\n                <Text\n                  style={{\n                    textAlignVertical: \"bottom\",\n                    textAlign: \"center\",\n                    fontWeight: \"bold\",\n                    fontSize: 16,\n                    marginBottom: 8\n                  }}\n                >\n                  {item.jobTitle} en {item.employmentType}\n                </Text>\n                <View style={{ flexDirection: \"row\" }}>\n                  <Icon name=\"briefcase\" size={20} color=\"grey\" />\n                  <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n                    {item.organisation}\n                  </Text>\n                </View>\n                <View style={{ flexDirection: \"row\" }}>\n                  <Icon\n                    name=\"map-marker\"\n                    size={18}\n                    color={theme.colors.grey2}\n                  />\n                  <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n                    {_.capitalize(item.city)}\n                  </Text>\n                </View>\n                <Text\n                  style={{\n                    color: theme.colors.grey3,\n                    fontWeight: \"bold\",\n                    fontSize: 16,\n                    marginTop: 8\n                  }}\n                >\n                  Description\n                </Text>\n                <Text style={{ marginBottom: 4, textAlign: \"justify\" }}>\n                  {item.jobDesc}\n                </Text>\n                {item.salary && (\n                  <Text style>\n                    Rémunération à hauteur de {item.salary} brut.\n                  </Text>\n                )}\n\n                {item.asap && (\n                  <Text style={{ color: theme.colors.primary }}>\n                    Poste à pourvoir dès que possible.\n                  </Text>\n                )}\n                <Text\n                  style={{\n                    color: theme.colors.grey3,\n                    fontWeight: \"bold\",\n                    fontSize: 16,\n                    marginTop: 8\n                  }}\n                >\n                  Contact\n                </Text>\n                <Text style>{item.contact}</Text>\n              </ScrollView>\n              {/* <Button title=\"Postuler\" /> */}\n            </View>\n          </Overlay>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst JobsScreen = ({ navigation, fetchJobs, jobs, auth }) => {\n  const [refreshing, setRefreshing] = useState(false);\n\n  useEffect(() => {\n    function fetchData() {\n      fetchJobs();\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n\n    fetchJobs();\n    setRefreshing(false);\n  }, [refreshing]);\n\n  return (\n    <View style={styles.container}>\n      <AppNavbar navigation={navigation} title=\"Emplois\" />\n      {/* <FilterBar\n        data={jobs.jobs}\n        keys={[\n          {\n            name: \"employmentType\",\n            alias: \"Type de contrat\",\n            icon: \"file-document\"\n          },\n          {\n            name: \"city\",\n            alias: \"Ville\",\n            icon: \"map-marker\"\n          },\n          {\n            name: \"jobTitle\",\n            alias: \"Profession\",\n            icon: \"briefcase\"\n          },\n          {\n            name: \"organisation\",\n            alias: \"Organisation\",\n            icon: \"domain\"\n          }\n        ]}\n      /> */}\n      {jobs.isLoaded ? (\n        <FlatList\n          style={styles.feed}\n          data={jobs.jobs}\n          renderItem={({ item }) => <Item item={item} />}\n          keyExtractor={item => item._id}\n          refreshControl={\n            <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n          }\n        />\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  item: {\n    paddingTop: 8,\n    paddingHorizontal: 20,\n    marginVertical: 4,\n    marginHorizontal: 0,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.grey4,\n    paddingVertical: 12,\n    flexDirection: \"row\"\n  },\n  title: {\n    fontSize: 32\n  },\n  feed: {\n    borderRadius: 0,\n    shadowOffset: { width: 10, height: 10 },\n    shadowColor: \"black\",\n    shadowOpacity: 0.3,\n    elevation: 2,\n    backgroundColor: \"white\"\n  }\n});\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  jobs: state.jobs\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchJobs: () => dispatch(fetchJobs())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobsScreen);\n"]},"metadata":{},"sourceType":"module"}