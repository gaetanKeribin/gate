{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var sendMessage = function sendMessage(message) {\n  return {\n    type: \"SOCKET\",\n    event: \"message\",\n    payload: _objectSpread({}, message, {\n      sentAt: new Date()\n    })\n  };\n};\nexport var fetchConversation = function fetchConversation(conversation_id) {\n  return {\n    type: \"REQUEST_CONVERSATION\",\n    method: \"GET\",\n    route: \"conversations/single/\" + conversation_id\n  };\n};\nexport var fetchConversations = function fetchConversations() {\n  return {\n    type: \"REQUEST_CONVERSATIONS\",\n    method: \"GET\",\n    route: \"conversations\"\n  };\n};\nexport var deleteConversation = function deleteConversation(conversation_id) {\n  return {\n    type: \"REQUEST_DELETE_CONVERSATION\",\n    method: \"DELETE\",\n    route: \"conversations/\" + conversation_id,\n    successNotification: {\n      message: \"Conversation supprimée\",\n      variant: \"information\",\n      timeout: 1000\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000\n    }\n  };\n};","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/actions/chatActions.js"],"names":["sendMessage","message","type","event","payload","sentAt","Date","fetchConversation","conversation_id","method","route","fetchConversations","deleteConversation","successNotification","variant","timeout","errorNotification"],"mappings":";;;;;;AAAA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAa;AACtC,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELC,IAAAA,KAAK,EAAE,SAFF;AAGLC,IAAAA,OAAO,oBACFH,OADE;AAELI,MAAAA,MAAM,EAAE,IAAIC,IAAJ;AAFH;AAHF,GAAP;AAQD,CATM;AAWP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,eAAD,EAAqB;AACpD,SAAO;AACLN,IAAAA,IAAI,EAAE,sBADD;AAELO,IAAAA,MAAM,EAAE,KAFH;AAGLC,IAAAA,KAAK,4BAA0BF;AAH1B,GAAP;AAKD,CANM;AAQP,OAAO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACtC,SAAO;AACLT,IAAAA,IAAI,EAAE,uBADD;AAELO,IAAAA,MAAM,EAAE,KAFH;AAGLC,IAAAA,KAAK;AAHA,GAAP;AAKD,CANM;AAQP,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACJ,eAAD,EAAqB;AACrD,SAAO;AACLN,IAAAA,IAAI,EAAE,6BADD;AAELO,IAAAA,MAAM,EAAE,QAFH;AAGLC,IAAAA,KAAK,qBAAmBF,eAHnB;AAILK,IAAAA,mBAAmB,EAAE;AACnBZ,MAAAA,OAAO,EAAE,wBADU;AAEnBa,MAAAA,OAAO,EAAE,aAFU;AAGnBC,MAAAA,OAAO,EAAE;AAHU,KAJhB;AASLC,IAAAA,iBAAiB,EAAE;AACjBf,MAAAA,OAAO,EAAE,4CADQ;AAEjBa,MAAAA,OAAO,EAAE,OAFQ;AAGjBC,MAAAA,OAAO,EAAE;AAHQ;AATd,GAAP;AAeD,CAhBM","sourcesContent":["export const sendMessage = (message) => {\n  return {\n    type: \"SOCKET\",\n    event: \"message\",\n    payload: {\n      ...message,\n      sentAt: new Date(),\n    },\n  };\n};\n\nexport const fetchConversation = (conversation_id) => {\n  return {\n    type: \"REQUEST_CONVERSATION\",\n    method: \"GET\",\n    route: `conversations/single/${conversation_id}`,\n  };\n};\n\nexport const fetchConversations = () => {\n  return {\n    type: \"REQUEST_CONVERSATIONS\",\n    method: \"GET\",\n    route: `conversations`,\n  };\n};\n\nexport const deleteConversation = (conversation_id) => {\n  return {\n    type: \"REQUEST_DELETE_CONVERSATION\",\n    method: \"DELETE\",\n    route: `conversations/${conversation_id}`,\n    successNotification: {\n      message: \"Conversation supprimée\",\n      variant: \"information\",\n      timeout: 1000,\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000,\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}