{"ast":null,"code":"var _jsxFileName = \"/home/gaetan/Documents/GATE/app/client/src/components/AppNavbar.js\";\nimport React, { useContext } from \"react\";\nimport { Icon, ThemeContext } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport { logOut as _logOut } from \"../actions/authActions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Constants from \"expo-constants\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { navigate, navigationRef } from \"../RootNavigation\";\n\nvar AppNavbar = function AppNavbar(_ref) {\n  var _navigationRef$curren;\n\n  var navigation = _ref.navigation,\n      leftButton = _ref.leftButton,\n      title = _ref.title,\n      logOut = _ref.logOut,\n      noRightButton = _ref.noRightButton;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var getActiveRouteName = function getActiveRouteName(state) {\n    var route = state.routes[state.index];\n\n    if (route.state) {\n      return getActiveRouteName(route.state);\n    }\n\n    return route.name;\n  };\n\n  console.log(getActiveRouteName((_navigationRef$curren = navigationRef.current) == null ? void 0 : _navigationRef$curren.getRootState()));\n\n  var LeftButtonComponent = function LeftButtonComponent() {\n    switch (leftButton) {\n      case \"profile\":\n        return React.createElement(Icon, {\n          name: \"menu\",\n          onPress: function onPress() {\n            return navigation.openDrawer();\n          },\n          color: theme.colors.primary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }\n        });\n\n      case \"back\":\n        return React.createElement(Icon, {\n          name: \"arrow-left\",\n          color: theme.colors.primary,\n          onPress: function onPress() {\n            return navigate(\"Main\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }\n        });\n\n      default:\n        return React.createElement(Icon, {\n          name: \"menu\",\n          onPress: function onPress() {\n            return navigation.openDrawer();\n          },\n          color: theme.colors.primary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }\n        });\n    }\n  };\n\n  var CenterComponent = function CenterComponent() {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: theme.colors.primary,\n        fontSize: 20,\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, title));\n  };\n\n  var RightComponent = function RightComponent() {\n    if (noRightButton) {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, React.createElement(Icon, {\n        name: \"logout\",\n        color: theme.colors.grey0,\n        containerStyle: {\n          marginHorizontal: 8\n        },\n        onPress: function onPress() {\n          return logOut();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }));\n    }\n  };\n\n  return React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      paddingTop: Platform.OS === \"web\" ? 10 : Constants.statusBarHeight,\n      paddingHorizontal: 10,\n      paddingBottom: 8,\n      backgroundColor: \"white\",\n      borderBottomColor: \"lightgrey\",\n      borderBottomWidth: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, React.createElement(LeftButtonComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), React.createElement(CenterComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), React.createElement(RightComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    logOut: function logOut() {\n      return dispatch(_logOut());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavbar);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/AppNavbar.js"],"names":["React","useContext","Icon","ThemeContext","connect","logOut","Constants","LinearGradient","navigate","navigationRef","AppNavbar","navigation","leftButton","title","noRightButton","theme","getActiveRouteName","state","route","routes","index","name","console","log","current","getRootState","LeftButtonComponent","openDrawer","colors","primary","CenterComponent","color","fontSize","textAlign","RightComponent","flexDirection","grey0","marginHorizontal","justifyContent","alignItems","paddingTop","Platform","OS","statusBarHeight","paddingHorizontal","paddingBottom","backgroundColor","borderBottomColor","borderBottomWidth","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { Icon, ThemeContext } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport { logOut } from \"../actions/authActions\";\nimport { View, Text, Platform } from \"react-native\";\nimport Constants from \"expo-constants\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { navigate, navigationRef } from \"../RootNavigation\";\n\nconst AppNavbar = ({\n  navigation,\n  leftButton,\n  title,\n  logOut,\n  noRightButton,\n}) => {\n  const { theme } = useContext(ThemeContext);\n\n  const getActiveRouteName = (state) => {\n    const route = state.routes[state.index];\n\n    if (route.state) {\n      // Dive into nested navigators\n      return getActiveRouteName(route.state);\n    }\n\n    return route.name;\n  };\n\n  console.log(getActiveRouteName(navigationRef.current?.getRootState()));\n\n  const LeftButtonComponent = () => {\n    switch (leftButton) {\n      case \"profile\":\n        return (\n          <Icon\n            name=\"menu\"\n            onPress={() => navigation.openDrawer()}\n            color={theme.colors.primary}\n          />\n        );\n      case \"back\":\n        return (\n          <Icon\n            name=\"arrow-left\"\n            color={theme.colors.primary}\n            onPress={() => navigate(\"Main\")}\n          />\n        );\n      default:\n        return (\n          <Icon\n            name=\"menu\"\n            onPress={() => navigation.openDrawer()}\n            color={theme.colors.primary}\n          />\n        );\n    }\n  };\n\n  const CenterComponent = () => {\n    return (\n      <View>\n        <Text\n          style={{\n            color: theme.colors.primary,\n            fontSize: 20,\n            textAlign: \"center\",\n          }}\n        >\n          {title}\n        </Text>\n      </View>\n    );\n  };\n\n  const RightComponent = () => {\n    if (noRightButton) {\n      return <View></View>;\n    } else {\n      return (\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon\n            name=\"logout\"\n            color={theme.colors.grey0}\n            containerStyle={{ marginHorizontal: 8 }}\n            onPress={() => logOut()}\n          />\n        </View>\n      );\n    }\n  };\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        paddingTop: Platform.OS === \"web\" ? 10 : Constants.statusBarHeight,\n        paddingHorizontal: 10,\n        paddingBottom: 8,\n        backgroundColor: \"white\",\n        borderBottomColor: \"lightgrey\",\n        borderBottomWidth: 1,\n      }}\n    >\n      <LeftButtonComponent />\n      <CenterComponent />\n      <RightComponent />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logOut: () => dispatch(logOut()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavbar);\n"]},"metadata":{},"sourceType":"module"}