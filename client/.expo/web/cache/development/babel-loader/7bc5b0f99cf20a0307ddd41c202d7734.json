{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/LogInScreen.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Input, Button, Icon } from \"react-native-elements\";\nimport { logIn as _logIn } from \"../actions/authActions\";\n\nvar logInScreen = function logInScreen(_ref) {\n  var switchPanel = _ref.switchPanel,\n      auth = _ref.auth,\n      logIn = _ref.logIn;\n\n  var _useState = useState(\"gaetan.keribin@gmail.com\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"jebsoJhez85\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var handleLogIn = function handleLogIn() {\n    return _regeneratorRuntime.async(function handleLogIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (email) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setErrorMessage(\"Mél invalide.\"));\n\n          case 2:\n            if (password) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setErrorMessage(\"Mot de passe invalide.\"));\n\n          case 4:\n            logIn({\n              email: email,\n              password: password\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Email\",\n    leftIcon: React.createElement(Icon, {\n      name: \"email\",\n      type: \"material-community\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }),\n    value: email,\n    onChangeText: function onChangeText(value) {\n      return setEmail(value);\n    },\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }\n    }),\n    label: \"Mot de passe\",\n    secureTextEntry: true,\n    value: password,\n    containerStyle: {\n      marginBottom: 30,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    errorStyle: {\n      color: \"red\"\n    },\n    errorMessage: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Se connecter\",\n    onPress: handleLogIn,\n    loading: auth.isLoggingIn,\n    containerStyle: {\n      marginBottom: 20,\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Nouveau? Je m'enregistre.\",\n    type: \"clear\",\n    onPress: switchPanel,\n    containerStyle: {\n      marginBottom: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    logIn: function logIn(credentials) {\n      return dispatch(_logIn(credentials));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(logInScreen);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 12\n  },\n  textInput: {\n    height: 40,\n    width: \"90%\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    marginTop: 8\n  }\n});","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/LogInScreen.js"],"names":["React","useState","connect","compose","Input","Button","Icon","logIn","logInScreen","switchPanel","auth","email","setEmail","password","setPassword","errorMessage","setErrorMessage","handleLogIn","styles","container","value","marginBottom","marginTop","color","isLoggingIn","mapStateToProps","state","mapDispatchToProps","dispatch","credentials","StyleSheet","create","flex","justifyContent","alignItems","paddingHorizontal","textInput","height","width","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { Input, Button, Icon } from \"react-native-elements\";\nimport { logIn } from \"../actions/authActions\";\n\nconst logInScreen = ({ switchPanel, auth, logIn }) => {\n  const [email, setEmail] = useState(\"gaetan.keribin@gmail.com\");\n  const [password, setPassword] = useState(\"jebsoJhez85\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleLogIn = async () => {\n    {\n      if (!email) {\n        return setErrorMessage(\"Mél invalide.\");\n      }\n      if (!password) {\n        return setErrorMessage(\"Mot de passe invalide.\");\n      }\n    }\n\n    logIn({ email, password });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Input\n        placeholder=\"Email\"\n        leftIcon={<Icon name=\"email\" type=\"material-community\" />}\n        value={email}\n        onChangeText={value => setEmail(value)}\n        label=\"Email\"\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={<Icon name=\"lock\" />}\n        label=\"Mot de passe\"\n        secureTextEntry\n        value={password}\n        containerStyle={{ marginBottom: 30, marginTop: 8 }}\n        onChangeText={value => setPassword(value)}\n        errorStyle={{ color: \"red\" }}\n        errorMessage={errorMessage}\n      />\n      <Button\n        title=\"Se connecter\"\n        onPress={handleLogIn}\n        loading={auth.isLoggingIn}\n        containerStyle={{ marginBottom: 20, marginTop: 8 }}\n      />\n      <Button\n        title=\"Nouveau? Je m'enregistre.\"\n        type=\"clear\"\n        onPress={switchPanel}\n        containerStyle={{ marginBottom: 30 }}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logIn: credentials => dispatch(logIn(credentials))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(logInScreen);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 12\n  },\n  textInput: {\n    height: 40,\n    width: \"90%\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    marginTop: 8\n  }\n});\n"]},"metadata":{},"sourceType":"module"}