{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/CustomOverlay.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { resetOverlay } from \"../actions/overlayAction\";\nimport * as RootNavigation from \"../RootNavigation.js\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nvar Notifier = function Notifier(_ref) {\n  var notification = _ref.notification;\n  if (!notification) return null;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  if (notification.show === true) {\n    return React.createElement(View, {\n      style: {\n        position: \"absolute\",\n        height: Dimensions.get(\"window\").height,\n        width: Dimensions.get(\"window\").width,\n        backgroundColor: theme.colors.grey6,\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      containerStyle: {\n        flex: 1,\n        minHeight: 12\n      },\n      style: {\n        flex: 1,\n        minHeight: 12\n      },\n      onPress: function onPress() {\n        return reset();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, React.createElement(TouchableOpacity, {\n      containerStyle: {\n        flex: 1,\n        minWidth: 12\n      },\n      style: {\n        flex: 1,\n        minWidth: 12\n      },\n      onPress: function onPress() {\n        return reset();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), React.createElement(View, {\n      style: {\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, React.createElement(Icon, {\n      containerStyle: {\n        marginBottom: 8\n      },\n      size: 30,\n      name: notification.variant === \"success\" ? \"check-circle-outline\" : notification.variant === \"warning\" ? \"alert-circle-outline\" : notification.variant === \"error\" ? \"close-circle-outline\" : notification.icon,\n      color: notification.variant === \"success\" ? \"green\" : notification.variant === \"warning\" ? \"yellow\" : notification.variant === \"error\" ? \"red\" : notification.variant === \"error\" ? \"blue\" : theme.colors.grey1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), notification.message && React.createElement(Text, {\n      style: {\n        fontSize: 14\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, notification.message)), React.createElement(TouchableOpacity, {\n      containerStyle: {\n        flex: 1,\n        minWidth: 12\n      },\n      style: {\n        flex: 1,\n        minWidth: 12\n      },\n      onPress: function onPress() {\n        return reset();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    })), React.createElement(TouchableOpacity, {\n      containerStyle: {\n        flex: 1,\n        minHeight: 12\n      },\n      style: {\n        flex: 1,\n        minHeight: 12\n      },\n      onPress: function onPress() {\n        return reset();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return null;\n};\n\nvar InputForm = function InputForm(_ref2) {\n  var form = _ref2.form;\n  if (!form) return null;\n\n  var _useContext2 = useContext(ThemeContext),\n      theme = _useContext2.theme;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: 10,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingHorizontal: 12,\n      paddingVertical: 8,\n      elevation: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, form.message && React.createElement(Text, {\n    style: {\n      fontSize: 14\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 26\n    }\n  }, form.message)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    value: inputValue,\n    multiline: true,\n    placeholder: \"Ecrivez ici.\",\n    placeholderTextColor: \"grey\",\n    onChangeText: function onChangeText(text) {\n      return setInputValue(text);\n    },\n    style: {\n      backgroundColor: theme.colors.grey5,\n      borderColor: theme.colors.grey4,\n      borderWidth: 1,\n      borderRadius: 5,\n      paddingVertical: 4,\n      paddingHorizontal: 4,\n      maxHeight: 80,\n      alignItems: \"center\",\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    containerStyle: {\n      height: 30\n    },\n    icon: React.createElement(Icon, {\n      name: \"send\",\n      size: 20,\n      color: inputValue ? theme.colors.primary : theme.colors.grey2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }),\n    disabled: !inputValue,\n    type: \"clear\",\n    onPress: function onPress() {\n      dispatch(form.action(_objectSpread(_defineProperty({}, form.inputName, inputValue), form.action.params)));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar Menu = function Menu(_ref3) {\n  var _form$buttons;\n\n  var menu = _ref3.menu;\n  if (!form) return null;\n\n  var _useContext3 = useContext(ThemeContext),\n      theme = _useContext3.theme;\n\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: 10,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingHorizontal: 12,\n      paddingVertical: 8,\n      elevation: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }, (_form$buttons = form.buttons) == null ? void 0 : _form$buttons.map(function (button) {\n    return React.createElement(Button, {\n      title: button.title,\n      onPress: dispatch(button.action()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nvar CustomOverlay = function CustomOverlay() {\n  var dispatch = useDispatch();\n  var overlay = useSelector(function (state) {\n    return state.overlay;\n  });\n  console.log(overlay);\n  if (overlay.show === false) return null;\n\n  var _useContext4 = useContext(ThemeContext),\n      theme = _useContext4.theme;\n\n  overlay.timeout && setTimeout(function () {\n    reset();\n    overlay.redirect && RootNavigation.navigate(overlay.redirect, {});\n    notification.dispatchCallback && dispatch({\n      type: notification.dispatchCallback\n    });\n  }, notification.timeout);\n  return React.createElement(View, {\n    style: {\n      position: \"absolute\",\n      height: Dimensions.get(\"window\").height,\n      width: Dimensions.get(\"window\").width,\n      backgroundColor: theme.colors.grey6,\n      alignContent: \"center\",\n      justifyContent: \"center\",\n      alignItems: \"stretch\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    containerStyle: {\n      flex: 1,\n      minHeight: 12\n    },\n    style: {\n      flex: 1,\n      minHeight: 12\n    },\n    onPress: function onPress() {\n      return dispatch(resetOverlay());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    containerStyle: {\n      flex: 1,\n      minWidth: 12\n    },\n    style: {\n      flex: 1,\n      minWidth: 12\n    },\n    onPress: function onPress() {\n      return dispatch(resetOverlay());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }), overlay.notification && React.createElement(Notifier, {\n    notification: overlay.notification,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }), overlay.form && React.createElement(InputForm, {\n    form: overlay.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 26\n    }\n  }), overlay.menu && React.createElement(Menu, {\n    menu: overlay.menu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 26\n    }\n  }), React.createElement(TouchableOpacity, {\n    containerStyle: {\n      flex: 1,\n      minWidth: 12\n    },\n    style: {\n      flex: 1,\n      minWidth: 12\n    },\n    onPress: function onPress() {\n      return dispatch(resetOverlay());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    containerStyle: {\n      flex: 1,\n      minHeight: 12\n    },\n    style: {\n      flex: 1,\n      minHeight: 12\n    },\n    onPress: function onPress() {\n      return dispatch(resetOverlay());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    notification: state.notification\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    reset: function reset() {\n      return dispatch(resetOverlay());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomOverlay);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/CustomOverlay.js"],"names":["React","useContext","useState","connect","useDispatch","useSelector","Icon","ThemeContext","Button","resetOverlay","RootNavigation","TouchableOpacity","Notifier","notification","theme","show","position","height","Dimensions","get","width","backgroundColor","colors","grey6","alignContent","justifyContent","alignItems","flex","minHeight","reset","flexDirection","minWidth","borderRadius","paddingHorizontal","paddingVertical","elevation","marginBottom","variant","icon","grey1","message","fontSize","InputForm","form","inputValue","setInputValue","dispatch","marginTop","text","grey5","borderColor","grey4","borderWidth","maxHeight","primary","grey2","action","inputName","params","Menu","menu","buttons","map","button","title","CustomOverlay","overlay","state","console","log","timeout","setTimeout","redirect","navigate","dispatchCallback","type","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { Text, View, Dimensions, TextInput } from \"react-native\";\nimport { Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { resetOverlay } from \"../actions/overlayAction\";\nimport * as RootNavigation from \"../RootNavigation.js\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nconst Notifier = ({ notification }) => {\n  if (!notification) return null;\n  const { theme } = useContext(ThemeContext);\n\n  if (notification.show === true) {\n    return (\n      <View\n        style={{\n          position: \"absolute\",\n          height: Dimensions.get(\"window\").height,\n          width: Dimensions.get(\"window\").width,\n          backgroundColor: theme.colors.grey6,\n          alignContent: \"center\",\n          justifyContent: \"center\",\n          alignItems: \"stretch\",\n        }}\n      >\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minHeight: 12 }}\n          style={{\n            flex: 1,\n            minHeight: 12,\n          }}\n          onPress={() => reset()}\n        />\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <TouchableOpacity\n            containerStyle={{ flex: 1, minWidth: 12 }}\n            style={{\n              flex: 1,\n              minWidth: 12,\n            }}\n            onPress={() => reset()}\n          />\n          <View\n            style={{\n              backgroundColor: \"white\",\n              borderRadius: 10,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              paddingHorizontal: 12,\n              paddingVertical: 8,\n              elevation: 8,\n            }}\n          >\n            <Icon\n              containerStyle={{ marginBottom: 8 }}\n              size={30}\n              name={\n                notification.variant === \"success\"\n                  ? \"check-circle-outline\"\n                  : notification.variant === \"warning\"\n                  ? \"alert-circle-outline\"\n                  : notification.variant === \"error\"\n                  ? \"close-circle-outline\"\n                  : notification.icon\n              }\n              color={\n                notification.variant === \"success\"\n                  ? \"green\"\n                  : notification.variant === \"warning\"\n                  ? \"yellow\"\n                  : notification.variant === \"error\"\n                  ? \"red\"\n                  : notification.variant === \"error\"\n                  ? \"blue\"\n                  : theme.colors.grey1\n              }\n            />\n            {notification.message && (\n              <Text style={{ fontSize: 14 }}>{notification.message}</Text>\n            )}\n          </View>\n          <TouchableOpacity\n            containerStyle={{ flex: 1, minWidth: 12 }}\n            style={{\n              flex: 1,\n              minWidth: 12,\n            }}\n            onPress={() => reset()}\n          />\n        </View>\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minHeight: 12 }}\n          style={{\n            flex: 1,\n            minHeight: 12,\n          }}\n          onPress={() => reset()}\n        />\n      </View>\n    );\n  }\n  return null;\n};\n\nconst InputForm = ({ form }) => {\n  if (!form) return null;\n  const { theme } = useContext(ThemeContext);\n  const [inputValue, setInputValue] = useState(\"\");\n  const dispatch = useDispatch();\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          marginTop: 8,\n        }}\n      >\n        {form.message && <Text style={{ fontSize: 14 }}>{form.message}</Text>}\n      </View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          marginTop: 8,\n        }}\n      >\n        <TextInput\n          value={inputValue}\n          multiline\n          placeholder=\"Ecrivez ici.\"\n          placeholderTextColor=\"grey\"\n          onChangeText={(text) => setInputValue(text)}\n          style={{\n            backgroundColor: theme.colors.grey5,\n            borderColor: theme.colors.grey4,\n            borderWidth: 1,\n            borderRadius: 5,\n            paddingVertical: 4,\n            paddingHorizontal: 4,\n            maxHeight: 80,\n            alignItems: \"center\",\n            alignContent: \"center\",\n            justifyContent: \"center\",\n          }}\n        />\n        <Button\n          containerStyle={{ height: 30 }}\n          icon={\n            <Icon\n              name=\"send\"\n              size={20}\n              color={inputValue ? theme.colors.primary : theme.colors.grey2}\n            />\n          }\n          disabled={!inputValue}\n          type=\"clear\"\n          onPress={() => {\n            dispatch(\n              form.action({\n                [form.inputName]: inputValue,\n                ...form.action.params,\n              })\n            );\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst Menu = ({ menu }) => {\n  if (!form) return null;\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      {form.buttons?.map((button) => {\n        return (\n          <Button title={button.title} onPress={dispatch(button.action())} />\n        );\n      })}\n    </View>\n  );\n};\n\nconst CustomOverlay = () => {\n  const dispatch = useDispatch();\n  const overlay = useSelector((state) => state.overlay);\n  console.log(overlay);\n  if (overlay.show === false) return null;\n  const { theme } = useContext(ThemeContext);\n\n  overlay.timeout &&\n    setTimeout(() => {\n      reset();\n      overlay.redirect && RootNavigation.navigate(overlay.redirect, {});\n      notification.dispatchCallback &&\n        dispatch({ type: notification.dispatchCallback });\n    }, notification.timeout);\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        height: Dimensions.get(\"window\").height,\n        width: Dimensions.get(\"window\").width,\n        backgroundColor: theme.colors.grey6,\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\",\n      }}\n    >\n      <TouchableOpacity\n        containerStyle={{ flex: 1, minHeight: 12 }}\n        style={{\n          flex: 1,\n          minHeight: 12,\n        }}\n        onPress={() => dispatch(resetOverlay())}\n      />\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minWidth: 12 }}\n          style={{\n            flex: 1,\n            minWidth: 12,\n          }}\n          onPress={() => dispatch(resetOverlay())}\n        />\n        {overlay.notification && (\n          <Notifier notification={overlay.notification} />\n        )}\n        {overlay.form && <InputForm form={overlay.form} />}\n        {overlay.menu && <Menu menu={overlay.menu} />}\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minWidth: 12 }}\n          style={{\n            flex: 1,\n            minWidth: 12,\n          }}\n          onPress={() => dispatch(resetOverlay())}\n        />\n      </View>\n      <TouchableOpacity\n        containerStyle={{ flex: 1, minHeight: 12 }}\n        style={{\n          flex: 1,\n          minHeight: 12,\n        }}\n        onPress={() => dispatch(resetOverlay())}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  notification: state.notification,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    reset: () => dispatch(resetOverlay()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomOverlay);\n"]},"metadata":{},"sourceType":"module"}