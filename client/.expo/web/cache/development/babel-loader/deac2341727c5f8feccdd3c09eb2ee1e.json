{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from \"lodash\";\nvar initialState = {\n  conversations: [],\n  conversationsIds: [],\n  interlocutorsIds: [],\n  lastUpdatedAt: null,\n  isLoaded: false,\n  isFetchingConversations: false,\n  isFetchingConversation: false\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"REQUEST_CONVERSATIONS:SUCCESS\":\n      return _objectSpread({}, state, {\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        isFetchingConversations: false\n      }, action.data);\n\n    case \"REQUEST_CONVERSATION:SUCCESS\":\n      state.conversations.splice(state.conversations.map(function (c) {\n        return c._id;\n      }).indexOf(action.data._id), 1, action.data);\n      return _objectSpread({}, state, {\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true\n      });\n\n    case \"PRIVATE_CONVERSATION_ACK\":\n    case \"RECEIVE_NEW_CONVERSATION\":\n      return _objectSpread({}, state, {\n        conversations: [action.conversation].concat(_toConsumableArray(state.conversations)),\n        lastUpdatedAt: action.receivedAt\n      });\n\n    case \"PRIVATE_MESSAGE_ACK\":\n    case \"RECEIVE_MESSAGE\":\n      return _objectSpread({}, state, {\n        lastUpdatedAt: action.receivedAt,\n        conversations: [_objectSpread({}, state.conversations.filter(function (conv) {\n          return conv._id === action.conversation._id;\n        })[0], {\n          lastMessage: action.message,\n          messages: [action.message].concat(_toConsumableArray(state.conversations.filter(function (conv) {\n            return conv._id === action.conversation._id;\n          })[0].messages))\n        })].concat(_toConsumableArray(state.conversations.filter(function (conv) {\n          return conv._id !== action.conversation._id;\n        }))),\n        isLoaded: true\n      });\n      var i = state.conversations.map(function (c) {\n        return c._id;\n      }).indexOf(action.message.conversation_id);\n      state.conversations[i].lastMessage = action.message;\n      state.conversations[i].messages.splice(0, 0, action.message);\n      return state;\n\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/store/reducers/chatReducer.js"],"names":["_","initialState","conversations","conversationsIds","interlocutorsIds","lastUpdatedAt","isLoaded","isFetchingConversations","isFetchingConversation","state","action","type","receivedAt","data","splice","map","c","_id","indexOf","conversation","filter","conv","lastMessage","message","messages","i","conversation_id"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nconst initialState = {\n  conversations: [],\n  conversationsIds: [],\n  interlocutorsIds: [],\n  lastUpdatedAt: null,\n  isLoaded: false,\n  isFetchingConversations: false,\n  isFetchingConversation: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_CONVERSATIONS:SUCCESS\":\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        isFetchingConversations: false,\n        ...action.data,\n      };\n    case \"REQUEST_CONVERSATION:SUCCESS\":\n      state.conversations.splice(\n        state.conversations\n          .map(function (c) {\n            return c._id;\n          })\n          .indexOf(action.data._id),\n        1,\n        action.data\n      );\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n      };\n    case \"PRIVATE_CONVERSATION_ACK\":\n    case \"RECEIVE_NEW_CONVERSATION\":\n      return {\n        ...state,\n        conversations: [action.conversation, ...state.conversations],\n        lastUpdatedAt: action.receivedAt,\n      };\n    case \"PRIVATE_MESSAGE_ACK\":\n    case \"RECEIVE_MESSAGE\":\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        conversations: [\n          {\n            ...state.conversations.filter(\n              (conv) => conv._id === action.conversation._id\n            )[0],\n            lastMessage: action.message,\n            messages: [\n              action.message,\n              ...state.conversations.filter(\n                (conv) => conv._id === action.conversation._id\n              )[0].messages,\n            ],\n          },\n          ...state.conversations.filter(\n            (conv) => conv._id !== action.conversation._id\n          ),\n        ],\n        isLoaded: true,\n      };\n      let i = state.conversations\n        .map(function (c) {\n          return c._id;\n        })\n        .indexOf(action.message.conversation_id);\n      state.conversations[i].lastMessage = action.message;\n      state.conversations[i].messages.splice(0, 0, action.message);\n\n      return state;\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}