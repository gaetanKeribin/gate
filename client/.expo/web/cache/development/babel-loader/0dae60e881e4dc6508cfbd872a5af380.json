{"ast":null,"code":"var _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/Jobs/JobsReadScreen.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Icon } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { fetchJobs as _fetchJobs } from \"../../actions/jobsActions\";\n\nvar JobsReadScreen = function JobsReadScreen(_ref) {\n  var route = _ref.route;\n  var job = route.params.job;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"space-between\",\n      paddingVertical: 10,\n      paddingHorizontal: 8,\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      flex: 1,\n      paddingHorizontal: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    color: \"grey\",\n    style: {\n      color: \"grey\",\n      fontSize: 12,\n      textAlignVertical: \"bottom\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, _.capitalize(moment(job.publishedAt).locale(\"fr\").fromNow()))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"briefcase\",\n    size: 25,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8,\n      fontSize: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, job.organisation)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"map-marker\",\n    size: 25,\n    color: theme.colors.grey2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8,\n      fontSize: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, _.capitalize(job.city))), React.createElement(Text, {\n    style: {\n      color: theme.colors.grey3,\n      fontWeight: \"bold\",\n      fontSize: 16,\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Description\"), React.createElement(Text, {\n    style: {\n      marginBottom: 4,\n      textAlign: \"justify\",\n      fontSize: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, job.jobDesc), job.salary && React.createElement(Text, {\n    style: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"R\\xE9mun\\xE9ration \\xE0 hauteur de \", job.salary, \" brut.\"), job.asap && React.createElement(Text, {\n    style: {\n      color: theme.colors.primary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Poste \\xE0 pourvoir d\\xE8s que possible.\"), React.createElement(Text, {\n    style: {\n      color: theme.colors.grey3,\n      fontWeight: \"bold\",\n      fontSize: 16,\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Contact\"), React.createElement(Text, {\n    style: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, job.contact)));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    jobs: state.jobs\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchJobs: function fetchJobs() {\n      return dispatch(_fetchJobs());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobsReadScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/Jobs/JobsReadScreen.js"],"names":["React","useState","useEffect","useCallback","connect","moment","_","Icon","theme","fetchJobs","JobsReadScreen","route","job","params","flex","alignContent","paddingVertical","paddingHorizontal","backgroundColor","alignItems","color","fontSize","textAlignVertical","capitalize","publishedAt","locale","fromNow","flexDirection","marginStart","organisation","colors","grey2","city","grey3","fontWeight","marginTop","marginBottom","textAlign","jobDesc","salary","asap","primary","contact","mapStateToProps","state","auth","jobs","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { View, Text, ScrollView } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { fetchJobs } from \"../../actions/jobsActions\";\n\nconst JobsReadScreen = ({ route }) => {\n  const { job } = route.params;\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\"\n      }}\n    >\n      <ScrollView\n        style={{\n          flex: 1,\n          paddingHorizontal: 12\n        }}\n      >\n        <View style={{ alignItems: \"flex-end\" }}>\n          <Text\n            color=\"grey\"\n            style={{\n              color: \"grey\",\n              fontSize: 12,\n              textAlignVertical: \"bottom\"\n            }}\n          >\n            {_.capitalize(\n              moment(job.publishedAt)\n                .locale(\"fr\")\n                .fromNow()\n            )}\n          </Text>\n        </View>\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon name=\"briefcase\" size={25} color=\"grey\" />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginStart: 8,\n              fontSize: 20\n            }}\n          >\n            {job.organisation}\n          </Text>\n        </View>\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon name=\"map-marker\" size={25} color={theme.colors.grey2} />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginStart: 8,\n              fontSize: 20\n            }}\n          >\n            {_.capitalize(job.city)}\n          </Text>\n        </View>\n        <Text\n          style={{\n            color: theme.colors.grey3,\n            fontWeight: \"bold\",\n            fontSize: 16,\n            marginTop: 8\n          }}\n        >\n          Description\n        </Text>\n        <Text style={{ marginBottom: 4, textAlign: \"justify\", fontSize: 16 }}>\n          {job.jobDesc}\n        </Text>\n        {job.salary && (\n          <Text style>Rémunération à hauteur de {job.salary} brut.</Text>\n        )}\n        {job.asap && (\n          <Text style={{ color: theme.colors.primary }}>\n            Poste à pourvoir dès que possible.\n          </Text>\n        )}\n        <Text\n          style={{\n            color: theme.colors.grey3,\n            fontWeight: \"bold\",\n            fontSize: 16,\n            marginTop: 8\n          }}\n        >\n          Contact\n        </Text>\n        <Text style>{job.contact}</Text>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  jobs: state.jobs\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchJobs: () => dispatch(fetchJobs())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobsReadScreen);\n"]},"metadata":{},"sourceType":"module"}