{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/Messages/MessagesLobbyScreen.js\";\nimport React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { SearchBar, Avatar, ThemeContext, Button, Icon, Overlay } from \"react-native-elements\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchUsers as _fetchUsers } from \"../../actions/usersActions\";\nimport { fetchConversations as _fetchConversations, sendMessage as _sendMessage, deleteConversation as _deleteConversation } from \"../../actions/chatActions\";\n\nvar SearchResultItem = function SearchResultItem(_ref) {\n  var _item$avatar;\n\n  var item = _ref.item,\n      theme = _ref.theme,\n      onSendMessage = _ref.onSendMessage,\n      navigation = _ref.navigation,\n      chat = _ref.chat;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showMessageForm = _useState2[0],\n      setShowMessageForm = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newMessage = _useState4[0],\n      setNewMessage = _useState4[1];\n\n  return React.createElement(TouchableOpacity, {\n    onPress: chat.interlocutorsIds.includes(item._id) ? function () {\n      return navigation.navigate(\"Room\", {\n        conversation_id: chat.convIdsWithPartsIds.filter(function (element) {\n          return element.participants.includes(item._id) === true;\n        }).filter(function (conv) {\n          return conv.participants.length === 2;\n        })[0]._id\n      });\n    } : function () {\n      return setShowMessageForm(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      paddingVertical: 4,\n      paddingHorizontal: 8,\n      borderBottomColor: theme.colors.grey5,\n      borderBottomWidth: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      alignContent: \"center\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginRight: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, item.avatar ? React.createElement(Avatar, {\n    source: {\n      uri: \"http://10.0.2.2:8005/api/files/avatar/\" + ((_item$avatar = item.avatar) == null ? void 0 : _item$avatar.filename)\n    },\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }) : React.createElement(Avatar, {\n    size: \"small\",\n    title: item.firstname[0].concat(item.lastname[0]).toUpperCase(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    style: {\n      paddingLeft: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, _.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname))), React.createElement(Overlay, {\n    isVisible: showMessageForm,\n    width: \"auto\",\n    containerStyle: {},\n    height: \"auto\",\n    overlayStyle: {\n      borderRadius: 6\n    },\n    onBackdropPress: function onBackdropPress() {\n      setShowMessageForm(false);\n      setNewMessage(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, _.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      backgroundColor: \"white\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    value: newMessage,\n    multiline: true,\n    placeholder: \"Ecrivez ici.\",\n    placeholderTextColor: \"grey\",\n    width: 250,\n    onChangeText: function onChangeText(text) {\n      return setNewMessage(text);\n    },\n    style: {\n      backgroundColor: theme.colors.grey5,\n      borderColor: theme.colors.grey4,\n      borderWidth: 1,\n      borderRadius: 5,\n      paddingVertical: 2,\n      paddingHorizontal: 4,\n      maxHeight: 80\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    containerStyle: {\n      height: 30\n    },\n    icon: React.createElement(Icon, {\n      name: \"send\",\n      size: 20,\n      color: newMessage ? theme.colors.primary : theme.colors.grey2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }),\n    disabled: !newMessage,\n    type: \"clear\",\n    onPress: function onPress() {\n      onSendMessage(newMessage, item._id);\n      setNewMessage(\"\");\n      setShowMessageForm(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  })))));\n};\n\nvar Item = function Item(_ref2) {\n  var _participantsArr$0$av;\n\n  var item = _ref2.item,\n      navigation = _ref2.navigation,\n      auth = _ref2.auth,\n      theme = _ref2.theme,\n      deleteConversation = _ref2.deleteConversation,\n      fetchConversations = _ref2.fetchConversations;\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showActionMenu = _useState6[0],\n      setShowActionMenu = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      deleting = _useState8[0],\n      setDeleting = _useState8[1];\n\n  var participantsArr = item.participants.filter(function (participant) {\n    return participant._id !== auth.user._id;\n  });\n\n  var listParticipants = function listParticipants(item) {\n    if (participantsArr.length > 1) {\n      var participantsList = participantsArr.map(function (participant) {\n        return participant.firstname;\n      });\n      return participantsList.toString().replace(\",\", \", \");\n    } else {\n      return _.capitalize(participantsArr[0].firstname).concat(\" \", _.capitalize(participantsArr[0].lastname));\n    }\n  };\n\n  var participants = listParticipants(item);\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Room\", {\n        conversation: item,\n        title: item.participants.filter(function (user) {\n          return user._id !== auth.user._id;\n        })\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: 8,\n      paddingVertical: 8,\n      borderBottomColor: \"white\",\n      borderBottomWidth: 3,\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      alignContent: \"center\",\n      justifyContent: \"center\",\n      paddingRight: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, participantsArr[0].avatar ? React.createElement(Avatar, {\n    source: {\n      uri: \"http://10.0.2.2:8005/api/files/avatar/\" + ((_participantsArr$0$av = participantsArr[0].avatar) == null ? void 0 : _participantsArr$0$av.filename)\n    },\n    size: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }) : React.createElement(Avatar, {\n    size: \"medium\",\n    title: participantsArr[0].firstname[0].concat(participantsArr[0].lastname[0]).toUpperCase(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"space-between\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1,\n      justifyContent: \"space-between\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      fontSize: 16,\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }, participants), React.createElement(Text, {\n    color: \"grey\",\n    style: {\n      color: \"grey\",\n      fontSize: 10,\n      textAlignVertical: \"bottom\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, _.capitalize(moment(item.lastMessage.sentAt).locale(\"fr\").fromNow()))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 15\n    }\n  }, item.lastMessage.sender === auth.user._id ? React.createElement(Icon, {\n    name: \"arrow-top-right\",\n    color: theme.colors.grey1,\n    size: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }) : React.createElement(Icon, {\n    name: \"arrow-bottom-left\",\n    color: theme.colors.grey3,\n    size: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 19\n    }\n  })), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"center\",\n      fontSize: 14,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, item.lastMessage.text), React.createElement(View, {\n    style: {\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    name: \"dots-horizontal\",\n    style: {\n      alignSelf: \"flex-end\"\n    },\n    onPress: function onPress() {\n      return setShowActionMenu(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }\n  })), showActionMenu && React.createElement(Button, {\n    title: \"Supprimer la conversation\",\n    loading: deleting,\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDeleting(true);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(deleteConversation(item._id));\n\n            case 3:\n              setDeleting(false);\n              setShowActionMenu(false);\n              fetchConversations();\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nvar ChatLobbyScreen = function ChatLobbyScreen(_ref3) {\n  var navigation = _ref3.navigation,\n      fetchConversations = _ref3.fetchConversations,\n      fetchUsers = _ref3.fetchUsers,\n      chat = _ref3.chat,\n      users = _ref3.users,\n      auth = _ref3.auth,\n      sendMessage = _ref3.sendMessage,\n      deleteConversation = _ref3.deleteConversation;\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      refreshing = _useState10[0],\n      setRefreshing = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      search = _useState12[0],\n      setSearch = _useState12[1];\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  useEffect(function () {\n    function fetchData() {\n      fetchConversations();\n      fetchUsers();\n    }\n\n    fetchData();\n  }, []);\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    fetchConversations();\n    setRefreshing(false);\n  }, [refreshing]);\n\n  var searchProcess = function searchProcess() {\n    var searchResults = [];\n    users.users.forEach(function (user) {\n      if (user._id !== auth.user._id) {\n        if (user.firstname.includes(search.toLowerCase()) === true || user.lastname.includes(search.toLowerCase())) {\n          searchResults.push(user);\n        }\n      }\n    });\n    return searchResults;\n  };\n\n  var onSendMessage = function onSendMessage(newMessage, recipient) {\n    return _regeneratorRuntime.async(function onSendMessage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (newMessage) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(sendMessage({\n              message: {\n                text: newMessage,\n                sentAt: new Date()\n              },\n              recipients: [recipient]\n            }));\n\n          case 4:\n            setSearch(null);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      paddingVertical: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }\n  }, React.createElement(SearchBar, {\n    placeholder: \"Chercher un alumni ici...\",\n    onChangeText: setSearch,\n    value: search,\n    lightTheme: true,\n    platform: \"android\",\n    containerStyle: {\n      paddingTop: 0,\n      height: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }\n  }), users.isLoaded && React.createElement(FlatList, {\n    style: {},\n    data: search && searchProcess(),\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item;\n      return React.createElement(SearchResultItem, {\n        item: item,\n        theme: theme,\n        onSendMessage: onSendMessage,\n        chat: chat,\n        navigation: navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 15\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 11\n    }\n  }), !users.isLoaded && React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 11\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }\n  }))), chat.isLoaded ? chat.conversations.length > 0 ? React.createElement(FlatList, {\n    style: {},\n    data: chat.conversations,\n    renderItem: function renderItem(_ref5) {\n      var item = _ref5.item;\n      return React.createElement(Item, {\n        item: item,\n        auth: auth,\n        navigation: navigation,\n        theme: theme,\n        deleteConversation: deleteConversation,\n        fetchConversations: fetchConversations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 15\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 15\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 11\n    }\n  }) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      color: theme.colors.grey3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  }, \"Aucune conversation\"), React.createElement(Button, {\n    title: \"Rafraichir\",\n    type: \"clear\",\n    onPress: fetchConversations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 13\n    }\n  })) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    chat: state.chat,\n    users: state.users\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchConversations: function fetchConversations() {\n      return dispatch(_fetchConversations());\n    },\n    fetchUsers: function fetchUsers() {\n      return dispatch(_fetchUsers());\n    },\n    sendMessage: function sendMessage(message) {\n      return dispatch(_sendMessage(message));\n    },\n    deleteConversation: function deleteConversation(conversation_id) {\n      return dispatch(_deleteConversation(conversation_id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatLobbyScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/Messages/MessagesLobbyScreen.js"],"names":["React","useState","useEffect","useCallback","useContext","connect","SearchBar","Avatar","ThemeContext","Button","Icon","Overlay","_","moment","fetchUsers","fetchConversations","sendMessage","deleteConversation","SearchResultItem","item","theme","onSendMessage","navigation","chat","showMessageForm","setShowMessageForm","newMessage","setNewMessage","interlocutorsIds","includes","_id","navigate","conversation_id","convIdsWithPartsIds","filter","element","participants","conv","length","flexDirection","alignItems","paddingVertical","paddingHorizontal","borderBottomColor","colors","grey5","borderBottomWidth","alignContent","justifyContent","marginRight","avatar","uri","filename","firstname","concat","lastname","toUpperCase","paddingLeft","capitalize","borderRadius","textAlign","backgroundColor","marginTop","text","borderColor","grey4","borderWidth","maxHeight","height","primary","grey2","Item","auth","showActionMenu","setShowActionMenu","deleting","setDeleting","participantsArr","participant","user","listParticipants","participantsList","map","toString","replace","conversation","title","paddingRight","flex","textAlignVertical","fontSize","fontWeight","color","lastMessage","sentAt","locale","fromNow","sender","grey1","grey3","alignSelf","ChatLobbyScreen","users","refreshing","setRefreshing","search","setSearch","fetchData","onRefresh","searchProcess","searchResults","forEach","toLowerCase","push","recipient","message","Date","recipients","paddingTop","isLoaded","conversations","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ActivityIndicator,\n  FlatList,\n  TouchableOpacity,\n  RefreshControl,\n  TextInput\n} from \"react-native\";\nimport {\n  SearchBar,\n  Avatar,\n  ThemeContext,\n  Button,\n  Icon,\n  Overlay\n} from \"react-native-elements\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport {\n  fetchConversations,\n  sendMessage,\n  deleteConversation\n} from \"../../actions/chatActions\";\n\nconst SearchResultItem = ({ item, theme, onSendMessage, navigation, chat }) => {\n  const [showMessageForm, setShowMessageForm] = useState(false);\n  const [newMessage, setNewMessage] = useState(null);\n\n  return (\n    <TouchableOpacity\n      onPress={\n        chat.interlocutorsIds.includes(item._id)\n          ? () =>\n              navigation.navigate(\"Room\", {\n                conversation_id: chat.convIdsWithPartsIds\n                  .filter(\n                    element => element.participants.includes(item._id) === true\n                  )\n                  .filter(conv => conv.participants.length === 2)[0]._id\n              })\n          : () => setShowMessageForm(true)\n      }\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          paddingVertical: 4,\n          paddingHorizontal: 8,\n          borderBottomColor: theme.colors.grey5,\n          borderBottomWidth: 1\n        }}\n      >\n        <View\n          style={{\n            alignContent: \"center\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginRight: 12\n          }}\n        >\n          {item.avatar ? (\n            <Avatar\n              source={{\n                uri: `http://10.0.2.2:8005/api/files/avatar/${item.avatar?.filename}`\n              }}\n              size=\"small\"\n            />\n          ) : (\n            <Avatar\n              size=\"small\"\n              title={item.firstname[0].concat(item.lastname[0]).toUpperCase()}\n            />\n          )}\n        </View>\n        <Text style={{ paddingLeft: 12 }}>\n          {_.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname)}\n        </Text>\n      </View>\n      <Overlay\n        isVisible={showMessageForm}\n        width=\"auto\"\n        containerStyle={{}}\n        height=\"auto\"\n        overlayStyle={{\n          borderRadius: 6\n        }}\n        onBackdropPress={() => {\n          setShowMessageForm(false);\n          setNewMessage(null);\n        }}\n      >\n        <View style={{}}>\n          <Text style={{ textAlign: \"center\" }}>\n            {_.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname)}\n          </Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              backgroundColor: \"white\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              marginTop: 8\n            }}\n          >\n            <TextInput\n              value={newMessage}\n              multiline\n              placeholder=\"Ecrivez ici.\"\n              placeholderTextColor=\"grey\"\n              width={250}\n              onChangeText={text => setNewMessage(text)}\n              style={{\n                backgroundColor: theme.colors.grey5,\n                borderColor: theme.colors.grey4,\n                borderWidth: 1,\n                borderRadius: 5,\n                paddingVertical: 2,\n                paddingHorizontal: 4,\n                maxHeight: 80\n              }}\n            />\n            <Button\n              containerStyle={{ height: 30 }}\n              icon={\n                <Icon\n                  name=\"send\"\n                  size={20}\n                  color={newMessage ? theme.colors.primary : theme.colors.grey2}\n                />\n              }\n              disabled={!newMessage}\n              type=\"clear\"\n              onPress={() => {\n                onSendMessage(newMessage, item._id);\n                setNewMessage(\"\");\n                setShowMessageForm(false);\n              }}\n            />\n          </View>\n        </View>\n      </Overlay>\n    </TouchableOpacity>\n  );\n};\n\nconst Item = ({\n  item,\n  navigation,\n  auth,\n  theme,\n  deleteConversation,\n  fetchConversations\n}) => {\n  const [showActionMenu, setShowActionMenu] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const participantsArr = item.participants.filter(\n    participant => participant._id !== auth.user._id\n  );\n  const listParticipants = item => {\n    if (participantsArr.length > 1) {\n      const participantsList = participantsArr.map(\n        participant => participant.firstname\n      );\n      return participantsList.toString().replace(\",\", \", \");\n    } else {\n      return _.capitalize(participantsArr[0].firstname).concat(\n        \" \",\n        _.capitalize(participantsArr[0].lastname)\n      );\n    }\n  };\n\n  const participants = listParticipants(item);\n\n  return (\n    <TouchableOpacity\n      onPress={() =>\n        navigation.navigate(\"Room\", {\n          conversation: item,\n          title: item.participants.filter(user => user._id !== auth.user._id)\n        })\n      }\n    >\n      <View\n        style={{\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          borderBottomColor: \"white\",\n          borderBottomWidth: 3,\n          backgroundColor: \"white\"\n        }}\n      >\n        <View style={{ flexDirection: \"row\" }}>\n          <View\n            style={{\n              alignContent: \"center\",\n              justifyContent: \"center\",\n              paddingRight: 8\n            }}\n          >\n            {participantsArr[0].avatar ? (\n              <Avatar\n                source={{\n                  uri: `http://10.0.2.2:8005/api/files/avatar/${participantsArr[0].avatar?.filename}`\n                }}\n                size=\"medium\"\n              />\n            ) : (\n              <Avatar\n                size=\"medium\"\n                title={participantsArr[0].firstname[0]\n                  .concat(participantsArr[0].lastname[0])\n                  .toUpperCase()}\n              />\n            )}\n          </View>\n          <View\n            style={{\n              flex: 1,\n              justifyContent: \"space-between\"\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                flex: 1,\n                justifyContent: \"space-between\"\n              }}\n            >\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  fontSize: 16,\n                  fontWeight: \"bold\"\n                }}\n              >\n                {participants}\n              </Text>\n              <Text\n                color=\"grey\"\n                style={{\n                  color: \"grey\",\n                  fontSize: 10,\n                  textAlignVertical: \"bottom\"\n                }}\n              >\n                {_.capitalize(\n                  moment(item.lastMessage.sentAt)\n                    .locale(\"fr\")\n                    .fromNow()\n                )}\n              </Text>\n            </View>\n            <View style={{ flexDirection: \"row\" }}>\n              <View\n                style={{ alignContent: \"center\", justifyContent: \"center\" }}\n              >\n                {item.lastMessage.sender === auth.user._id ? (\n                  <Icon\n                    name=\"arrow-top-right\"\n                    color={theme.colors.grey1}\n                    size={14}\n                  />\n                ) : (\n                  <Icon\n                    name=\"arrow-bottom-left\"\n                    color={theme.colors.grey3}\n                    size={14}\n                  />\n                )}\n              </View>\n              <Text\n                style={{\n                  textAlignVertical: \"center\",\n                  fontSize: 14,\n                  flex: 1\n                }}\n              >\n                {item.lastMessage.text}\n              </Text>\n              <View\n                style={{ alignContent: \"center\", justifyContent: \"center\" }}\n              >\n                <Icon\n                  name=\"dots-horizontal\"\n                  style={{ alignSelf: \"flex-end\" }}\n                  onPress={() => setShowActionMenu(true)}\n                />\n              </View>\n              {showActionMenu && (\n                <Button\n                  title=\"Supprimer la conversation\"\n                  loading={deleting}\n                  onPress={async () => {\n                    setDeleting(true);\n                    await deleteConversation(item._id);\n                    setDeleting(false);\n                    setShowActionMenu(false);\n                    fetchConversations();\n                  }}\n                />\n              )}\n            </View>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst ChatLobbyScreen = ({\n  navigation,\n  fetchConversations,\n  fetchUsers,\n  chat,\n  users,\n  auth,\n  sendMessage,\n  deleteConversation\n}) => {\n  const [refreshing, setRefreshing] = useState(false);\n  const [search, setSearch] = useState(null);\n  const { theme } = useContext(ThemeContext);\n\n  useEffect(() => {\n    function fetchData() {\n      fetchConversations();\n      fetchUsers();\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    fetchConversations();\n    setRefreshing(false);\n  }, [refreshing]);\n\n  const searchProcess = () => {\n    const searchResults = [];\n    users.users.forEach(user => {\n      if (user._id !== auth.user._id) {\n        if (\n          user.firstname.includes(search.toLowerCase()) === true ||\n          user.lastname.includes(search.toLowerCase())\n        ) {\n          searchResults.push(user);\n        }\n      }\n    });\n    return searchResults;\n  };\n\n  const onSendMessage = async (newMessage, recipient) => {\n    if (!newMessage) {\n      return;\n    }\n    await sendMessage({\n      message: {\n        text: newMessage,\n        sentAt: new Date()\n      },\n      recipients: [recipient]\n    });\n    setSearch(null);\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ backgroundColor: \"white\", paddingVertical: 4 }}>\n        <SearchBar\n          placeholder=\"Chercher un alumni ici...\"\n          onChangeText={setSearch}\n          value={search}\n          lightTheme={true}\n          platform=\"android\"\n          containerStyle={{\n            paddingTop: 0,\n            height: 40\n          }}\n        />\n        {users.isLoaded && (\n          <FlatList\n            style={{}}\n            data={search && searchProcess()}\n            renderItem={({ item }) => (\n              <SearchResultItem\n                item={item}\n                theme={theme}\n                onSendMessage={onSendMessage}\n                chat={chat}\n                navigation={navigation}\n              />\n            )}\n            keyExtractor={item => item._id}\n          />\n        )}\n        {!users.isLoaded && (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\"\n            }}\n          >\n            <ActivityIndicator size=\"small\" />\n          </View>\n        )}\n      </View>\n      {chat.isLoaded ? (\n        chat.conversations.length > 0 ? (\n          <FlatList\n            style={{}}\n            data={chat.conversations}\n            renderItem={({ item }) => (\n              <Item\n                item={item}\n                auth={auth}\n                navigation={navigation}\n                theme={theme}\n                deleteConversation={deleteConversation}\n                fetchConversations={fetchConversations}\n              />\n            )}\n            keyExtractor={item => item._id}\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n          />\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\"\n            }}\n          >\n            <Text style={{ textAlign: \"center\", color: theme.colors.grey3 }}>\n              Aucune conversation\n            </Text>\n            <Button\n              title=\"Rafraichir\"\n              type=\"clear\"\n              onPress={fetchConversations}\n            />\n          </View>\n        )\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  chat: state.chat,\n  users: state.users\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchConversations: () => dispatch(fetchConversations()),\n    fetchUsers: () => dispatch(fetchUsers()),\n    sendMessage: message => dispatch(sendMessage(message)),\n    deleteConversation: conversation_id =>\n      dispatch(deleteConversation(conversation_id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatLobbyScreen);\n"]},"metadata":{},"sourceType":"module"}