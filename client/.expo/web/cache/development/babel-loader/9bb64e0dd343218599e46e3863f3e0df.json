{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/Messages/MessagesLobbyScreen.js\";\nimport React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { SearchBar, Avatar, ThemeContext, Button, Icon } from \"react-native-elements\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchUsers as _fetchUsers } from \"../../actions/usersActions\";\nimport { fetchConversations as _fetchConversations, sendMessage as _sendMessage, deleteConversation as _deleteConversation } from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\nimport { showOverlay } from \"../../actions/overlayAction\";\n\nvar SearchResultItem = function SearchResultItem(_ref) {\n  var _item$avatar;\n\n  var item = _ref.item,\n      theme = _ref.theme,\n      navigation = _ref.navigation,\n      chat = _ref.chat;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showMessageForm = _useState2[0],\n      setShowMessageForm = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newMessage = _useState4[0],\n      setNewMessage = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var fullName = _.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname);\n\n  var onSendMessage = function onSendMessage(newMessage, recipient) {\n    return _regeneratorRuntime.async(function onSendMessage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (newMessage) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(_sendMessage({\n              text: newMessage,\n              recipients: [recipient]\n            }));\n\n          case 4:\n            setSearch(null);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(TouchableOpacity, {\n    onPress: chat.interlocutorsIds.includes(item._id) ? function () {\n      return navigation.navigate(\"Room\", {\n        title: fullName,\n        conversation: chat.convIdsWithPartsIds.filter(function (element) {\n          return element.participants.includes(item._id) === true;\n        }).filter(function (conv) {\n          return conv.participants.length === 2;\n        })[0]\n      });\n    } : function () {\n      return dispatch(showOverlay({\n        action: _sendMessage,\n        inputName: \"text\",\n        actionParams: {\n          recipients: [item._id]\n        },\n        message: \"Message Ã  l'intention de \" + fullName\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      paddingVertical: 4,\n      paddingHorizontal: 8,\n      borderBottomColor: theme.colors.grey5,\n      borderBottomWidth: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      alignContent: \"center\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginRight: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, item.avatar ? React.createElement(Avatar, {\n    source: {\n      uri: \"https://siee-gate.herokuapp.com/api/files/avatar/\" + ((_item$avatar = item.avatar) == null ? void 0 : _item$avatar.filename)\n    },\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }) : React.createElement(Avatar, {\n    size: \"small\",\n    title: item.firstname[0].concat(item.lastname[0]).toUpperCase(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), !showMessageForm ? React.createElement(Text, {\n    style: {\n      paddingLeft: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, fullName) : React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      backgroundColor: \"white\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    value: newMessage,\n    multiline: true,\n    placeholder: \"Ecrivez ici.\",\n    placeholderTextColor: \"grey\",\n    onChangeText: function onChangeText(text) {\n      return setNewMessage(text);\n    },\n    style: {\n      backgroundColor: theme.colors.grey5,\n      borderColor: theme.colors.grey4,\n      borderWidth: 1,\n      borderRadius: 5,\n      paddingVertical: 2,\n      paddingHorizontal: 4,\n      maxHeight: 80\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    containerStyle: {\n      height: 30\n    },\n    icon: React.createElement(Icon, {\n      name: \"send\",\n      size: 20,\n      color: newMessage ? theme.colors.primary : theme.colors.grey2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }),\n    disabled: !newMessage,\n    type: \"clear\",\n    onPress: function onPress() {\n      onSendMessage(newMessage, item._id);\n      setNewMessage(\"\");\n      setShowMessageForm(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }))));\n};\n\nvar Item = function Item(_ref2) {\n  var _item$participants$0$;\n\n  var item = _ref2.item,\n      navigation = _ref2.navigation,\n      auth = _ref2.auth,\n      theme = _ref2.theme,\n      deleteConversation = _ref2.deleteConversation,\n      fetchConversations = _ref2.fetchConversations;\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showActionMenu = _useState6[0],\n      setShowActionMenu = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      deleting = _useState8[0],\n      setDeleting = _useState8[1];\n\n  var listParticipants = function listParticipants() {\n    if (item.participants.length > 1) {\n      var participantsList = item.participants.map(function (participant) {\n        return _.capitalize(participant.firstname);\n      });\n      return participantsList.toString().replace(\",\", \", \");\n    } else {\n      return _.capitalize(item.participants[0].firstname).concat(\" \", _.capitalize(item.participants[0].lastname));\n    }\n  };\n\n  var participants = listParticipants(item);\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Room\", {\n        conversation: item\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: 8,\n      paddingVertical: 8,\n      borderBottomColor: \"white\",\n      borderBottomWidth: 3,\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      alignContent: \"center\",\n      justifyContent: \"center\",\n      paddingRight: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, item.participants[0].avatar ? React.createElement(Avatar, {\n    source: {\n      uri: apiConfig.baseUrl + \"/files/avatar/\" + ((_item$participants$0$ = item.participants[0].avatar) == null ? void 0 : _item$participants$0$.filename)\n    },\n    size: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }) : React.createElement(Avatar, {\n    size: \"medium\",\n    title: item.participants[0].firstname[0].concat(item.participants[0].lastname[0]).toUpperCase(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"space-between\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1,\n      justifyContent: \"space-between\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      fontSize: 16,\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, participants), React.createElement(Text, {\n    color: \"grey\",\n    style: {\n      color: \"grey\",\n      fontSize: 10,\n      textAlignVertical: \"bottom\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, _.capitalize(moment(item.lastMessage.sentAt).locale(\"fr\").fromNow()))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 15\n    }\n  }, item.lastMessage.sender === auth.user._id ? React.createElement(Icon, {\n    name: \"arrow-top-right\",\n    color: theme.colors.grey1,\n    size: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }) : React.createElement(Icon, {\n    name: \"arrow-bottom-left\",\n    color: theme.colors.grey3,\n    size: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 19\n    }\n  })), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"center\",\n      fontSize: 14,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, item.lastMessage.text), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    name: \"dots-horizontal\",\n    style: {\n      alignSelf: \"flex-end\"\n    },\n    onPress: function onPress() {\n      return setShowActionMenu(!showActionMenu);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }\n  }), showActionMenu && React.createElement(Icon, {\n    name: \"delete\",\n    size: 20,\n    color: \"black\",\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setDeleting(true);\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(deleteConversation(item._id));\n\n            case 3:\n              setDeleting(false);\n              setShowActionMenu(false);\n              fetchConversations();\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 19\n    }\n  })))))));\n};\n\nvar ChatLobbyScreen = function ChatLobbyScreen(_ref3) {\n  var navigation = _ref3.navigation,\n      fetchConversations = _ref3.fetchConversations,\n      fetchUsers = _ref3.fetchUsers,\n      chat = _ref3.chat,\n      users = _ref3.users,\n      auth = _ref3.auth,\n      sendMessage = _ref3.sendMessage,\n      deleteConversation = _ref3.deleteConversation;\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      refreshing = _useState10[0],\n      setRefreshing = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      search = _useState12[0],\n      setSearch = _useState12[1];\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  useEffect(function () {\n    function fetchData() {\n      fetchConversations();\n      fetchUsers();\n    }\n\n    fetchData();\n  }, []);\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    fetchConversations();\n    setRefreshing(false);\n  }, [refreshing]);\n\n  var searchProcess = function searchProcess() {\n    var searchResults = [];\n    users.users.forEach(function (user) {\n      if (user._id !== auth.user._id) {\n        if (user.firstname.includes(search.toLowerCase()) === true || user.lastname.includes(search.toLowerCase())) {\n          searchResults.push(user);\n        }\n      }\n    });\n    return searchResults;\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      paddingVertical: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }\n  }, React.createElement(SearchBar, {\n    placeholder: \"Chercher un alumni ici...\",\n    onChangeText: setSearch,\n    value: search,\n    lightTheme: true,\n    platform: \"android\",\n    containerStyle: {\n      paddingTop: 0,\n      height: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }\n  }), users.isLoaded && React.createElement(FlatList, {\n    data: search && searchProcess(),\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item;\n      return React.createElement(SearchResultItem, {\n        item: item,\n        theme: theme,\n        chat: chat,\n        navigation: navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 15\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 11\n    }\n  }), !users.isLoaded && React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 11\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }\n  }))), chat.isLoaded ? chat.conversations.length > 0 ? React.createElement(FlatList, {\n    data: chat.conversations,\n    renderItem: function renderItem(_ref5) {\n      var item = _ref5.item;\n      return React.createElement(Item, {\n        item: item,\n        auth: auth,\n        navigation: navigation,\n        theme: theme,\n        deleteConversation: deleteConversation,\n        fetchConversations: fetchConversations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 15\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 15\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 11\n    }\n  }) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      color: theme.colors.grey3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }\n  }, \"Aucune conversation\"), React.createElement(Button, {\n    title: \"Rafraichir\",\n    type: \"clear\",\n    onPress: fetchConversations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 13\n    }\n  })) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    chat: state.chat,\n    users: state.users\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchConversations: function fetchConversations() {\n      return dispatch(_fetchConversations());\n    },\n    fetchUsers: function fetchUsers() {\n      return dispatch(_fetchUsers());\n    },\n    sendMessage: function sendMessage(message) {\n      return dispatch(_sendMessage(message));\n    },\n    deleteConversation: function deleteConversation(conversation_id) {\n      return dispatch(_deleteConversation(conversation_id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatLobbyScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/Messages/MessagesLobbyScreen.js"],"names":["React","useState","useEffect","useCallback","useContext","connect","useDispatch","SearchBar","Avatar","ThemeContext","Button","Icon","_","moment","fetchUsers","fetchConversations","sendMessage","deleteConversation","apiConfig","showOverlay","SearchResultItem","item","theme","navigation","chat","showMessageForm","setShowMessageForm","newMessage","setNewMessage","dispatch","fullName","capitalize","firstname","lastname","onSendMessage","recipient","text","recipients","setSearch","interlocutorsIds","includes","_id","navigate","title","conversation","convIdsWithPartsIds","filter","element","participants","conv","length","action","inputName","actionParams","message","flexDirection","alignItems","paddingVertical","paddingHorizontal","borderBottomColor","colors","grey5","borderBottomWidth","alignContent","justifyContent","marginRight","avatar","uri","filename","concat","toUpperCase","paddingLeft","backgroundColor","marginTop","borderColor","grey4","borderWidth","borderRadius","maxHeight","height","primary","grey2","Item","auth","showActionMenu","setShowActionMenu","deleting","setDeleting","listParticipants","participantsList","map","participant","toString","replace","paddingRight","baseUrl","flex","textAlignVertical","fontSize","fontWeight","color","lastMessage","sentAt","locale","fromNow","sender","user","grey1","grey3","alignSelf","ChatLobbyScreen","users","refreshing","setRefreshing","search","fetchData","onRefresh","searchProcess","searchResults","forEach","toLowerCase","push","paddingTop","isLoaded","conversations","textAlign","mapStateToProps","state","mapDispatchToProps","conversation_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport {\n  View,\n  Text,\n  ActivityIndicator,\n  FlatList,\n  TouchableOpacity,\n  RefreshControl,\n  TextInput,\n} from \"react-native\";\nimport {\n  SearchBar,\n  Avatar,\n  ThemeContext,\n  Button,\n  Icon,\n} from \"react-native-elements\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport {\n  fetchConversations,\n  sendMessage,\n  deleteConversation,\n} from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\nimport { showOverlay } from \"../../actions/overlayAction\";\n\nconst SearchResultItem = ({ item, theme, navigation, chat }) => {\n  const [showMessageForm, setShowMessageForm] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  const fullName =\n    _.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname);\n\n  const onSendMessage = async (newMessage, recipient) => {\n    if (!newMessage) {\n      return;\n    }\n    await sendMessage({\n      text: newMessage,\n      recipients: [recipient],\n    });\n    setSearch(null);\n  };\n\n  return (\n    <TouchableOpacity\n      onPress={\n        chat.interlocutorsIds.includes(item._id)\n          ? () =>\n              navigation.navigate(\"Room\", {\n                title: fullName,\n                conversation: chat.convIdsWithPartsIds\n                  .filter(\n                    (element) =>\n                      element.participants.includes(item._id) === true\n                  )\n                  .filter((conv) => conv.participants.length === 2)[0],\n              })\n          : () =>\n              dispatch(\n                showOverlay({\n                  action: sendMessage,\n                  inputName: \"text\",\n                  actionParams: { recipients: [item._id] },\n                  message: \"Message Ã  l'intention de \" + fullName,\n                })\n              )\n      }\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          paddingVertical: 4,\n          paddingHorizontal: 8,\n          borderBottomColor: theme.colors.grey5,\n          borderBottomWidth: 1,\n        }}\n      >\n        <View\n          style={{\n            alignContent: \"center\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginRight: 12,\n          }}\n        >\n          {item.avatar ? (\n            <Avatar\n              source={{\n                uri: `https://siee-gate.herokuapp.com/api/files/avatar/${item.avatar?.filename}`,\n              }}\n              size=\"small\"\n            />\n          ) : (\n            <Avatar\n              size=\"small\"\n              title={item.firstname[0].concat(item.lastname[0]).toUpperCase()}\n            />\n          )}\n        </View>\n        {!showMessageForm ? (\n          <Text style={{ paddingLeft: 12 }}>{fullName}</Text>\n        ) : (\n          <View\n            style={{\n              flexDirection: \"row\",\n              backgroundColor: \"white\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              marginTop: 8,\n            }}\n          >\n            <TextInput\n              value={newMessage}\n              multiline\n              placeholder=\"Ecrivez ici.\"\n              placeholderTextColor=\"grey\"\n              onChangeText={(text) => setNewMessage(text)}\n              style={{\n                backgroundColor: theme.colors.grey5,\n                borderColor: theme.colors.grey4,\n                borderWidth: 1,\n                borderRadius: 5,\n                paddingVertical: 2,\n                paddingHorizontal: 4,\n                maxHeight: 80,\n              }}\n            />\n            <Button\n              containerStyle={{ height: 30 }}\n              icon={\n                <Icon\n                  name=\"send\"\n                  size={20}\n                  color={newMessage ? theme.colors.primary : theme.colors.grey2}\n                />\n              }\n              disabled={!newMessage}\n              type=\"clear\"\n              onPress={() => {\n                onSendMessage(newMessage, item._id);\n                setNewMessage(\"\");\n                setShowMessageForm(false);\n              }}\n            />\n          </View>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst Item = ({\n  item,\n  navigation,\n  auth,\n  theme,\n  deleteConversation,\n  fetchConversations,\n}) => {\n  const [showActionMenu, setShowActionMenu] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n\n  const listParticipants = () => {\n    if (item.participants.length > 1) {\n      const participantsList = item.participants.map((participant) =>\n        _.capitalize(participant.firstname)\n      );\n      return participantsList.toString().replace(\",\", \", \");\n    } else {\n      return _.capitalize(item.participants[0].firstname).concat(\n        \" \",\n        _.capitalize(item.participants[0].lastname)\n      );\n    }\n  };\n\n  const participants = listParticipants(item);\n\n  return (\n    <TouchableOpacity\n      onPress={() =>\n        navigation.navigate(\"Room\", {\n          conversation: item,\n        })\n      }\n    >\n      <View\n        style={{\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          borderBottomColor: \"white\",\n          borderBottomWidth: 3,\n          backgroundColor: \"white\",\n        }}\n      >\n        <View style={{ flexDirection: \"row\" }}>\n          <View\n            style={{\n              alignContent: \"center\",\n              justifyContent: \"center\",\n              paddingRight: 8,\n            }}\n          >\n            {item.participants[0].avatar ? (\n              <Avatar\n                source={{\n                  uri: `${apiConfig.baseUrl}/files/avatar/${item.participants[0].avatar?.filename}`,\n                }}\n                size=\"medium\"\n              />\n            ) : (\n              <Avatar\n                size=\"medium\"\n                title={item.participants[0].firstname[0]\n                  .concat(item.participants[0].lastname[0])\n                  .toUpperCase()}\n              />\n            )}\n          </View>\n          <View\n            style={{\n              flex: 1,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                flex: 1,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  fontSize: 16,\n                  fontWeight: \"bold\",\n                }}\n              >\n                {participants}\n              </Text>\n              <Text\n                color=\"grey\"\n                style={{\n                  color: \"grey\",\n                  fontSize: 10,\n                  textAlignVertical: \"bottom\",\n                }}\n              >\n                {_.capitalize(\n                  moment(item.lastMessage.sentAt).locale(\"fr\").fromNow()\n                )}\n              </Text>\n            </View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <View\n                style={{ alignContent: \"center\", justifyContent: \"center\" }}\n              >\n                {item.lastMessage.sender === auth.user._id ? (\n                  <Icon\n                    name=\"arrow-top-right\"\n                    color={theme.colors.grey1}\n                    size={14}\n                  />\n                ) : (\n                  <Icon\n                    name=\"arrow-bottom-left\"\n                    color={theme.colors.grey3}\n                    size={14}\n                  />\n                )}\n              </View>\n              <Text\n                style={{\n                  textAlignVertical: \"center\",\n                  fontSize: 14,\n                  flex: 1,\n                }}\n              >\n                {item.lastMessage.text}\n              </Text>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignContent: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Icon\n                  name=\"dots-horizontal\"\n                  style={{ alignSelf: \"flex-end\" }}\n                  onPress={() => setShowActionMenu(!showActionMenu)}\n                />\n                {showActionMenu && (\n                  <Icon\n                    name=\"delete\"\n                    size={20}\n                    color=\"black\"\n                    onPress={async () => {\n                      setDeleting(true);\n                      await deleteConversation(item._id);\n                      setDeleting(false);\n                      setShowActionMenu(false);\n                      fetchConversations();\n                    }}\n                  />\n                )}\n              </View>\n            </View>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst ChatLobbyScreen = ({\n  navigation,\n  fetchConversations,\n  fetchUsers,\n  chat,\n  users,\n  auth,\n  sendMessage,\n  deleteConversation,\n}) => {\n  const [refreshing, setRefreshing] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const { theme } = useContext(ThemeContext);\n\n  useEffect(() => {\n    function fetchData() {\n      fetchConversations();\n      fetchUsers();\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    fetchConversations();\n    setRefreshing(false);\n  }, [refreshing]);\n\n  const searchProcess = () => {\n    const searchResults = [];\n    users.users.forEach((user) => {\n      if (user._id !== auth.user._id) {\n        if (\n          user.firstname.includes(search.toLowerCase()) === true ||\n          user.lastname.includes(search.toLowerCase())\n        ) {\n          searchResults.push(user);\n        }\n      }\n    });\n    return searchResults;\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ backgroundColor: \"white\", paddingVertical: 4 }}>\n        <SearchBar\n          placeholder=\"Chercher un alumni ici...\"\n          onChangeText={setSearch}\n          value={search}\n          lightTheme={true}\n          platform=\"android\"\n          containerStyle={{\n            paddingTop: 0,\n            height: 40,\n          }}\n        />\n        {users.isLoaded && (\n          <FlatList\n            data={search && searchProcess()}\n            renderItem={({ item }) => (\n              <SearchResultItem\n                item={item}\n                theme={theme}\n                chat={chat}\n                navigation={navigation}\n              />\n            )}\n            keyExtractor={(item) => item._id}\n          />\n        )}\n        {!users.isLoaded && (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <ActivityIndicator size=\"small\" />\n          </View>\n        )}\n      </View>\n      {chat.isLoaded ? (\n        chat.conversations.length > 0 ? (\n          <FlatList\n            data={chat.conversations}\n            renderItem={({ item }) => (\n              <Item\n                item={item}\n                auth={auth}\n                navigation={navigation}\n                theme={theme}\n                deleteConversation={deleteConversation}\n                fetchConversations={fetchConversations}\n              />\n            )}\n            keyExtractor={(item) => item._id}\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n          />\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text style={{ textAlign: \"center\", color: theme.colors.grey3 }}>\n              Aucune conversation\n            </Text>\n            <Button\n              title=\"Rafraichir\"\n              type=\"clear\"\n              onPress={fetchConversations}\n            />\n          </View>\n        )\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  chat: state.chat,\n  users: state.users,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchConversations: () => dispatch(fetchConversations()),\n    fetchUsers: () => dispatch(fetchUsers()),\n    sendMessage: (message) => dispatch(sendMessage(message)),\n    deleteConversation: (conversation_id) =>\n      dispatch(deleteConversation(conversation_id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatLobbyScreen);\n"]},"metadata":{},"sourceType":"module"}