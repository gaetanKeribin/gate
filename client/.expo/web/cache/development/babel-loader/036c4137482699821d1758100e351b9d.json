{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/CustomOverlay.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { resetOverlay } from \"../actions/overlayAction\";\nimport * as RootNavigation from \"../RootNavigation.js\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nvar Notifier = function Notifier(_ref) {\n  var notificatio = _ref.notificatio;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: 10,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingHorizontal: 12,\n      paddingVertical: 8,\n      elevation: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(Icon, {\n    containerStyle: {\n      marginBottom: 8\n    },\n    size: 30,\n    name: notification.variant === \"success\" ? \"check-circle-outline\" : notification.variant === \"warning\" ? \"alert-circle-outline\" : notification.variant === \"error\" ? \"close-circle-outline\" : notification.icon,\n    color: notification.variant === \"success\" ? \"green\" : notification.variant === \"warning\" ? \"yellow\" : notification.variant === \"error\" ? \"red\" : notification.variant === \"error\" ? \"blue\" : theme.colors.grey1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), notification.message && React.createElement(Text, {\n    style: {\n      fontSize: 14\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, notification.message));\n};\n\nvar InputForm = function InputForm(_ref2) {\n  var form = _ref2.form,\n      dispatchRedirectReset = _ref2.dispatchRedirectReset;\n  if (!form) return null;\n\n  var _useContext2 = useContext(ThemeContext),\n      theme = _useContext2.theme;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: 10,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingHorizontal: 12,\n      paddingVertical: 8,\n      elevation: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, form.message && React.createElement(Text, {\n    style: {\n      fontSize: 14\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 26\n    }\n  }, form.message)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"stretch\",\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    value: inputValue,\n    multiline: true,\n    placeholder: \"Ecrivez ici.\",\n    placeholderTextColor: \"grey\",\n    onChangeText: function onChangeText(text) {\n      return setInputValue(text);\n    },\n    style: {\n      backgroundColor: theme.colors.grey5,\n      borderColor: theme.colors.grey4,\n      borderWidth: 1,\n      borderRadius: 5,\n      height: 60,\n      paddingHorizontal: 4,\n      paddingVertical: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    buttonStyle: {\n      height: 60,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    icon: React.createElement(Icon, {\n      name: \"send\",\n      size: 20,\n      color: inputValue ? theme.colors.primary : theme.colors.grey2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }),\n    disabled: !inputValue,\n    type: \"clear\",\n    onPress: function onPress() {\n      dispatch(form.action(_objectSpread(_defineProperty({}, form.inputName, inputValue), form.actionParams)));\n      dispatchRedirectReset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar Menu = function Menu(_ref3) {\n  var _menu$buttons;\n\n  var menu = _ref3.menu,\n      dispatchRedirectReset = _ref3.dispatchRedirectReset;\n\n  var _useContext3 = useContext(ThemeContext),\n      theme = _useContext3.theme;\n\n  if (!form) return null;\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: 10,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingHorizontal: 12,\n      paddingVertical: 8,\n      elevation: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, (_menu$buttons = menu.buttons) == null ? void 0 : _menu$buttons.map(function (button) {\n    return React.createElement(Button, {\n      title: button.title,\n      containerStyle: {\n        height: 30\n      },\n      onPress: function onPress() {\n        dispatch(button.action.apply(button, _toConsumableArray(button.actionParams)));\n        dispatchRedirectReset();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nvar CustomOverlay = function CustomOverlay() {\n  var dispatch = useDispatch();\n  var overlay = useSelector(function (state) {\n    return state.overlay;\n  });\n  if (overlay.show === false) return null;\n\n  var _useContext4 = useContext(ThemeContext),\n      theme = _useContext4.theme;\n\n  var dispatchRedirectReset = function dispatchRedirectReset() {\n    overlay.dispatchCallback && dispatch({\n      type: overlay.dispatchCallback\n    });\n    overlay.redirect && RootNavigation.navigate(overlay.redirect, {});\n    dispatch(resetOverlay());\n  };\n\n  overlay.timeout && setTimeout(function () {\n    dispatchRedirectReset();\n  }, overlay.timeout);\n  return React.createElement(View, {\n    style: {\n      position: \"absolute\",\n      height: Dimensions.get(\"window\").height,\n      width: Dimensions.get(\"window\").width,\n      backgroundColor: theme.colors.grey6,\n      alignContent: \"center\",\n      justifyContent: \"center\",\n      alignItems: \"stretch\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    containerStyle: {\n      flex: 1,\n      minHeight: 12\n    },\n    style: {\n      flex: 1,\n      minHeight: 12\n    },\n    onPress: function onPress() {\n      return dispatchRedirectReset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    containerStyle: {\n      flex: 1,\n      minWidth: 12\n    },\n    style: {\n      flex: 1,\n      minWidth: 12\n    },\n    onPress: function onPress() {\n      return dispatchRedirectReset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }), overlay.notification && React.createElement(Notifier, {\n    notification: overlay.notification,\n    dispatchRedirectReset: dispatchRedirectReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }), overlay.form && React.createElement(InputForm, {\n    form: overlay.form,\n    dispatchRedirectReset: dispatchRedirectReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }), overlay.menu && React.createElement(Menu, {\n    menu: overlay.menu,\n    dispatchRedirectReset: dispatchRedirectReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    containerStyle: {\n      flex: 1,\n      minWidth: 12\n    },\n    style: {\n      flex: 1,\n      minWidth: 12\n    },\n    onPress: function onPress() {\n      return dispatchRedirectReset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    containerStyle: {\n      flex: 1,\n      minHeight: 12\n    },\n    style: {\n      flex: 1,\n      minHeight: 12\n    },\n    onPress: function onPress() {\n      return dispatchRedirectReset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CustomOverlay;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/CustomOverlay.js"],"names":["React","useContext","useState","useDispatch","useSelector","Icon","ThemeContext","Button","resetOverlay","RootNavigation","TouchableOpacity","Notifier","notificatio","theme","backgroundColor","borderRadius","justifyContent","alignItems","paddingHorizontal","paddingVertical","elevation","marginBottom","notification","variant","icon","colors","grey1","message","fontSize","InputForm","form","dispatchRedirectReset","inputValue","setInputValue","dispatch","flexDirection","alignContent","marginTop","text","grey5","borderColor","grey4","borderWidth","height","primary","grey2","action","inputName","actionParams","Menu","menu","buttons","map","button","title","CustomOverlay","overlay","state","show","dispatchCallback","type","redirect","navigate","timeout","setTimeout","position","Dimensions","get","width","grey6","flex","minHeight","minWidth"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Text, View, Dimensions, TextInput } from \"react-native\";\nimport { Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { resetOverlay } from \"../actions/overlayAction\";\nimport * as RootNavigation from \"../RootNavigation.js\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nconst Notifier = ({ notificatio }) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      <Icon\n        containerStyle={{ marginBottom: 8 }}\n        size={30}\n        name={\n          notification.variant === \"success\"\n            ? \"check-circle-outline\"\n            : notification.variant === \"warning\"\n            ? \"alert-circle-outline\"\n            : notification.variant === \"error\"\n            ? \"close-circle-outline\"\n            : notification.icon\n        }\n        color={\n          notification.variant === \"success\"\n            ? \"green\"\n            : notification.variant === \"warning\"\n            ? \"yellow\"\n            : notification.variant === \"error\"\n            ? \"red\"\n            : notification.variant === \"error\"\n            ? \"blue\"\n            : theme.colors.grey1\n        }\n      />\n      {notification.message && (\n        <Text style={{ fontSize: 14 }}>{notification.message}</Text>\n      )}\n    </View>\n  );\n};\n\nconst InputForm = ({ form, dispatchRedirectReset }) => {\n  if (!form) return null;\n  const { theme } = useContext(ThemeContext);\n  const [inputValue, setInputValue] = useState(\"\");\n  const dispatch = useDispatch();\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          marginTop: 8,\n        }}\n      >\n        {form.message && <Text style={{ fontSize: 14 }}>{form.message}</Text>}\n      </View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"stretch\",\n          marginTop: 8,\n        }}\n      >\n        <TextInput\n          value={inputValue}\n          multiline\n          placeholder=\"Ecrivez ici.\"\n          placeholderTextColor=\"grey\"\n          onChangeText={(text) => setInputValue(text)}\n          style={{\n            backgroundColor: theme.colors.grey5,\n            borderColor: theme.colors.grey4,\n            borderWidth: 1,\n            borderRadius: 5,\n            height: 60,\n            paddingHorizontal: 4,\n            paddingVertical: 4,\n          }}\n        />\n        <Button\n          buttonStyle={{\n            height: 60,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          icon={\n            <Icon\n              name=\"send\"\n              size={20}\n              color={inputValue ? theme.colors.primary : theme.colors.grey2}\n            />\n          }\n          disabled={!inputValue}\n          type=\"clear\"\n          onPress={() => {\n            dispatch(\n              form.action({\n                [form.inputName]: inputValue,\n                ...form.actionParams,\n              })\n            );\n            dispatchRedirectReset();\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst Menu = ({ menu, dispatchRedirectReset }) => {\n  const { theme } = useContext(ThemeContext);\n  if (!form) return null;\n  const dispatch = useDispatch();\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      {menu.buttons?.map((button) => {\n        return (\n          <Button\n            title={button.title}\n            containerStyle={{ height: 30 }}\n            onPress={() => {\n              dispatch(button.action(...button.actionParams));\n              dispatchRedirectReset();\n            }}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nconst CustomOverlay = () => {\n  const dispatch = useDispatch();\n  const overlay = useSelector((state) => state.overlay);\n  if (overlay.show === false) return null;\n  const { theme } = useContext(ThemeContext);\n\n  const dispatchRedirectReset = () => {\n    overlay.dispatchCallback && dispatch({ type: overlay.dispatchCallback });\n    overlay.redirect && RootNavigation.navigate(overlay.redirect, {});\n    dispatch(resetOverlay());\n  };\n\n  overlay.timeout &&\n    setTimeout(() => {\n      dispatchRedirectReset();\n    }, overlay.timeout);\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        height: Dimensions.get(\"window\").height,\n        width: Dimensions.get(\"window\").width,\n        backgroundColor: theme.colors.grey6,\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\",\n      }}\n    >\n      <TouchableOpacity\n        containerStyle={{ flex: 1, minHeight: 12 }}\n        style={{\n          flex: 1,\n          minHeight: 12,\n        }}\n        onPress={() => dispatchRedirectReset()}\n      />\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minWidth: 12 }}\n          style={{\n            flex: 1,\n            minWidth: 12,\n          }}\n          onPress={() => dispatchRedirectReset()}\n        />\n        {overlay.notification && (\n          <Notifier\n            notification={overlay.notification}\n            dispatchRedirectReset={dispatchRedirectReset}\n          />\n        )}\n        {overlay.form && (\n          <InputForm\n            form={overlay.form}\n            dispatchRedirectReset={dispatchRedirectReset}\n          />\n        )}\n        {overlay.menu && (\n          <Menu\n            menu={overlay.menu}\n            dispatchRedirectReset={dispatchRedirectReset}\n          />\n        )}\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minWidth: 12 }}\n          style={{\n            flex: 1,\n            minWidth: 12,\n          }}\n          onPress={() => dispatchRedirectReset()}\n        />\n      </View>\n      <TouchableOpacity\n        containerStyle={{ flex: 1, minHeight: 12 }}\n        style={{\n          flex: 1,\n          minHeight: 12,\n        }}\n        onPress={() => dispatchRedirectReset()}\n      />\n    </View>\n  );\n};\n\nexport default CustomOverlay;\n"]},"metadata":{},"sourceType":"module"}