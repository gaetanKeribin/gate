{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/ProfileReadScreen.js\";\nimport React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Avatar, Divider, Icon, Button, ThemeContext } from \"react-native-elements\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { uploadFile as _uploadFile, deleteFile as _deleteFile } from \"../actions/filesActions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport _ from \"lodash\";\nimport AppNavbar from \"./AppNavbar\";\n\nvar ReadProfileScreen = function ReadProfileScreen(_ref) {\n  var _user$avatar;\n\n  var uploadFile = _ref.uploadFile,\n      auth = _ref.auth,\n      navigation = _ref.navigation,\n      deleteFile = _ref.deleteFile;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showAvatarForm = _useState2[0],\n      setShowAvatarForm = _useState2[1];\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var editAvatar = function editAvatar() {\n    var selectPicture = function selectPicture() {\n      var picture;\n      return _regeneratorRuntime.async(function selectPicture$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n            case 2:\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                allowsEditing: true\n              }));\n\n            case 4:\n              picture = _context.sent;\n              !picture.cancelled && uploadFile(picture, \"avatar\");\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    selectPicture();\n    setShowAvatarForm(false);\n  };\n\n  var user = auth.user;\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(AppNavbar, {\n    navigation: navigation,\n    title: \"Mon profile\",\n    leftButton: \"back\",\n    noRightButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), auth.user ? React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"space-between\",\n      paddingVertical: 10,\n      paddingHorizontal: 8,\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      paddingTop: 40,\n      flex: 1,\n      paddingHorizontal: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [theme.colors.primary, theme.colors.secondary],\n    start: [0.25, 1],\n    end: [0, 0],\n    style: {\n      flexDirection: \"row\",\n      marginBottom: 20,\n      paddingVertical: 8,\n      paddingHorizontal: 16,\n      borderRadius: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: theme.colors.grey5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, _.capitalize(user.firstname)), React.createElement(Text, {\n    style: {\n      fontSize: 30,\n      color: \"white\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, _.capitalize(user.lastname))), user.avatar ? React.createElement(Avatar, {\n    onEditPress: function onEditPress() {\n      return editAvatar();\n    },\n    size: \"xlarge\",\n    containerStyle: {\n      borderColor: \"white\",\n      borderWidth: 3\n    },\n    source: {\n      uri: \"http://10.0.2.2:8005/api/files/avatar/\" + ((_user$avatar = user.avatar) == null ? void 0 : _user$avatar.filename)\n    },\n    onPress: function onPress() {\n      return setShowAvatarForm(true);\n    },\n    showEditButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }) : React.createElement(Avatar, {\n    onEditPress: function onEditPress() {\n      return editAvatar();\n    },\n    size: \"xlarge\",\n    containerStyle: {\n      borderColor: \"white\",\n      borderWidth: 3\n    },\n    title: user.firstname.charAt(0).concat(user.lastname.charAt(0)).toUpperCase(),\n    onPress: function onPress() {\n      return editAvatar();\n    },\n    showEditButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), React.createElement(Modal, {\n    isVisible: showAvatarForm,\n    height: \"auto\",\n    onBackdropPress: function onBackdropPress() {\n      return setShowAvatarForm(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Changer\",\n    onPress: function onPress() {\n      return editAvatar();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }), React.createElement(Button, {\n    title: \"Supprimer\",\n    buttonStyle: {\n      backgroundColor: theme.colors.grey0\n    },\n    onPress: function onPress() {\n      var _user$avatar2;\n\n      return deleteFile(\"avatar\", (_user$avatar2 = user.avatar) == null ? void 0 : _user$avatar2.filename);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  })))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"briefcase\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginHorizontal: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, user.jobTitle, \" chez \", user.organisation)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"flex-start\",\n      justifyContent: \"flex-start\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"school\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginHorizontal: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"Promotion \", user.promo)), React.createElement(Divider, {\n    style: {\n      marginVertical: 8,\n      backgroundColor: \"grey\",\n      borderWidth: 1,\n      width: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      flex: 1,\n      marginEnd: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, user.description)), React.createElement(Divider, {\n    style: {\n      marginVertical: 8,\n      backgroundColor: \"grey\",\n      borderWidth: 1,\n      width: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"at\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, user.email))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"Editer\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Edit\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }))) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    uploadFile: function uploadFile(file, type) {\n      return dispatch(_uploadFile(file, type));\n    },\n    deleteFile: function deleteFile(bucketName, id) {\n      return dispatch(_deleteFile(bucketName, id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReadProfileScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/ProfileReadScreen.js"],"names":["React","useState","useContext","connect","Avatar","Divider","Icon","Button","ThemeContext","ImagePicker","uploadFile","deleteFile","LinearGradient","_","AppNavbar","ReadProfileScreen","auth","navigation","showAvatarForm","setShowAvatarForm","theme","editAvatar","selectPicture","requestCameraRollPermissionsAsync","launchImageLibraryAsync","allowsEditing","picture","cancelled","user","flex","alignContent","paddingVertical","paddingHorizontal","backgroundColor","paddingTop","colors","primary","secondary","flexDirection","marginBottom","borderRadius","justifyContent","fontSize","color","grey5","capitalize","firstname","fontWeight","lastname","avatar","borderColor","borderWidth","uri","filename","charAt","concat","toUpperCase","grey0","textAlignVertical","marginHorizontal","jobTitle","organisation","alignItems","promo","marginVertical","width","textAlign","marginEnd","description","marginStart","email","navigate","mapStateToProps","state","mapDispatchToProps","dispatch","file","type","bucketName","id"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Avatar,\n  Divider,\n  Icon,\n  Button,\n  ThemeContext\n} from \"react-native-elements\";\nimport { View, Text, ScrollView, Modal } from \"react-native-web\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { uploadFile, deleteFile } from \"../actions/filesActions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport _ from \"lodash\";\nimport AppNavbar from \"./AppNavbar\";\n\nconst ReadProfileScreen = ({ uploadFile, auth, navigation, deleteFile }) => {\n  const [showAvatarForm, setShowAvatarForm] = useState(false);\n  const { theme } = useContext(ThemeContext);\n\n  const editAvatar = () => {\n    const selectPicture = async () => {\n      await ImagePicker.requestCameraRollPermissionsAsync();\n\n      const picture = await ImagePicker.launchImageLibraryAsync({\n        allowsEditing: true\n      });\n\n      !picture.cancelled && uploadFile(picture, \"avatar\");\n    };\n    selectPicture();\n    setShowAvatarForm(false);\n  };\n\n  const { user } = auth;\n  return (\n    <View\n      style={{\n        flex: 1\n      }}\n    >\n      <AppNavbar\n        navigation={navigation}\n        title=\"Mon profile\"\n        leftButton=\"back\"\n        noRightButton={true}\n      />\n      {auth.user ? (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"space-between\",\n            paddingVertical: 10,\n            paddingHorizontal: 8,\n            backgroundColor: \"white\"\n          }}\n        >\n          <ScrollView\n            style={{\n              paddingTop: 40,\n              flex: 1,\n              paddingHorizontal: 12\n            }}\n          >\n            <LinearGradient\n              colors={[theme.colors.primary, theme.colors.secondary]}\n              start={[0.25, 1]}\n              end={[0, 0]}\n              style={{\n                flexDirection: \"row\",\n                marginBottom: 20,\n                paddingVertical: 8,\n                paddingHorizontal: 16,\n                borderRadius: 5\n              }}\n            >\n              <View\n                style={{\n                  flex: 1,\n                  alignContent: \"center\",\n                  justifyContent: \"center\"\n                }}\n              >\n                <Text style={{ fontSize: 20, color: theme.colors.grey5 }}>\n                  {_.capitalize(user.firstname)}\n                </Text>\n                <Text\n                  style={{ fontSize: 30, color: \"white\", fontWeight: \"bold\" }}\n                >\n                  {_.capitalize(user.lastname)}\n                </Text>\n              </View>\n              {user.avatar ? (\n                <Avatar\n                  onEditPress={() => editAvatar()}\n                  size=\"xlarge\"\n                  containerStyle={{\n                    borderColor: \"white\",\n                    borderWidth: 3\n                  }}\n                  source={{\n                    uri: `http://10.0.2.2:8005/api/files/avatar/${user.avatar?.filename}`\n                  }}\n                  onPress={() => setShowAvatarForm(true)}\n                  showEditButton\n                />\n              ) : (\n                <Avatar\n                  onEditPress={() => editAvatar()}\n                  size=\"xlarge\"\n                  containerStyle={{\n                    borderColor: \"white\",\n                    borderWidth: 3\n                  }}\n                  title={user.firstname\n                    .charAt(0)\n                    .concat(user.lastname.charAt(0))\n                    .toUpperCase()}\n                  onPress={() => editAvatar()}\n                  showEditButton\n                />\n              )}\n\n              <Modal\n                isVisible={showAvatarForm}\n                height=\"auto\"\n                onBackdropPress={() => setShowAvatarForm(false)}\n              >\n                <View>\n                  <Button title=\"Changer\" onPress={() => editAvatar()} />\n                  <Button\n                    title=\"Supprimer\"\n                    buttonStyle={{\n                      backgroundColor: theme.colors.grey0\n                    }}\n                    onPress={() => deleteFile(\"avatar\", user.avatar?.filename)}\n                  />\n                </View>\n              </Modal>\n            </LinearGradient>\n            <View style={{ flexDirection: \"row\" }}>\n              <Icon name=\"briefcase\" size={20} color=\"grey\" />\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  marginHorizontal: 8,\n                  flex: 1\n                }}\n              >\n                {user.jobTitle} chez {user.organisation}\n              </Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"flex-start\",\n                justifyContent: \"flex-start\"\n              }}\n            >\n              <Icon name=\"school\" size={20} color=\"grey\" />\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  marginHorizontal: 8,\n                  flex: 1\n                }}\n              >\n                Promotion {user.promo}\n              </Text>\n            </View>\n            <Divider\n              style={{\n                marginVertical: 8,\n                backgroundColor: \"grey\",\n                borderWidth: 1,\n                width: 20\n              }}\n            />\n            <View style={{ flexDirection: \"row\" }}>\n              <Text style={{ textAlign: \"center\", flex: 1, marginEnd: 8 }}>\n                {user.description}\n              </Text>\n            </View>\n            <Divider\n              style={{\n                marginVertical: 8,\n                backgroundColor: \"grey\",\n                borderWidth: 1,\n                width: 20\n              }}\n            />\n            <View style={{ flexDirection: \"row\" }}>\n              <Icon name=\"at\" size={20} color=\"grey\" />\n              <Text\n                style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n              >\n                {user.email}\n              </Text>\n            </View>\n          </ScrollView>\n          <View>\n            <Button\n              title=\"Editer\"\n              onPress={() => navigation.navigate(\"Edit\")}\n            />\n          </View>\n        </View>\n      ) : (\n        <View\n          style={{ flex: 1, alignContent: \"center\", justifyContent: \"center\" }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    uploadFile: (file, type) => dispatch(uploadFile(file, type)),\n    deleteFile: (bucketName, id) => dispatch(deleteFile(bucketName, id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReadProfileScreen);\n"]},"metadata":{},"sourceType":"module"}