{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/App.js\";\nimport React from \"react\";\nimport \"react-native-gesture-handler\";\nimport { Provider, useSelector, shallowEqual } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { store, persistor } from \"./store/index\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { ThemeProvider, Icon } from \"react-native-elements\";\nimport MyJobs from \"./components/MyJobs\";\nimport Jobs from \"./components/Jobs\";\nimport Profile from \"./components/Profile\";\nimport People from \"./components/People\";\nimport Messages from \"./components/Messages\";\nimport Auth from \"./components/Auth\";\nimport Notifier from \"./components/Notifier\";\nimport theme from \"./Theme.json\";\nimport { navigationRef, isMountedRef } from \"./RootNavigation\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nvar BottomTab = createBottomTabNavigator();\nvar Drawer = createDrawerNavigator();\nvar Stack = createStackNavigator();\n\nvar SplashScreen = function SplashScreen() {\n  return React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  });\n};\n\nvar MainStack = function MainStack() {\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: \"People\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          switch (route.name) {\n            case \"Home\":\n              iconName = \"home\";\n              break;\n\n            case \"Jobs\":\n              iconName = \"briefcase\";\n              break;\n\n            case \"People\":\n              iconName = \"account-group\";\n              break;\n\n            case \"Messages\":\n              iconName = \"forum\";\n              break;\n\n            default:\n              break;\n          }\n\n          return React.createElement(Icon, {\n            name: iconName,\n            size: size,\n            color: color,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 18\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: theme.colors.primary,\n      inactiveTintColor: \"gray\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"People\",\n    component: People,\n    options: {\n      title: \"Alumnis\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Jobs\",\n    component: Jobs,\n    options: {\n      title: \"Emplois\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Messages\",\n    component: Messages,\n    options: {\n      title: \"Messages\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar AppStack = function AppStack() {\n  if (auth.isLoading) {\n    return React.createElement(SplashScreen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 12\n      }\n    });\n  }\n\n  React.useEffect(function () {\n    var bootstrapAsync = function bootstrapAsync() {\n      var userToken;\n      return _regeneratorRuntime.async(function bootstrapAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(store.getState().auth.user.token);\n\n            case 3:\n              userToken = _context.sent;\n              console.log(userToken);\n              _context.next = 9;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    bootstrapAsync();\n  }, []);\n  var isLoggedIn = useSelector(function (state) {\n    return state.auth.isLoggedIn;\n  }, shallowEqual);\n  console.log(isLoggedIn);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      maxWidth: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, isLoggedIn ? React.createElement(Drawer.Navigator, {\n    initialRouteName: \"Main\",\n    headerMode: \"screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Main\",\n    component: MainStack,\n    options: {\n      title: \"Acceuil\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: Profile,\n    options: {\n      title: \"Mon profil\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"MyJobs\",\n    component: MyJobs,\n    options: {\n      title: \"Mes offres d'emplois\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  })) : React.createElement(Auth, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar App = function App() {\n  React.useEffect(function () {\n    isMountedRef.current = true;\n    return function () {\n      return isMountedRef.current = false;\n    };\n  }, []);\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, React.createElement(PersistGate, {\n    loading: null,\n    persistor: persistor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, React.createElement(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      flexDirection: \"row\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, Platform.OS === \"ios\" && React.createElement(StatusBar, {\n    barStyle: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 39\n    }\n  }), React.createElement(NavigationContainer, {\n    ref: navigationRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, React.createElement(AppStack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }), React.createElement(Notifier, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/App.js"],"names":["React","Provider","useSelector","shallowEqual","store","persistor","PersistGate","NavigationContainer","createBottomTabNavigator","createDrawerNavigator","ThemeProvider","Icon","MyJobs","Jobs","Profile","People","Messages","Auth","Notifier","theme","navigationRef","isMountedRef","createStackNavigator","BottomTab","Drawer","Stack","SplashScreen","MainStack","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","colors","primary","inactiveTintColor","title","AppStack","auth","isLoading","useEffect","bootstrapAsync","getState","user","token","userToken","console","log","isLoggedIn","state","flex","maxWidth","App","current","flexDirection","justifyContent","Platform","OS"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"react-native-gesture-handler\";\nimport { Provider, useSelector, shallowEqual } from \"react-redux\";\nimport { View, SafeAreaView, Platform, StatusBar } from \"react-native\";\nimport { store, persistor } from \"./store/index\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { ThemeProvider, Icon } from \"react-native-elements\";\nimport MyJobs from \"./components/MyJobs\";\nimport Jobs from \"./components/Jobs\";\nimport Profile from \"./components/Profile\";\nimport People from \"./components/People\";\nimport Messages from \"./components/Messages\";\nimport Auth from \"./components/Auth\";\nimport Notifier from \"./components/Notifier\";\nimport theme from \"./Theme.json\";\nimport { navigationRef, isMountedRef } from \"./RootNavigation\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { ActivityIndicator } from \"react-native\";\n\nconst BottomTab = createBottomTabNavigator();\nconst Drawer = createDrawerNavigator();\nconst Stack = createStackNavigator();\n\nconst SplashScreen = () => {\n  return <ActivityIndicator size=\"large\" />;\n};\n\nconst MainStack = () => {\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"People\"\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          switch (route.name) {\n            case \"Home\":\n              iconName = \"home\";\n              break;\n            case \"Jobs\":\n              iconName = \"briefcase\";\n              break;\n            case \"People\":\n              iconName = \"account-group\";\n              break;\n            case \"Messages\":\n              iconName = \"forum\";\n              break;\n            default:\n              break;\n          }\n\n          return <Icon name={iconName} size={size} color={color} />;\n        }\n      })}\n      tabBarOptions={{\n        activeTintColor: theme.colors.primary,\n        inactiveTintColor: \"gray\"\n      }}\n    >\n      <BottomTab.Screen\n        name=\"People\"\n        component={People}\n        options={{ title: \"Alumnis\" }}\n      />\n      <BottomTab.Screen\n        name=\"Jobs\"\n        component={Jobs}\n        options={{ title: \"Emplois\" }}\n      />\n      <BottomTab.Screen\n        name=\"Messages\"\n        component={Messages}\n        options={{ title: \"Messages\" }}\n      />\n    </BottomTab.Navigator>\n  );\n};\n\nconst AppStack = () => {\n  if (auth.isLoading) {\n    return <SplashScreen />;\n  }\n\n  React.useEffect(() => {\n    const bootstrapAsync = async () => {\n      let userToken;\n      try {\n        userToken = await store.getState().auth.user.token;\n        console.log(userToken);\n      } catch (e) {}\n    };\n    bootstrapAsync();\n  }, []);\n\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn, shallowEqual);\n  console.log(isLoggedIn);\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        maxWidth: 500\n      }}\n    >\n      {isLoggedIn ? (\n        <Drawer.Navigator initialRouteName=\"Main\" headerMode=\"screen\">\n          <Drawer.Screen\n            name=\"Main\"\n            component={MainStack}\n            options={{ title: \"Acceuil\" }}\n          />\n          <Drawer.Screen\n            name=\"Profile\"\n            component={Profile}\n            options={{ title: \"Mon profil\" }}\n          />\n          <Drawer.Screen\n            name=\"MyJobs\"\n            component={MyJobs}\n            options={{ title: \"Mes offres d'emplois\" }}\n          />\n        </Drawer.Navigator>\n      ) : (\n        <Auth />\n      )}\n    </View>\n  );\n};\n\nconst App = () => {\n  React.useEffect(() => {\n    isMountedRef.current = true;\n    return () => (isMountedRef.current = false);\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <SafeAreaView\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"center\"\n            }}\n          >\n            {Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />}\n            <NavigationContainer ref={navigationRef}>\n              <AppStack />\n              <Notifier />\n            </NavigationContainer>\n          </SafeAreaView>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}