{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/LobbyScreen.js\";\nimport React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { SearchBar, Avatar, ThemeContext, Button, Icon, Overlay } from \"react-native-elements\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchUsers as _fetchUsers } from \"../actions/usersActions\";\nimport { fetchConversations as _fetchConversations, sendMessage as _sendMessage, deleteConversation as _deleteConversation } from \"../actions/chatActions\";\n\nvar SearchResultItem = function SearchResultItem(_ref) {\n  var item = _ref.item,\n      theme = _ref.theme,\n      onSendMessage = _ref.onSendMessage,\n      navigation = _ref.navigation,\n      chat = _ref.chat;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showMessageForm = _useState2[0],\n      setShowMessageForm = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newMessage = _useState4[0],\n      setNewMessage = _useState4[1];\n\n  return React.createElement(TouchableOpacity, {\n    onPress: chat.interlocutorsIds.includes(item._id) ? function () {\n      return navigation.navigate(\"Room\", {\n        conversation_id: chat.convIdsWithPartsIds.filter(function (element) {\n          return element.participants.includes(item._id) === true;\n        }).filter(function (conv) {\n          return conv.participants.length === 2;\n        })[0]._id\n      });\n    } : function () {\n      return setShowMessageForm(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      paddingVertical: 4,\n      paddingHorizontal: 8,\n      borderBottomColor: theme.colors.grey5,\n      borderBottomWidth: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      paddingLeft: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, _.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname))), React.createElement(Overlay, {\n    isVisible: showMessageForm,\n    width: \"auto\",\n    containerStyle: {},\n    height: 100,\n    overlayStyle: {\n      marginHorizontal: 12,\n      paddingHorizontal: 10,\n      borderRadius: 12,\n      paddingVertical: 16\n    },\n    onBackdropPress: function onBackdropPress() {\n      setShowMessageForm(false);\n      setNewMessage(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, _.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      backgroundColor: \"white\",\n      paddingVertical: 8,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      width: Dimensions.get(\"screen\").width * 0.8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      height: 40,\n      flex: 1,\n      borderBottomWidth: 1\n    },\n    onChangeText: function onChangeText(text) {\n      return setNewMessage(text);\n    },\n    value: newMessage,\n    multiline: true,\n    numberOfLines: 8,\n    placeholder: \"Ecrivez votre message ici.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    icon: React.createElement(Icon, {\n      name: \"send\",\n      size: 20,\n      color: newMessage ? theme.colors.primary : theme.colors.grey2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }),\n    disabled: !newMessage,\n    type: \"clear\",\n    onPress: function onPress() {\n      onSendMessage(newMessage, item._id);\n      setNewMessage(\"\");\n      setShowMessageForm(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  })))));\n};\n\nvar Item = function Item(_ref2) {\n  var item = _ref2.item,\n      navigation = _ref2.navigation,\n      auth = _ref2.auth,\n      theme = _ref2.theme,\n      deleteConversation = _ref2.deleteConversation,\n      fetchConversations = _ref2.fetchConversations;\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showActionMenu = _useState6[0],\n      setShowActionMenu = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      deleting = _useState8[0],\n      setDeleting = _useState8[1];\n\n  var listParticipants = function listParticipants(item) {\n    var participantsArr = item.participants.filter(function (participant) {\n      return participant._id !== auth.user._id;\n    });\n\n    if (participantsArr.length > 1) {\n      var participantsList = participantsArr.map(function (participant) {\n        return participant.firstname;\n      });\n      return participantsList.toString().replace(\",\", \", \");\n    } else {\n      return _.capitalize(participantsArr[0].firstname).concat(\" \", _.capitalize(participantsArr[0].lastname));\n    }\n  };\n\n  var participants = listParticipants(item);\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Room\", {\n        conversation_id: item._id\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: 8,\n      paddingVertical: 8,\n      borderBottomColor: \"white\",\n      borderBottomWidth: 3,\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      alignContent: \"center\",\n      justifyContent: \"center\",\n      paddingRight: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, React.createElement(Avatar, {\n    size: \"medium\",\n    title: item.firstname.charAt(0).concat(item.lastname.charAt(0)).toUpperCase(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"space-between\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1,\n      justifyContent: \"space-between\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      fontSize: 16,\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, participants), React.createElement(Text, {\n    color: \"grey\",\n    style: {\n      color: \"grey\",\n      fontSize: 10,\n      textAlignVertical: \"bottom\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, _.capitalize(moment(item.lastMessage.sentAt).locale(\"fr\").fromNow()))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, item.lastMessage.sender === auth.user._id ? React.createElement(Icon, {\n    name: \"arrow-top-right\",\n    color: theme.colors.grey1,\n    size: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }\n  }) : React.createElement(Icon, {\n    name: \"arrow-bottom-left\",\n    color: theme.colors.grey3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }\n  })), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"center\",\n      fontSize: 14,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, item.lastMessage.text), React.createElement(View, {\n    style: {\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    name: \"dots-horizontal\",\n    style: {\n      alignSelf: \"flex-end\"\n    },\n    onPress: function onPress() {\n      return setShowActionMenu();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  })), React.createElement(Overlay, {\n    isVisible: showActionMenu,\n    onBackdropPress: function onBackdropPress() {\n      return setShowActionMenu(false);\n    },\n    height: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 15\n    }\n  }, React.createElement(Button, {\n    title: \"Supprimer la conversation\",\n    loading: deleting,\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDeleting(true);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(deleteConversation(item._id));\n\n            case 3:\n              setDeleting(false);\n              setShowActionMenu(false);\n              fetchConversations();\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nvar ChatLobbyScreen = function ChatLobbyScreen(_ref3) {\n  var navigation = _ref3.navigation,\n      fetchConversations = _ref3.fetchConversations,\n      fetchUsers = _ref3.fetchUsers,\n      chat = _ref3.chat,\n      users = _ref3.users,\n      auth = _ref3.auth,\n      sendMessage = _ref3.sendMessage,\n      deleteConversation = _ref3.deleteConversation;\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      refreshing = _useState10[0],\n      setRefreshing = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      search = _useState12[0],\n      setSearch = _useState12[1];\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  useEffect(function () {\n    function fetchData() {\n      fetchConversations();\n      fetchUsers();\n    }\n\n    fetchData();\n  }, []);\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    fetchConversations();\n    setRefreshing(false);\n  }, [refreshing]);\n\n  var searchProcess = function searchProcess() {\n    var firstnameRes = users.users.filter(function (user) {\n      return user.firstname.includes(search.toLowerCase());\n    }).filter(function (user) {\n      return user._id !== auth.user._id;\n    });\n    var firstnameResIds = firstnameRes.map(function (item) {\n      return item._id;\n    });\n    var lastnameRes = users.users.filter(function (user) {\n      return user.lastname.includes(search.toLowerCase());\n    }).filter(function (user) {\n      return user._id !== auth.user._id;\n    }).filter(function (item) {\n      return firstnameResIds.includes(item._id) === false;\n    });\n    return firstnameRes.concat(lastnameRes);\n  };\n\n  var onSendMessage = function onSendMessage(newMessage, recipient) {\n    if (!newMessage) {\n      return;\n    }\n\n    sendMessage({\n      message: {\n        text: newMessage,\n        sentAt: new Date()\n      },\n      recipients: [recipient]\n    });\n    setSearch(null);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      paddingVertical: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }\n  }, React.createElement(SearchBar, {\n    placeholder: \"Chercher un alumni ici...\",\n    onChangeText: setSearch,\n    value: search,\n    lightTheme: true,\n    platform: \"android\",\n    containerStyle: {\n      paddingTop: 0,\n      height: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }\n  }), users.isLoaded && React.createElement(FlatList, {\n    style: {},\n    data: search && searchProcess(),\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item;\n      return React.createElement(SearchResultItem, {\n        item: item,\n        theme: theme,\n        onSendMessage: onSendMessage,\n        chat: chat,\n        navigation: navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 15\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }), !users.isLoaded && React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 11\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }))), chat.isLoaded ? chat.conversations.length > 0 ? React.createElement(FlatList, {\n    style: styles.feed,\n    data: chat.conversations,\n    renderItem: function renderItem(_ref5) {\n      var item = _ref5.item;\n      return React.createElement(Item, {\n        item: item,\n        auth: auth,\n        navigation: navigation,\n        theme: theme,\n        deleteConversation: deleteConversation,\n        fetchConversations: fetchConversations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 15\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 15\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      color: theme.colors.grey3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 13\n    }\n  }, \"Aucune conversation\"), React.createElement(Button, {\n    title: \"Rafraichir\",\n    type: \"clear\",\n    onPress: fetchConversations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 13\n    }\n  })) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    chat: state.chat,\n    users: state.users\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchConversations: function fetchConversations() {\n      return dispatch(_fetchConversations());\n    },\n    fetchUsers: function fetchUsers() {\n      return dispatch(_fetchUsers());\n    },\n    sendMessage: function sendMessage(message) {\n      return dispatch(_sendMessage(message));\n    },\n    deleteConversation: function deleteConversation(conversation_id) {\n      return dispatch(_deleteConversation(conversation_id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatLobbyScreen);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  item: {\n    paddingTop: 8,\n    paddingHorizontal: 20,\n    marginVertical: 4,\n    marginHorizontal: 0,\n    borderBottomWidth: 1,\n    paddingVertical: 12,\n    flexDirection: \"row\"\n  },\n  title: {\n    fontSize: 32\n  },\n  feed: {\n    borderRadius: 0,\n    shadowOffset: {\n      width: 10,\n      height: 10\n    },\n    shadowColor: \"black\",\n    shadowOpacity: 0.3,\n    elevation: 2\n  }\n});","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/LobbyScreen.js"],"names":["React","useState","useEffect","useCallback","useContext","connect","SearchBar","Avatar","ThemeContext","Button","Icon","Overlay","_","moment","fetchUsers","fetchConversations","sendMessage","deleteConversation","SearchResultItem","item","theme","onSendMessage","navigation","chat","showMessageForm","setShowMessageForm","newMessage","setNewMessage","interlocutorsIds","includes","_id","navigate","conversation_id","convIdsWithPartsIds","filter","element","participants","conv","length","flexDirection","alignItems","paddingVertical","paddingHorizontal","borderBottomColor","colors","grey5","borderBottomWidth","paddingLeft","capitalize","firstname","lastname","marginHorizontal","borderRadius","textAlign","backgroundColor","justifyContent","alignContent","width","Dimensions","get","height","flex","text","primary","grey2","Item","auth","showActionMenu","setShowActionMenu","deleting","setDeleting","listParticipants","participantsArr","participant","user","participantsList","map","toString","replace","concat","paddingRight","charAt","toUpperCase","textAlignVertical","fontSize","fontWeight","color","lastMessage","sentAt","locale","fromNow","sender","grey1","grey3","alignSelf","ChatLobbyScreen","users","refreshing","setRefreshing","search","setSearch","fetchData","onRefresh","searchProcess","firstnameRes","toLowerCase","firstnameResIds","lastnameRes","recipient","message","Date","recipients","styles","container","paddingTop","isLoaded","conversations","feed","mapStateToProps","state","mapDispatchToProps","dispatch","StyleSheet","create","marginVertical","title","shadowOffset","shadowColor","shadowOpacity","elevation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ActivityIndicator,\n  FlatList,\n  TouchableOpacity,\n  RefreshControl,\n  TextInput,\n  Dimensions\n} from \"react-native\";\nimport {\n  SearchBar,\n  Avatar,\n  ThemeContext,\n  Button,\n  Icon,\n  Overlay\n} from \"react-native-elements\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchUsers } from \"../actions/usersActions\";\nimport {\n  fetchConversations,\n  sendMessage,\n  deleteConversation\n} from \"../actions/chatActions\";\n\nconst SearchResultItem = ({ item, theme, onSendMessage, navigation, chat }) => {\n  const [showMessageForm, setShowMessageForm] = useState(false);\n  const [newMessage, setNewMessage] = useState(null);\n\n  return (\n    <TouchableOpacity\n      onPress={\n        chat.interlocutorsIds.includes(item._id)\n          ? () =>\n              navigation.navigate(\"Room\", {\n                conversation_id: chat.convIdsWithPartsIds\n                  .filter(\n                    element => element.participants.includes(item._id) === true\n                  )\n                  .filter(conv => conv.participants.length === 2)[0]._id\n              })\n          : () => setShowMessageForm(true)\n      }\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          paddingVertical: 4,\n          paddingHorizontal: 8,\n          borderBottomColor: theme.colors.grey5,\n          borderBottomWidth: 1\n        }}\n      >\n        {/* <Avatar size=\"small\" /> */}\n        <Text style={{ paddingLeft: 12 }}>\n          {_.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname)}\n        </Text>\n      </View>\n      <Overlay\n        isVisible={showMessageForm}\n        width=\"auto\"\n        containerStyle={{}}\n        height={100}\n        overlayStyle={{\n          marginHorizontal: 12,\n          paddingHorizontal: 10,\n          borderRadius: 12,\n          paddingVertical: 16\n        }}\n        onBackdropPress={() => {\n          setShowMessageForm(false);\n          setNewMessage(null);\n        }}\n      >\n        <View style={{ paddingHorizontal: 12 }}>\n          <Text style={{ textAlign: \"center\" }}>\n            {_.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname)}\n          </Text>\n          <View\n            style={{\n              flexDirection: \"row\",\n              backgroundColor: \"white\",\n              paddingVertical: 8,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              width: Dimensions.get(\"screen\").width * 0.8\n            }}\n          >\n            <TextInput\n              style={{\n                height: 40,\n                flex: 1,\n                borderBottomWidth: 1\n              }}\n              onChangeText={text => setNewMessage(text)}\n              value={newMessage}\n              multiline\n              numberOfLines={8}\n              placeholder=\"Ecrivez votre message ici.\"\n            />\n            <Button\n              icon={\n                <Icon\n                  name=\"send\"\n                  size={20}\n                  color={newMessage ? theme.colors.primary : theme.colors.grey2}\n                />\n              }\n              disabled={!newMessage}\n              type=\"clear\"\n              onPress={() => {\n                onSendMessage(newMessage, item._id);\n                setNewMessage(\"\");\n                setShowMessageForm(false);\n              }}\n            />\n          </View>\n        </View>\n      </Overlay>\n    </TouchableOpacity>\n  );\n};\n\nconst Item = ({\n  item,\n  navigation,\n  auth,\n  theme,\n  deleteConversation,\n  fetchConversations\n}) => {\n  const [showActionMenu, setShowActionMenu] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const listParticipants = item => {\n    const participantsArr = item.participants.filter(\n      participant => participant._id !== auth.user._id\n    );\n\n    if (participantsArr.length > 1) {\n      const participantsList = participantsArr.map(\n        participant => participant.firstname\n      );\n      return participantsList.toString().replace(\",\", \", \");\n    } else {\n      return _.capitalize(participantsArr[0].firstname).concat(\n        \" \",\n        _.capitalize(participantsArr[0].lastname)\n      );\n    }\n  };\n  const participants = listParticipants(item);\n\n  return (\n    <TouchableOpacity\n      onPress={() => navigation.navigate(\"Room\", { conversation_id: item._id })}\n    >\n      <View\n        style={{\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          borderBottomColor: \"white\",\n          borderBottomWidth: 3,\n          backgroundColor: \"white\"\n        }}\n      >\n        <View style={{ flexDirection: \"row\" }}>\n          <View\n            style={{\n              alignContent: \"center\",\n              justifyContent: \"center\",\n              paddingRight: 8\n            }}\n          >\n            <Avatar\n              // source={dataURL}\n              size=\"medium\"\n              title={item.firstname\n                .charAt(0)\n                .concat(item.lastname.charAt(0))\n                .toUpperCase()}\n            />\n          </View>\n          <View\n            style={{\n              flex: 1,\n              justifyContent: \"space-between\"\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                flex: 1,\n                justifyContent: \"space-between\"\n              }}\n            >\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  fontSize: 16,\n                  fontWeight: \"bold\"\n                }}\n              >\n                {participants}\n              </Text>\n              <Text\n                color=\"grey\"\n                style={{\n                  color: \"grey\",\n                  fontSize: 10,\n                  textAlignVertical: \"bottom\"\n                }}\n              >\n                {_.capitalize(\n                  moment(item.lastMessage.sentAt)\n                    .locale(\"fr\")\n                    .fromNow()\n                )}\n              </Text>\n            </View>\n            <View style={{ flexDirection: \"row\" }}>\n              <View\n                style={{ alignContent: \"center\", justifyContent: \"center\" }}\n              >\n                {item.lastMessage.sender === auth.user._id ? (\n                  <Icon\n                    name=\"arrow-top-right\"\n                    color={theme.colors.grey1}\n                    size={14}\n                  />\n                ) : (\n                  <Icon name=\"arrow-bottom-left\" color={theme.colors.grey3} />\n                )}\n              </View>\n              <Text\n                style={{\n                  textAlignVertical: \"center\",\n                  fontSize: 14,\n                  flex: 1\n                }}\n              >\n                {item.lastMessage.text}\n              </Text>\n              <View\n                style={{ alignContent: \"center\", justifyContent: \"center\" }}\n              >\n                <Icon\n                  name=\"dots-horizontal\"\n                  style={{ alignSelf: \"flex-end\" }}\n                  onPress={() => setShowActionMenu()}\n                />\n              </View>\n              <Overlay\n                isVisible={showActionMenu}\n                onBackdropPress={() => setShowActionMenu(false)}\n                height=\"auto\"\n              >\n                <Button\n                  title=\"Supprimer la conversation\"\n                  loading={deleting}\n                  onPress={async () => {\n                    setDeleting(true);\n                    await deleteConversation(item._id);\n                    setDeleting(false);\n                    setShowActionMenu(false);\n                    fetchConversations();\n                  }}\n                />\n              </Overlay>\n            </View>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst ChatLobbyScreen = ({\n  navigation,\n  fetchConversations,\n  fetchUsers,\n  chat,\n  users,\n  auth,\n  sendMessage,\n  deleteConversation\n}) => {\n  const [refreshing, setRefreshing] = useState(false);\n  const [search, setSearch] = useState(null);\n  const { theme } = useContext(ThemeContext);\n\n  useEffect(() => {\n    function fetchData() {\n      fetchConversations();\n      fetchUsers();\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    fetchConversations();\n    setRefreshing(false);\n  }, [refreshing]);\n\n  const searchProcess = () => {\n    const firstnameRes = users.users\n      .filter(user => user.firstname.includes(search.toLowerCase()))\n      .filter(user => user._id !== auth.user._id);\n    const firstnameResIds = firstnameRes.map(item => item._id);\n    const lastnameRes = users.users\n      .filter(user => user.lastname.includes(search.toLowerCase()))\n      .filter(user => user._id !== auth.user._id)\n      .filter(item => firstnameResIds.includes(item._id) === false);\n    return firstnameRes.concat(lastnameRes);\n  };\n\n  const onSendMessage = (newMessage, recipient) => {\n    if (!newMessage) {\n      return;\n    }\n    sendMessage({\n      message: {\n        text: newMessage,\n        sentAt: new Date()\n      },\n      recipients: [recipient]\n    });\n    setSearch(null);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={{ backgroundColor: \"white\", paddingVertical: 4 }}>\n        <SearchBar\n          placeholder=\"Chercher un alumni ici...\"\n          onChangeText={setSearch}\n          value={search}\n          lightTheme={true}\n          platform=\"android\"\n          containerStyle={{\n            paddingTop: 0,\n            height: 40\n          }}\n        />\n        {users.isLoaded && (\n          <FlatList\n            style={{}}\n            data={search && searchProcess()}\n            renderItem={({ item }) => (\n              <SearchResultItem\n                item={item}\n                theme={theme}\n                onSendMessage={onSendMessage}\n                chat={chat}\n                navigation={navigation}\n              />\n            )}\n            keyExtractor={item => item._id}\n          />\n        )}\n        {!users.isLoaded && (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\"\n            }}\n          >\n            <ActivityIndicator size=\"small\" />\n          </View>\n        )}\n      </View>\n      {chat.isLoaded ? (\n        chat.conversations.length > 0 ? (\n          <FlatList\n            style={styles.feed}\n            data={chat.conversations}\n            renderItem={({ item }) => (\n              <Item\n                item={item}\n                auth={auth}\n                navigation={navigation}\n                theme={theme}\n                deleteConversation={deleteConversation}\n                fetchConversations={fetchConversations}\n              />\n            )}\n            keyExtractor={item => item._id}\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n          />\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\"\n            }}\n          >\n            <Text style={{ textAlign: \"center\", color: theme.colors.grey3 }}>\n              Aucune conversation\n            </Text>\n            <Button\n              title=\"Rafraichir\"\n              type=\"clear\"\n              onPress={fetchConversations}\n            />\n          </View>\n        )\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  chat: state.chat,\n  users: state.users\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchConversations: () => dispatch(fetchConversations()),\n    fetchUsers: () => dispatch(fetchUsers()),\n    sendMessage: message => dispatch(sendMessage(message)),\n    deleteConversation: conversation_id =>\n      dispatch(deleteConversation(conversation_id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatLobbyScreen);\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  item: {\n    paddingTop: 8,\n    paddingHorizontal: 20,\n    marginVertical: 4,\n    marginHorizontal: 0,\n    borderBottomWidth: 1,\n\n    paddingVertical: 12,\n    flexDirection: \"row\"\n  },\n  title: {\n    fontSize: 32\n  },\n  feed: {\n    borderRadius: 0,\n    shadowOffset: { width: 10, height: 10 },\n    shadowColor: \"black\",\n    shadowOpacity: 0.3,\n    elevation: 2\n  }\n});\n"]},"metadata":{},"sourceType":"module"}