{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/client/src/components/Messages/MessagesLobbyScreen.js\";\nimport React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Avatar, ThemeContext, Button, Icon } from \"react-native-elements\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport { fetchConversations } from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\n\nvar Item = function Item(_ref) {\n  var _item$lastMessage, _item$participants$3, _item$participants$4, _item$participants$5, _item$participants$6;\n\n  var item = _ref.item,\n      navigation = _ref.navigation,\n      auth = _ref.auth;\n\n  var listParticipants = function listParticipants() {\n    var _item$participants, _item$participants3;\n\n    _.remove(item.participants, function (participant) {\n      return participant._id === (auth == null ? void 0 : auth.user._id);\n    });\n\n    if (((_item$participants = item.participants) == null ? void 0 : _item$participants.length) > 1) {\n      var _item$participants2;\n\n      var participantsList = (_item$participants2 = item.participants) == null ? void 0 : _item$participants2.map(function (participant) {\n        return _.capitalize(participant.firstname);\n      });\n      return participantsList.toString().replace(\",\", \", \");\n    } else if (((_item$participants3 = item.participants) == null ? void 0 : _item$participants3.length) === 1) {\n      var _item$participants$, _item$participants$2;\n\n      return _.capitalize((_item$participants$ = item.participants[0]) == null ? void 0 : _item$participants$.firstname).concat(\" \", _.capitalize((_item$participants$2 = item.participants[0]) == null ? void 0 : _item$participants$2.lastname));\n    } else {\n      return \"Compte supprimÃ©\";\n    }\n  };\n\n  var title = listParticipants();\n  var incoming = ((_item$lastMessage = item.lastMessage) == null ? void 0 : _item$lastMessage.sender) !== (auth == null ? void 0 : auth.user._id);\n  if (!item) return null;\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Room\", {\n        title: title,\n        conversation_id: item._id\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: 8,\n      paddingVertical: 8,\n      borderBottomColor: \"white\",\n      borderBottomWidth: 3,\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      alignContent: \"center\",\n      justifyContent: \"center\",\n      paddingRight: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, ((_item$participants$3 = item.participants[0]) == null ? void 0 : _item$participants$3.avatar) ? React.createElement(Avatar, {\n    source: {\n      uri: apiConfig.baseUrl + \"/api/files/avatars/\" + ((_item$participants$4 = item.participants[0]) == null ? void 0 : _item$participants$4.avatar)\n    },\n    size: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }) : React.createElement(Avatar, {\n    size: \"medium\",\n    title: (_item$participants$5 = item.participants[0]) == null ? void 0 : _item$participants$5.firstname[0].concat((_item$participants$6 = item.participants[0]) == null ? void 0 : _item$participants$6.lastname[0]).toUpperCase(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"flex-start\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      fontSize: 16,\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, title), React.createElement(Text, {\n    color: \"grey\",\n    style: {\n      color: \"grey\",\n      fontSize: 10,\n      textAlignVertical: \"bottom\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, _.capitalize(moment(item.messages[0].sentAt).locale(\"fr\").fromNow()))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlignVertical: \"center\",\n      fontSize: 14,\n      flex: 1,\n      fontWeight: item.messages[0] && incoming ? 100 : 800\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, item.messages[0].sender === (auth == null ? void 0 : auth.user._id) && \"Vous: \", item.messages[0].text, item.readAck.message_id === messages[0]._id && !incoming && \"Lu il y a \" + moment(item.readAck.timestamp).locale(\"fr\").fromNow()))))));\n};\n\nvar ChatLobbyScreen = function ChatLobbyScreen(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      chat = _useSelector.chat,\n      auth = _useSelector.auth;\n\n  useEffect(function () {\n    function fetchData() {\n      dispatch(fetchConversations());\n    }\n\n    fetchData();\n  }, []);\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    dispatch(fetchConversations());\n    setRefreshing(false);\n  }, [refreshing]);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, chat.isLoaded ? chat.conversations.length > 0 ? React.createElement(FlatList, {\n    data: chat.conversations,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(Item, {\n        item: item,\n        auth: auth,\n        navigation: navigation,\n        theme: theme,\n        dispatch: dispatch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      color: theme.colors.grey3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, \"Aucune conversation\"), React.createElement(Button, {\n    title: \"Rafraichir\",\n    type: \"clear\",\n    onPress: function onPress() {\n      return dispatch(fetchConversations());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  })) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default ChatLobbyScreen;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/Messages/MessagesLobbyScreen.js"],"names":["React","useState","useEffect","useCallback","useContext","useDispatch","useSelector","Avatar","ThemeContext","Button","Icon","_","moment","fetchUsers","fetchConversations","apiConfig","Item","item","navigation","auth","listParticipants","remove","participants","participant","_id","user","length","participantsList","map","capitalize","firstname","toString","replace","concat","lastname","title","incoming","lastMessage","sender","navigate","conversation_id","paddingHorizontal","paddingVertical","borderBottomColor","borderBottomWidth","backgroundColor","flexDirection","alignContent","justifyContent","paddingRight","avatar","uri","baseUrl","toUpperCase","flex","textAlignVertical","fontSize","fontWeight","color","messages","sentAt","locale","fromNow","alignItems","text","readAck","message_id","timestamp","ChatLobbyScreen","refreshing","setRefreshing","theme","dispatch","state","chat","fetchData","onRefresh","isLoaded","conversations","textAlign","colors","grey3"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  View,\n  Text,\n  ActivityIndicator,\n  FlatList,\n  TouchableOpacity,\n  RefreshControl,\n  TextInput,\n} from \"react-native\";\nimport { Avatar, ThemeContext, Button, Icon } from \"react-native-elements\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport { fetchConversations } from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\n\nconst Item = ({ item, navigation, auth }) => {\n  const listParticipants = () => {\n    _.remove(\n      item.participants,\n      (participant) => participant._id === auth?.user._id\n    );\n\n    if (item.participants?.length > 1) {\n      const participantsList = item.participants?.map((participant) =>\n        _.capitalize(participant.firstname)\n      );\n      return participantsList.toString().replace(\",\", \", \");\n    } else if (item.participants?.length === 1) {\n      return _.capitalize(item.participants[0]?.firstname).concat(\n        \" \",\n        _.capitalize(item.participants[0]?.lastname)\n      );\n    } else {\n      return \"Compte supprimÃ©\";\n    }\n  };\n\n  const title = listParticipants();\n\n  const incoming = item.lastMessage?.sender !== auth?.user._id;\n\n  if (!item) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={() =>\n        navigation.navigate(\"Room\", {\n          title,\n          conversation_id: item._id,\n        })\n      }\n    >\n      <View\n        style={{\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          borderBottomColor: \"white\",\n          borderBottomWidth: 3,\n          backgroundColor: \"white\",\n        }}\n      >\n        <View style={{ flexDirection: \"row\" }}>\n          <View\n            style={{\n              alignContent: \"center\",\n              justifyContent: \"center\",\n              paddingRight: 8,\n            }}\n          >\n            {item.participants[0]?.avatar ? (\n              <Avatar\n                source={{\n                  uri: `${apiConfig.baseUrl}/api/files/avatars/${item.participants[0]?.avatar}`,\n                }}\n                size=\"medium\"\n              />\n            ) : (\n              <Avatar\n                size=\"medium\"\n                title={item.participants[0]?.firstname[0]\n                  .concat(item.participants[0]?.lastname[0])\n                  .toUpperCase()}\n              />\n            )}\n          </View>\n          <View\n            style={{\n              flex: 1,\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  fontSize: 16,\n                  fontWeight: \"bold\",\n                }}\n              >\n                {title}\n              </Text>\n              <Text\n                color=\"grey\"\n                style={{\n                  color: \"grey\",\n                  fontSize: 10,\n                  textAlignVertical: \"bottom\",\n                }}\n              >\n                {_.capitalize(\n                  moment(item.messages[0].sentAt).locale(\"fr\").fromNow()\n                )}\n              </Text>\n            </View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Text\n                style={{\n                  textAlignVertical: \"center\",\n                  fontSize: 14,\n                  flex: 1,\n                  fontWeight: item.messages[0] && incoming ? 100 : 800,\n                }}\n              >\n                {item.messages[0].sender === auth?.user._id && \"Vous: \"}\n                {item.messages[0].text}\n                {item.readAck.message_id === messages[0]._id &&\n                  !incoming &&\n                  `Lu il y a ${moment(item.readAck.timestamp)\n                    .locale(\"fr\")\n                    .fromNow()}`}\n              </Text>\n            </View>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst ChatLobbyScreen = ({ navigation }) => {\n  const [refreshing, setRefreshing] = useState(false);\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const { chat, auth } = useSelector((state) => state);\n\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchConversations());\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    dispatch(fetchConversations());\n    setRefreshing(false);\n  }, [refreshing]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {chat.isLoaded ? (\n        chat.conversations.length > 0 ? (\n          <FlatList\n            data={chat.conversations}\n            renderItem={({ item }) => (\n              <Item\n                item={item}\n                auth={auth}\n                navigation={navigation}\n                theme={theme}\n                dispatch={dispatch}\n              />\n            )}\n            keyExtractor={(item) => item._id}\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n          />\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text style={{ textAlign: \"center\", color: theme.colors.grey3 }}>\n              Aucune conversation\n            </Text>\n            <Button\n              title=\"Rafraichir\"\n              type=\"clear\"\n              onPress={() => dispatch(fetchConversations())}\n            />\n          </View>\n        )\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default ChatLobbyScreen;\n"]},"metadata":{},"sourceType":"module"}