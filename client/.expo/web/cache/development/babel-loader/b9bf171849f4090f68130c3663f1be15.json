{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/client/src/components/CustomInput.js\";\nimport React, { useContext, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ThemeContext, Icon } from \"react-native-elements\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { useDispatch } from \"react-redux\";\nimport { showOverlay } from \"../actions/overlayAction\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\n\nvar CustomInput = function CustomInput(_ref) {\n  var value = _ref.value,\n      placeholder = _ref.placeholder,\n      onChangeText = _ref.onChangeText,\n      searchBar = _ref.searchBar,\n      select = _ref.select,\n      clear = _ref.clear,\n      leftIcon = _ref.leftIcon,\n      label = _ref.label,\n      accept = _ref.accept,\n      date = _ref.date,\n      _ref$secureTextEntry = _ref.secureTextEntry,\n      secureTextEntry = _ref$secureTextEntry === void 0 ? false : _ref$secureTextEntry;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  if (date && value) value = moment(value).format(\"Do MMMM YYYY\");\n\n  var handleChangeText = function handleChangeText(text) {\n    return _regeneratorRuntime.async(function handleChangeText$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (accept && !(accept == null ? void 0 : accept.includes(value))) {\n              setError(true);\n            } else {\n              setError(false);\n            }\n\n            onChangeText(text);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: [styles.root],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.labelContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, label)), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, leftIcon && React.createElement(Icon, {\n    name: leftIcon,\n    containerStyle: styles.iconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), searchBar || select || date ? React.createElement(TouchableOpacity, {\n    containerStyle: [styles.TextInput, {\n      height: 60\n    }],\n    style: [styles.TextInput, {\n      alignItems: \"flex-start\",\n      justifyContent: \"center\"\n    }],\n    onPress: function onPress() {\n      if (date) return dispatch(showOverlay({\n        dateInput: {\n          onChangeText: onChangeText\n        }\n      }));\n      dispatch(showOverlay({\n        searchBar: {\n          initialValue: value,\n          searchFor: searchBar,\n          selectFrom: select,\n          onPressSuggestion: onChangeText,\n          placeholder: placeholder\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: value ? \"black\" : \"grey\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, value || placeholder)) : React.createElement(TextInput, {\n    style: styles.TextInput,\n    value: value,\n    placeholder: placeholder,\n    placeholderTextColor: \"grey\",\n    onChangeText: function onChangeText(text) {\n      handleChangeText(text);\n    },\n    secureTextEntry: secureTextEntry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), select && React.createElement(Icon, {\n    name: \"chevron-down\",\n    containerStyle: styles.iconContainer,\n    size: 25,\n    onPress: function onPress() {\n      return dispatch(showOverlay({\n        searchBar: {\n          initialValue: value,\n          searchFor: searchBar,\n          selectFrom: select,\n          onPressSuggestion: onChangeText,\n          placeholder: placeholder\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), (searchBar || clear) && React.createElement(Icon, {\n    name: \"close\",\n    containerStyle: styles.iconContainer,\n    size: 20,\n    onPress: function onPress() {\n      return onChangeText(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default CustomInput;\nvar styles = StyleSheet.create({\n  root: {\n    marginBottom: 12,\n    flexDirection: \"row\",\n    alignSelf: \"stretch\"\n  },\n  iconContainer: {\n    marginHorizontal: 4\n  },\n  content: {\n    flex: 1,\n    width: 300\n  },\n  labelContainer: {\n    marginBottom: 4\n  },\n  sides: {\n    flex: 1,\n    backgroundColor: \"blue\"\n  },\n  label: {\n    color: \"darkgrey\"\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: \"grey\",\n    height: 40,\n    backgroundColor: \"rgba(250,250,250,1)\"\n  },\n  TextInput: {\n    paddingHorizontal: 4,\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/CustomInput.js"],"names":["React","useContext","useState","ThemeContext","Icon","TouchableOpacity","useDispatch","showOverlay","moment","CustomInput","value","placeholder","onChangeText","searchBar","select","clear","leftIcon","label","accept","date","secureTextEntry","theme","dispatch","error","setError","format","handleChangeText","text","includes","styles","root","content","labelContainer","inputContainer","iconContainer","TextInput","height","alignItems","justifyContent","dateInput","initialValue","searchFor","selectFrom","onPressSuggestion","color","StyleSheet","create","marginBottom","flexDirection","alignSelf","marginHorizontal","flex","width","sides","backgroundColor","borderRadius","borderWidth","borderColor","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { View, TextInput, Text, StyleSheet } from \"react-native\";\nimport { ThemeContext, Icon } from \"react-native-elements\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { useDispatch } from \"react-redux\";\nimport { showOverlay } from \"../actions/overlayAction\";\n\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\n\nconst CustomInput = ({\n  value,\n  placeholder,\n  onChangeText,\n  searchBar,\n  select,\n  clear,\n  leftIcon,\n  label,\n  accept,\n  date,\n  secureTextEntry = false,\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const [error, setError] = useState(false);\n\n  if (date && value) value = moment(value).format(\"Do MMMM YYYY\");\n\n  const handleChangeText = async (text) => {\n    if (accept && !accept?.includes(value)) {\n      setError(true);\n    } else {\n      setError(false);\n    }\n\n    onChangeText(text);\n  };\n\n  return (\n    <View style={[styles.root]}>\n      <View style={styles.content}>\n        <View style={styles.labelContainer}>\n          <Text style={styles.label}>{label}</Text>\n        </View>\n        <View style={styles.inputContainer}>\n          {leftIcon && (\n            <Icon name={leftIcon} containerStyle={styles.iconContainer} />\n          )}\n          {searchBar || select || date ? (\n            <TouchableOpacity\n              containerStyle={[styles.TextInput, { height: 60 }]}\n              style={[\n                styles.TextInput,\n                { alignItems: \"flex-start\", justifyContent: \"center\" },\n              ]}\n              onPress={() => {\n                if (date)\n                  return dispatch(\n                    showOverlay({\n                      dateInput: { onChangeText },\n                    })\n                  );\n                dispatch(\n                  showOverlay({\n                    searchBar: {\n                      initialValue: value,\n                      searchFor: searchBar,\n                      selectFrom: select,\n                      onPressSuggestion: onChangeText,\n                      placeholder,\n                    },\n                  })\n                );\n              }}\n            >\n              <Text style={{ color: value ? \"black\" : \"grey\" }}>\n                {value || placeholder}\n              </Text>\n            </TouchableOpacity>\n          ) : (\n            <TextInput\n              style={styles.TextInput}\n              value={value}\n              placeholder={placeholder}\n              placeholderTextColor=\"grey\"\n              onChangeText={(text) => {\n                handleChangeText(text);\n              }}\n              secureTextEntry={secureTextEntry}\n            />\n          )}\n          {select && (\n            <Icon\n              name=\"chevron-down\"\n              containerStyle={styles.iconContainer}\n              size={25}\n              onPress={() =>\n                dispatch(\n                  showOverlay({\n                    searchBar: {\n                      initialValue: value,\n                      searchFor: searchBar,\n                      selectFrom: select,\n                      onPressSuggestion: onChangeText,\n                      placeholder,\n                    },\n                  })\n                )\n              }\n            />\n          )}\n          {(searchBar || clear) && (\n            <Icon\n              name=\"close\"\n              containerStyle={styles.iconContainer}\n              size={20}\n              onPress={() => onChangeText(\"\")}\n            />\n          )}\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default CustomInput;\n\nconst styles = StyleSheet.create({\n  root: { marginBottom: 12, flexDirection: \"row\", alignSelf: \"stretch\" },\n  iconContainer: { marginHorizontal: 4 },\n  content: { flex: 1, width: 300 },\n  labelContainer: { marginBottom: 4 },\n  sides: { flex: 1, backgroundColor: \"blue\" },\n  label: { color: \"darkgrey\" },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: \"grey\",\n    height: 40,\n    backgroundColor: \"rgba(250,250,250,1)\",\n  },\n  TextInput: { paddingHorizontal: 4, flex: 1 },\n});\n"]},"metadata":{},"sourceType":"module"}