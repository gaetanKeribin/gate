{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/client/src/components/CustomOverlay.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { resetOverlay } from \"../actions/overlayAction\";\nimport * as RootNavigation from \"../RootNavigation.js\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nvar Notifier = function Notifier(_ref) {\n  var notification = _ref.notification,\n      theme = _ref.theme;\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: 10,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingHorizontal: 12,\n      paddingVertical: 8,\n      elevation: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, React.createElement(Icon, {\n    containerStyle: {\n      marginBottom: 8\n    },\n    size: 30,\n    name: notification.variant === \"success\" ? \"check-circle-outline\" : notification.variant === \"warning\" ? \"alert-circle-outline\" : notification.variant === \"error\" ? \"close-circle-outline\" : notification.icon,\n    color: notification.variant === \"success\" ? \"green\" : notification.variant === \"warning\" ? \"yellow\" : notification.variant === \"error\" ? \"red\" : notification.variant === \"error\" ? \"blue\" : theme.colors.grey1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), notification.message && React.createElement(Text, {\n    style: {\n      fontSize: 14\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, notification.message));\n};\n\nvar InputForm = function InputForm(_ref2) {\n  var form = _ref2.form,\n      dispatchRedirectReset = _ref2.dispatchRedirectReset,\n      theme = _ref2.theme,\n      dispatch = _ref2.dispatch;\n  if (!form) return null;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: 10,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingHorizontal: 12,\n      paddingVertical: 8,\n      elevation: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, form.message && React.createElement(Text, {\n    style: {\n      fontSize: 14\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 26\n    }\n  }, form.message)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"stretch\",\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    value: inputValue,\n    multiline: true,\n    placeholder: \"Ecrivez ici.\",\n    placeholderTextColor: \"grey\",\n    onChangeText: function onChangeText(text) {\n      return setInputValue(text);\n    },\n    style: {\n      backgroundColor: theme.colors.grey5,\n      borderColor: theme.colors.grey4,\n      borderWidth: 1,\n      borderRadius: 5,\n      height: 60,\n      paddingHorizontal: 4,\n      paddingVertical: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    buttonStyle: {\n      height: 60,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    icon: React.createElement(Icon, {\n      name: \"send\",\n      size: 20,\n      color: inputValue ? theme.colors.primary : theme.colors.grey2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }),\n    disabled: !inputValue,\n    type: \"clear\",\n    onPress: function onPress() {\n      dispatch(form.action(_objectSpread(_defineProperty({}, form.inputName, inputValue), form.actionParams)));\n      dispatchRedirectReset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar Menu = function Menu(_ref3) {\n  var _menu$buttons;\n\n  var menu = _ref3.menu,\n      dispatchRedirectReset = _ref3.dispatchRedirectReset,\n      dispatch = _ref3.dispatch;\n  if (!form) return null;\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      borderRadius: 10,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingHorizontal: 12,\n      paddingVertical: 8,\n      elevation: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, (_menu$buttons = menu.buttons) == null ? void 0 : _menu$buttons.map(function (button) {\n    return React.createElement(Button, {\n      title: button.title,\n      containerStyle: {\n        height: 30\n      },\n      onPress: function onPress() {\n        dispatch(button.action.apply(button, _toConsumableArray(button.actionParams)));\n        dispatchRedirectReset();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nvar CustomOverlay = function CustomOverlay() {\n  var overlay = useSelector(function (state) {\n    return state.overlay;\n  });\n  if (overlay.show === false) return null;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var dispatch = useDispatch();\n\n  var dispatchRedirectReset = function dispatchRedirectReset() {\n    typeof overlay.dispatchCallback === \"function\" && dispatch(overlay.dispatchCallback());\n    overlay.redirect && RootNavigation.navigate(overlay.redirect, {});\n    dispatch(resetOverlay());\n  };\n\n  overlay.timeout && setTimeout(function () {\n    dispatchRedirectReset();\n  }, overlay.timeout);\n  return React.createElement(View, {\n    style: {\n      position: \"absolute\",\n      height: Dimensions.get(\"window\").height,\n      width: Dimensions.get(\"window\").width,\n      backgroundColor: theme.colors.grey6,\n      alignContent: \"center\",\n      justifyContent: \"center\",\n      alignItems: \"stretch\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    containerStyle: {\n      flex: 1,\n      minHeight: 12\n    },\n    style: {\n      flex: 1,\n      minHeight: 12\n    },\n    onPress: function onPress() {\n      return dispatchRedirectReset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    containerStyle: {\n      flex: 1,\n      minWidth: 12\n    },\n    style: {\n      flex: 1,\n      minWidth: 12\n    },\n    onPress: function onPress() {\n      return dispatchRedirectReset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }), overlay.notification && React.createElement(Notifier, {\n    notification: overlay.notification,\n    dispatchRedirectReset: dispatchRedirectReset,\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }), overlay.form && React.createElement(InputForm, {\n    form: overlay.form,\n    dispatchRedirectReset: dispatchRedirectReset,\n    dispatch: dispatch,\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }), overlay.menu && React.createElement(Menu, {\n    menu: overlay.menu,\n    dispatchRedirectReset: dispatchRedirectReset,\n    dispatch: dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    containerStyle: {\n      flex: 1,\n      minWidth: 12\n    },\n    style: {\n      flex: 1,\n      minWidth: 12\n    },\n    onPress: function onPress() {\n      return dispatchRedirectReset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    containerStyle: {\n      flex: 1,\n      minHeight: 12\n    },\n    style: {\n      flex: 1,\n      minHeight: 12\n    },\n    onPress: function onPress() {\n      return dispatchRedirectReset();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CustomOverlay;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/CustomOverlay.js"],"names":["React","useContext","useState","useDispatch","useSelector","Icon","ThemeContext","Button","resetOverlay","RootNavigation","TouchableOpacity","Notifier","notification","theme","backgroundColor","borderRadius","justifyContent","alignItems","paddingHorizontal","paddingVertical","elevation","marginBottom","variant","icon","colors","grey1","message","fontSize","InputForm","form","dispatchRedirectReset","dispatch","inputValue","setInputValue","flexDirection","alignContent","marginTop","text","grey5","borderColor","grey4","borderWidth","height","primary","grey2","action","inputName","actionParams","Menu","menu","buttons","map","button","title","CustomOverlay","overlay","state","show","dispatchCallback","redirect","navigate","timeout","setTimeout","position","Dimensions","get","width","grey6","flex","minHeight","minWidth"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Text, View, Dimensions, TextInput } from \"react-native\";\nimport { Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { resetOverlay } from \"../actions/overlayAction\";\nimport * as RootNavigation from \"../RootNavigation.js\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nconst Notifier = ({ notification, theme }) => {\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      <Icon\n        containerStyle={{ marginBottom: 8 }}\n        size={30}\n        name={\n          notification.variant === \"success\"\n            ? \"check-circle-outline\"\n            : notification.variant === \"warning\"\n            ? \"alert-circle-outline\"\n            : notification.variant === \"error\"\n            ? \"close-circle-outline\"\n            : notification.icon\n        }\n        color={\n          notification.variant === \"success\"\n            ? \"green\"\n            : notification.variant === \"warning\"\n            ? \"yellow\"\n            : notification.variant === \"error\"\n            ? \"red\"\n            : notification.variant === \"error\"\n            ? \"blue\"\n            : theme.colors.grey1\n        }\n      />\n      {notification.message && (\n        <Text style={{ fontSize: 14 }}>{notification.message}</Text>\n      )}\n    </View>\n  );\n};\n\nconst InputForm = ({ form, dispatchRedirectReset, theme, dispatch }) => {\n  if (!form) return null;\n  const [inputValue, setInputValue] = useState(\"\");\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          marginTop: 8,\n        }}\n      >\n        {form.message && <Text style={{ fontSize: 14 }}>{form.message}</Text>}\n      </View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"stretch\",\n          marginTop: 8,\n        }}\n      >\n        <TextInput\n          value={inputValue}\n          multiline\n          placeholder=\"Ecrivez ici.\"\n          placeholderTextColor=\"grey\"\n          onChangeText={(text) => setInputValue(text)}\n          style={{\n            backgroundColor: theme.colors.grey5,\n            borderColor: theme.colors.grey4,\n            borderWidth: 1,\n            borderRadius: 5,\n            height: 60,\n            paddingHorizontal: 4,\n            paddingVertical: 4,\n          }}\n        />\n        <Button\n          buttonStyle={{\n            height: 60,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          icon={\n            <Icon\n              name=\"send\"\n              size={20}\n              color={inputValue ? theme.colors.primary : theme.colors.grey2}\n            />\n          }\n          disabled={!inputValue}\n          type=\"clear\"\n          onPress={() => {\n            dispatch(\n              form.action({\n                [form.inputName]: inputValue,\n                ...form.actionParams,\n              })\n            );\n            dispatchRedirectReset();\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst Menu = ({ menu, dispatchRedirectReset, dispatch }) => {\n  if (!form) return null;\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      {menu.buttons?.map((button) => {\n        return (\n          <Button\n            title={button.title}\n            containerStyle={{ height: 30 }}\n            onPress={() => {\n              dispatch(button.action(...button.actionParams));\n              dispatchRedirectReset();\n            }}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nconst CustomOverlay = () => {\n  const overlay = useSelector((state) => state.overlay);\n  if (overlay.show === false) return null;\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n\n  const dispatchRedirectReset = () => {\n    typeof overlay.dispatchCallback === \"function\" &&\n      dispatch(overlay.dispatchCallback());\n    overlay.redirect && RootNavigation.navigate(overlay.redirect, {});\n    dispatch(resetOverlay());\n  };\n\n  overlay.timeout &&\n    setTimeout(() => {\n      dispatchRedirectReset();\n    }, overlay.timeout);\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        height: Dimensions.get(\"window\").height,\n        width: Dimensions.get(\"window\").width,\n        backgroundColor: theme.colors.grey6,\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\",\n      }}\n    >\n      <TouchableOpacity\n        containerStyle={{ flex: 1, minHeight: 12 }}\n        style={{\n          flex: 1,\n          minHeight: 12,\n        }}\n        onPress={() => dispatchRedirectReset()}\n      />\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minWidth: 12 }}\n          style={{\n            flex: 1,\n            minWidth: 12,\n          }}\n          onPress={() => dispatchRedirectReset()}\n        />\n        {overlay.notification && (\n          <Notifier\n            notification={overlay.notification}\n            dispatchRedirectReset={dispatchRedirectReset}\n            theme={theme}\n          />\n        )}\n        {overlay.form && (\n          <InputForm\n            form={overlay.form}\n            dispatchRedirectReset={dispatchRedirectReset}\n            dispatch={dispatch}\n            theme={theme}\n          />\n        )}\n        {overlay.menu && (\n          <Menu\n            menu={overlay.menu}\n            dispatchRedirectReset={dispatchRedirectReset}\n            dispatch={dispatch}\n          />\n        )}\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minWidth: 12 }}\n          style={{\n            flex: 1,\n            minWidth: 12,\n          }}\n          onPress={() => dispatchRedirectReset()}\n        />\n      </View>\n      <TouchableOpacity\n        containerStyle={{ flex: 1, minHeight: 12 }}\n        style={{\n          flex: 1,\n          minHeight: 12,\n        }}\n        onPress={() => dispatchRedirectReset()}\n      />\n    </View>\n  );\n};\n\nexport default CustomOverlay;\n"]},"metadata":{},"sourceType":"module"}