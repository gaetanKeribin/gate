{"ast":null,"code":"var _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/MyJobsReadScreen.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Icon, ThemeContext } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport AppNavbar from \"./AppNavbar\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchMyJobs as _fetchMyJobs } from \"../actions/jobsActions\";\n\nvar Item = function Item(_ref) {\n  var item = _ref.item,\n      navigation = _ref.navigation;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Edit\", {\n        job: item\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingTop: 8,\n      paddingHorizontal: 20,\n      marginVertical: 4,\n      marginHorizontal: 0,\n      borderBottomWidth: 1,\n      borderBottomColor: theme.colors.grey4,\n      paddingVertical: 12,\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      fontWeight: \"bold\",\n      fontSize: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, item.jobTitle, \" en \", item.employmentType), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"briefcase\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, item.organisation)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"map-marker\",\n    size: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, _.capitalize(item.city)), React.createElement(Text, {\n    color: \"grey\",\n    style: {\n      color: \"grey\",\n      fontSize: 10,\n      textAlignVertical: \"bottom\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, _.capitalize(moment(item.publishedAt).locale(\"fr\").fromNow()))))));\n};\n\nvar MyJobsScreen = function MyJobsScreen(_ref2) {\n  var auth = _ref2.auth,\n      navigation = _ref2.navigation,\n      fetchMyJobs = _ref2.fetchMyJobs;\n  useEffect(function () {\n    function fetchData() {\n      fetchMyJobs();\n    }\n\n    fetchData();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, React.createElement(AppNavbar, {\n    title: \"Mes offres d'emploi\",\n    navigation: navigation,\n    noRightButton: true,\n    leftButton: \"back\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: auth.user.jobs,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(Item, {\n        item: item,\n        navigation: navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 35\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    jobs: state.jobs,\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchMyJobs: function fetchMyJobs() {\n      return dispatch(_fetchMyJobs());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyJobsScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/MyJobsReadScreen.js"],"names":["React","useState","useContext","useEffect","Icon","ThemeContext","connect","_","AppNavbar","moment","fetchMyJobs","Item","item","navigation","theme","navigate","job","paddingTop","paddingHorizontal","marginVertical","marginHorizontal","borderBottomWidth","borderBottomColor","colors","grey4","paddingVertical","flexDirection","flex","textAlignVertical","fontWeight","fontSize","jobTitle","employmentType","marginStart","organisation","capitalize","city","color","publishedAt","locale","fromNow","MyJobsScreen","auth","fetchData","user","jobs","_id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { View, Text, FlatList, TouchableOpacity } from \"react-native\";\nimport { Icon, ThemeContext } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport AppNavbar from \"./AppNavbar\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchMyJobs } from \"../actions/jobsActions\";\n\nconst Item = ({ item, navigation }) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <TouchableOpacity\n      onPress={() => navigation.navigate(\"Edit\", { job: item })}\n    >\n      <View\n        style={{\n          paddingTop: 8,\n          paddingHorizontal: 20,\n          marginVertical: 4,\n          marginHorizontal: 0,\n          borderBottomWidth: 1,\n          borderBottomColor: theme.colors.grey4,\n          paddingVertical: 12,\n          flexDirection: \"row\"\n        }}\n      >\n        <View style={{ flex: 1 }}>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16\n            }}\n          >\n            {item.jobTitle} en {item.employmentType}\n          </Text>\n          <View style={{ flexDirection: \"row\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              {item.organisation}\n            </Text>\n          </View>\n          <View style={{ flexDirection: \"row\", flex: 1 }}>\n            <Icon name=\"map-marker\" size={20} />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {_.capitalize(item.city)}\n            </Text>\n            <Text\n              color=\"grey\"\n              style={{\n                color: \"grey\",\n                fontSize: 10,\n                textAlignVertical: \"bottom\"\n              }}\n            >\n              {_.capitalize(\n                moment(item.publishedAt)\n                  .locale(\"fr\")\n                  .fromNow()\n              )}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst MyJobsScreen = ({ auth, navigation, fetchMyJobs }) => {\n  useEffect(() => {\n    function fetchData() {\n      fetchMyJobs();\n    }\n    fetchData();\n  }, []);\n\n  // const myJobs = auth.user.jobs.reverse();\n\n  return (\n    <View style={{ flex: 1 }}>\n      <AppNavbar\n        title=\"Mes offres d'emploi\"\n        navigation={navigation}\n        noRightButton={true}\n        leftButton=\"back\"\n      />\n      <FlatList\n        data={auth.user.jobs}\n        renderItem={({ item }) => <Item item={item} navigation={navigation} />}\n        keyExtractor={item => item._id}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    jobs: state.jobs,\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMyJobs: () => dispatch(fetchMyJobs())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyJobsScreen);\n"]},"metadata":{},"sourceType":"module"}