{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { navigate } from \"../../RootNavigation\";\nvar initialState = {\n  conversations: [],\n  conversationsIds: [],\n  interlocutorsIds: [],\n  lastUpdatedAt: null,\n  isLoaded: false,\n  isFetchingConversations: false,\n  isFetchingConversation: false\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"REQUEST_DELETE_CONVERSATION\":\n      return _objectSpread({}, state, {\n        isDeleting: true\n      });\n\n    case \"REQUEST_DELETE_CONVERSATION:SUCCESS\":\n      return _objectSpread({}, state, {\n        isDeleting: false,\n        lastUpdatedAt: action.receivedAt\n      });\n\n    case \"REQUEST_DELETE_CONVERSATION:ERROR\":\n      return _objectSpread({}, state, {\n        isFetchingConversations: false\n      });\n\n    case \"REQUEST_CONVERSATIONS\":\n      return _objectSpread({}, state, {\n        isFetchingConversations: true\n      });\n\n    case \"REQUEST_CONVERSATIONS:SUCCESS\":\n      return _objectSpread({}, state, {\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        isFetchingConversations: false\n      }, action.data);\n\n    case \"RECEIVE_CONVERSATIONS:ERROR\":\n      return _objectSpread({}, state, {\n        isFetchingConversations: false\n      });\n\n    case \"REQUEST_CONVERSATION\":\n      return _objectSpread({}, state, {\n        isFetchingConversation: true\n      });\n\n    case \"REQUEST_CONVERSATION:SUCCESS\":\n      state.conversations.splice(state.conversations.map(function (c) {\n        return c._id;\n      }).indexOf(action.data._id), 1, action.data);\n      return _objectSpread({}, state, {\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        isFetchingConversation: false\n      });\n\n    case \"RECEIVE_CONVERSATION:ERROR\":\n      return _objectSpread({}, state, {\n        isFetchingConversation: false\n      });\n\n    case \"RECEIVE_MESSAGE\":\n      return _objectSpread({}, state, {\n        lastUpdatedAt: action.receivedAt,\n        conversations: !action.newConv ? [_objectSpread({}, state.conversations.filter(function (conv) {\n          return conv._id === action.conversation._id;\n        })[0], {\n          lastMessage: action.message,\n          messages: [action.message].concat(_toConsumableArray(state.conversations.filter(function (conv) {\n            return conv._id === action.conversation._id;\n          })[0].messages))\n        })].concat(_toConsumableArray(state.conversations.filter(function (conv) {\n          return conv._id !== action.conversation._id;\n        }))) : [_objectSpread({}, action.conversation, {\n          messages: [action.message]\n        })].concat(_toConsumableArray(state.conversations)),\n        isLoaded: true\n      });\n\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/store/reducers/chatReducer.js"],"names":["navigate","initialState","conversations","conversationsIds","interlocutorsIds","lastUpdatedAt","isLoaded","isFetchingConversations","isFetchingConversation","state","action","type","isDeleting","receivedAt","data","splice","map","c","_id","indexOf","newConv","filter","conv","conversation","lastMessage","message","messages"],"mappings":"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","sourcesContent":["import { navigate } from \"../../RootNavigation\";\n\nconst initialState = {\n  conversations: [],\n  conversationsIds: [],\n  interlocutorsIds: [],\n  lastUpdatedAt: null,\n  isLoaded: false,\n  isFetchingConversations: false,\n  isFetchingConversation: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_DELETE_CONVERSATION\":\n      return {\n        ...state,\n        isDeleting: true\n      };\n    case \"REQUEST_DELETE_CONVERSATION:SUCCESS\":\n      return {\n        ...state,\n        isDeleting: false,\n        lastUpdatedAt: action.receivedAt\n      };\n    case \"REQUEST_DELETE_CONVERSATION:ERROR\":\n      return {\n        ...state,\n        isFetchingConversations: false\n      };\n    case \"REQUEST_CONVERSATIONS\":\n      return {\n        ...state,\n        isFetchingConversations: true\n      };\n    case \"REQUEST_CONVERSATIONS:SUCCESS\":\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        isFetchingConversations: false,\n        ...action.data\n      };\n    case \"RECEIVE_CONVERSATIONS:ERROR\":\n      return {\n        ...state,\n        isFetchingConversations: false\n      };\n    case \"REQUEST_CONVERSATION\":\n      return {\n        ...state,\n        isFetchingConversation: true\n      };\n    case \"REQUEST_CONVERSATION:SUCCESS\":\n      state.conversations.splice(\n        state.conversations\n          .map(function(c) {\n            return c._id;\n          })\n          .indexOf(action.data._id),\n        1,\n        action.data\n      );\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        isFetchingConversation: false\n      };\n    case \"RECEIVE_CONVERSATION:ERROR\":\n      return {\n        ...state,\n        isFetchingConversation: false\n      };\n    case \"RECEIVE_MESSAGE\":\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        conversations: !action.newConv\n          ? [\n              {\n                ...state.conversations.filter(\n                  conv => conv._id === action.conversation._id\n                )[0],\n                lastMessage: action.message,\n                messages: [\n                  action.message,\n                  ...state.conversations.filter(\n                    conv => conv._id === action.conversation._id\n                  )[0].messages\n                ]\n              },\n              ...state.conversations.filter(\n                conv => conv._id !== action.conversation._id\n              )\n            ]\n          : [\n              { ...action.conversation, messages: [action.message] },\n              ...state.conversations\n            ],\n        isLoaded: true\n      };\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}