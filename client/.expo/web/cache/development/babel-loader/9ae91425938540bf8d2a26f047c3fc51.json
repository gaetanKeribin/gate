{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/ProfileEditScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Button, Input, ThemeContext, Overlay } from \"react-native-elements\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { updateUser as _updateUser, deleteAccount as _deleteAccount, updateUserPassword as _updateUserPassword } from \"../actions/authActions\";\n\nvar ProfileEditScreen = function ProfileEditScreen(_ref) {\n  var updateUser = _ref.updateUser,\n      deleteAccount = _ref.deleteAccount,\n      auth = _ref.auth,\n      updateUserPassword = _ref.updateUserPassword,\n      navigation = _ref.navigation;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var _useState = useState(auth.user.description),\n      _useState2 = _slicedToArray(_useState, 2),\n      desc = _useState2[0],\n      setDesc = _useState2[1];\n\n  var _useState3 = useState(auth.user.email),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(auth.user.jobTitle),\n      _useState6 = _slicedToArray(_useState5, 2),\n      jobTitle = _useState6[0],\n      setJobTitle = _useState6[1];\n\n  var _useState7 = useState(auth.user.organisation),\n      _useState8 = _slicedToArray(_useState7, 2),\n      organisation = _useState8[0],\n      setOrganisation = _useState8[1];\n\n  var _useState9 = useState(\"\" + auth.user.promo),\n      _useState10 = _slicedToArray(_useState9, 2),\n      promo = _useState10[0],\n      setPromo = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      password = _useState12[0],\n      setPassword = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      confirmation = _useState14[0],\n      setConfirmation = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showPasswordForm = _useState16[0],\n      setShowPasswordForm = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      showPasswordEditForm = _useState18[0],\n      setShowPasswordEditForm = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      passwordError = _useState20[0],\n      setPasswordError = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      newPassword = _useState22[0],\n      setNewPassword = _useState22[1];\n\n  var onEditProfile = function onEditProfile() {\n    return _regeneratorRuntime.async(function onEditProfile$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(updateUser(_objectSpread({}, auth.user, {\n              description: desc,\n              email: email,\n              jobTitle: jobTitle,\n              organisation: organisation,\n              promo: promo\n            })));\n\n          case 3:\n            navigation.navigate(\"Read\");\n            _context.next = 8;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var onChangePassword = function onChangePassword() {\n    return _regeneratorRuntime.async(function onChangePassword$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(newPassword.length < 8)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", setPasswordError(\"Choisissez un mot de passe d'au moins 8 caractÃ¨res.\"));\n\n          case 2:\n            if (!(newPassword !== confirmation)) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", setPasswordError(\"Les mots de passe ne correspondent pas.\"));\n\n          case 4:\n            _context2.prev = 4;\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(updateUserPassword({\n              password: password,\n              newPassword: newPassword\n            }));\n\n          case 7:\n            navigation.navigate(\"Profile\");\n            _context2.next = 12;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](4);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[4, 10]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"space-between\",\n      paddingVertical: 8,\n      paddingHorizontal: 8,\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    label: \"Promotion\",\n    value: promo,\n    onChangeText: function onChangeText(text) {\n      return setPromo(text);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"school\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    value: organisation,\n    label: \"Organisation\",\n    onChangeText: function onChangeText(text) {\n      return setOrganisation(text);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"domain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    value: jobTitle,\n    onChangeText: function onChangeText(text) {\n      return setJobTitle(text);\n    },\n    label: \"Profession\",\n    leftIcon: React.createElement(Icon, {\n      name: \"briefcase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"Description\",\n    value: desc,\n    multiline: true,\n    numberOfLines: 8,\n    onChangeText: function onChangeText(text) {\n      return setDesc(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"email\",\n    value: email,\n    leftIcon: React.createElement(Icon, {\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }),\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      paddingTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, auth.updateUserError && React.createElement(Text, {\n    style: {\n      color: \"red\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, auth.updateUserError), React.createElement(Button, {\n    title: \"Valider les changements\",\n    onPress: function onPress() {\n      return onEditProfile();\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.success\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Changer mon mot de passe\",\n    onPress: function onPress() {\n      return setShowPasswordEditForm(true);\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.primary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Supprimer mon compte\",\n    onPress: function onPress() {\n      return setShowPasswordForm(true);\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.error\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  })), React.createElement(Overlay, {\n    isVisible: showPasswordEditForm,\n    height: \"auto\",\n    onBackdropPress: function onBackdropPress() {\n      return setShowPasswordEditForm(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, auth.updatePasswordError && React.createElement(Text, {\n    style: {\n      color: \"red\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, auth.updatePasswordError), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 23\n      }\n    }),\n    label: \"Ancien mot de passe\",\n    secureTextEntry: true,\n    value: password,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 20,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 23\n      }\n    }),\n    label: \"Nouveau mot de passe\",\n    secureTextEntry: true,\n    value: newPassword,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 20,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      setPasswordError(\"\");\n      setNewPassword(value);\n    },\n    errorMessage: passwordError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: confirmation === newPassword ? \"check\" : \"close\",\n      color: confirmation === newPassword ? \"green\" : \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }),\n    label: \"Confirmation\",\n    secureTextEntry: true,\n    value: confirmation,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 40,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      return setConfirmation(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"Valider\",\n    onPress: function onPress() {\n      return onChangePassword();\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.primary\n    },\n    loading: auth.isUpdatingPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }))), React.createElement(Overlay, {\n    isVisible: showPasswordForm,\n    height: \"auto\",\n    onBackdropPress: function onBackdropPress() {\n      return setShowPasswordForm(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, auth.deleteAccountError && React.createElement(Text, {\n    style: {\n      color: \"red\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, auth.deleteAccountError), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 23\n      }\n    }),\n    label: \"Mot de passe\",\n    secureTextEntry: true,\n    value: password,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 20,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"Supprimer mon compte\",\n    onPress: function onPress(password) {\n      return deleteAccount(password);\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.error\n    },\n    loading: auth.isDeletingAccount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateUser: function updateUser(user) {\n      return dispatch(_updateUser(user));\n    },\n    deleteAccount: function deleteAccount(password) {\n      return dispatch(_deleteAccount(password));\n    },\n    updateUserPassword: function updateUserPassword() {\n      return dispatch(_updateUserPassword(password));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEditScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/ProfileEditScreen.js"],"names":["React","useState","useContext","connect","Icon","Button","Input","ThemeContext","Overlay","updateUser","deleteAccount","updateUserPassword","ProfileEditScreen","auth","navigation","theme","user","description","desc","setDesc","email","setEmail","jobTitle","setJobTitle","organisation","setOrganisation","promo","setPromo","password","setPassword","confirmation","setConfirmation","showPasswordForm","setShowPasswordForm","showPasswordEditForm","setShowPasswordEditForm","passwordError","setPasswordError","newPassword","setNewPassword","onEditProfile","navigate","onChangePassword","length","flex","alignContent","paddingVertical","paddingHorizontal","backgroundColor","text","paddingTop","updateUserError","color","textAlign","colors","success","primary","error","updatePasswordError","marginRight","marginBottom","marginTop","value","isUpdatingPassword","deleteAccountError","isDeletingAccount","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Icon,\n  Button,\n  Input,\n  ThemeContext,\n  Overlay\n} from \"react-native-elements\";\nimport { View, ScrollView, Text } from \"react-native\";\nimport {\n  updateUser,\n  deleteAccount,\n  updateUserPassword\n} from \"../actions/authActions\";\n\nconst ProfileEditScreen = ({\n  updateUser,\n  deleteAccount,\n  auth,\n  updateUserPassword,\n  navigation\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const [desc, setDesc] = useState(auth.user.description);\n  const [email, setEmail] = useState(auth.user.email);\n  const [jobTitle, setJobTitle] = useState(auth.user.jobTitle);\n  const [organisation, setOrganisation] = useState(auth.user.organisation);\n  const [promo, setPromo] = useState(`${auth.user.promo}`);\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [showPasswordForm, setShowPasswordForm] = useState(false);\n  const [showPasswordEditForm, setShowPasswordEditForm] = useState(false);\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n\n  const onEditProfile = async () => {\n    try {\n      await updateUser({\n        ...auth.user,\n        description: desc,\n        email,\n        jobTitle,\n        organisation,\n        promo\n      });\n      navigation.navigate(\"Read\");\n    } catch (error) {}\n  };\n\n  const onChangePassword = async () => {\n    if (newPassword.length < 8) {\n      return setPasswordError(\n        \"Choisissez un mot de passe d'au moins 8 caractÃ¨res.\"\n      );\n    }\n    if (newPassword !== confirmation) {\n      return setPasswordError(\"Les mots de passe ne correspondent pas.\");\n    }\n    try {\n      await updateUserPassword({ password, newPassword });\n      navigation.navigate(\"Profile\");\n    } catch (error) {}\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\"\n      }}\n    >\n      <ScrollView>\n        <Input\n          label=\"Promotion\"\n          value={promo}\n          onChangeText={text => setPromo(text)}\n          leftIcon={<Icon name=\"school\" />}\n        />\n        <Input\n          value={organisation}\n          label=\"Organisation\"\n          onChangeText={text => setOrganisation(text)}\n          leftIcon={<Icon name=\"domain\" />}\n        />\n        <Input\n          value={jobTitle}\n          onChangeText={text => setJobTitle(text)}\n          label=\"Profession\"\n          leftIcon={<Icon name=\"briefcase\" />}\n        />\n        <Input\n          label=\"Description\"\n          value={desc}\n          multiline\n          numberOfLines={8}\n          onChangeText={text => setDesc(text)}\n        />\n        <Input\n          label=\"email\"\n          value={email}\n          leftIcon={<Icon name=\"email\" />}\n          onChangeText={text => setEmail(text)}\n        />\n      </ScrollView>\n      <View style={{ paddingTop: 8 }}>\n        {auth.updateUserError && (\n          <Text style={{ color: \"red\", textAlign: \"center\" }}>\n            {auth.updateUserError}\n          </Text>\n        )}\n        <Button\n          title=\"Valider les changements\"\n          onPress={() => onEditProfile()}\n          buttonStyle={{ backgroundColor: theme.colors.success }}\n        />\n        <Button\n          title=\"Changer mon mot de passe\"\n          onPress={() => setShowPasswordEditForm(true)}\n          buttonStyle={{ backgroundColor: theme.colors.primary }}\n        />\n        <Button\n          title=\"Supprimer mon compte\"\n          onPress={() => setShowPasswordForm(true)}\n          buttonStyle={{ backgroundColor: theme.colors.error }}\n        />\n      </View>\n      <Overlay\n        isVisible={showPasswordEditForm}\n        height=\"auto\"\n        onBackdropPress={() => setShowPasswordEditForm(false)}\n      >\n        <View>\n          {auth.updatePasswordError && (\n            <Text style={{ color: \"red\", textAlign: \"center\" }}>\n              {auth.updatePasswordError}\n            </Text>\n          )}\n          <Input\n            placeholder=\"Mot de passe\"\n            leftIcon={<Icon name=\"lock\" />}\n            label=\"Ancien mot de passe\"\n            secureTextEntry\n            value={password}\n            leftIconContainerStyle={{ marginRight: 12 }}\n            containerStyle={{ marginBottom: 20, marginTop: 8 }}\n            onChangeText={value => setPassword(value)}\n          />\n          <Input\n            placeholder=\"Mot de passe\"\n            leftIcon={<Icon name=\"lock\" />}\n            label=\"Nouveau mot de passe\"\n            secureTextEntry\n            value={newPassword}\n            leftIconContainerStyle={{ marginRight: 12 }}\n            containerStyle={{ marginBottom: 20, marginTop: 8 }}\n            onChangeText={value => {\n              setPasswordError(\"\");\n              setNewPassword(value);\n            }}\n            errorMessage={passwordError}\n          />\n          <Input\n            placeholder=\"Mot de passe\"\n            leftIcon={\n              <Icon\n                name={confirmation === newPassword ? \"check\" : \"close\"}\n                color={confirmation === newPassword ? \"green\" : \"red\"}\n              />\n            }\n            label=\"Confirmation\"\n            secureTextEntry\n            value={confirmation}\n            leftIconContainerStyle={{ marginRight: 12 }}\n            containerStyle={{ marginBottom: 40, marginTop: 8 }}\n            onChangeText={value => setConfirmation(value)}\n          />\n          <Button\n            title=\"Valider\"\n            onPress={() => onChangePassword()}\n            buttonStyle={{ backgroundColor: theme.colors.primary }}\n            loading={auth.isUpdatingPassword}\n          />\n        </View>\n      </Overlay>\n      <Overlay\n        isVisible={showPasswordForm}\n        height=\"auto\"\n        onBackdropPress={() => setShowPasswordForm(false)}\n      >\n        <View>\n          {auth.deleteAccountError && (\n            <Text style={{ color: \"red\", textAlign: \"center\" }}>\n              {auth.deleteAccountError}\n            </Text>\n          )}\n          <Input\n            placeholder=\"Mot de passe\"\n            leftIcon={<Icon name=\"lock\" />}\n            label=\"Mot de passe\"\n            secureTextEntry\n            value={password}\n            leftIconContainerStyle={{ marginRight: 12 }}\n            containerStyle={{ marginBottom: 20, marginTop: 8 }}\n            onChangeText={value => setPassword(value)}\n          />\n          <Button\n            title=\"Supprimer mon compte\"\n            onPress={password => deleteAccount(password)}\n            buttonStyle={{ backgroundColor: theme.colors.error }}\n            loading={auth.isDeletingAccount}\n          />\n        </View>\n      </Overlay>\n    </View>\n  );\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: user => dispatch(updateUser(user)),\n    deleteAccount: password => dispatch(deleteAccount(password)),\n    updateUserPassword: () => dispatch(updateUserPassword(password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEditScreen);\n"]},"metadata":{},"sourceType":"module"}