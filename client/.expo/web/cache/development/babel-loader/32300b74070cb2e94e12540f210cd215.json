{"ast":null,"code":"var _jsxFileName = \"/home/gaetan/Documents/GATE/app/client/src/components/People/PeopleReadScreen.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Avatar, Divider, Icon, Button } from \"react-native-elements\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport theme from \"../../Theme.json\";\nimport _ from \"lodash\";\nimport { showOverlay } from \"../../actions/overlayAction\";\nimport { startPrivateConversation } from \"../../actions/chatActions\";\n\nvar PeopleScreen = function PeopleScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      auth = _useSelector.auth;\n\n  var dispatch = useDispatch();\n  var item = route.params.item;\n\n  var fullname = _.capitalize(item == null ? void 0 : item.firstname) + \" \" + _.capitalize(item == null ? void 0 : item.lastname);\n\n  if (item) {\n    var _item$avatar;\n\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, React.createElement(ScrollView, {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, React.createElement(LinearGradient, {\n      colors: [theme.colors.primary, theme.colors.secondary],\n      start: [0.25, 1],\n      end: [0, 0],\n      style: {\n        flexDirection: \"row\",\n        marginBottom: 20,\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        borderRadius: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        alignContent: \"center\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        color: theme.colors.grey5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, _.capitalize(item == null ? void 0 : item.firstname)), React.createElement(Text, {\n      style: {\n        fontSize: 30,\n        color: \"white\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, _.capitalize(item == null ? void 0 : item.lastname)), item.professor && React.createElement(Text, {\n      style: {\n        color: theme.colors.grey4,\n        paddingLeft: 4\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Professeur\"), item.administration && React.createElement(Text, {\n      style: {\n        color: theme.colors.grey4,\n        paddingLeft: 4\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"Membre du corps administratif\")), (item == null ? void 0 : item.avatar) ? React.createElement(Avatar, {\n      size: \"xlarge\",\n      containerStyle: {\n        borderColor: \"white\",\n        borderWidth: 3\n      },\n      source: {\n        uri: \"https://siee-gate.herokuapp.com/api/files/avatar/\" + (item == null ? void 0 : (_item$avatar = item.avatar) == null ? void 0 : _item$avatar.filename)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }) : React.createElement(Avatar, {\n      size: \"xlarge\",\n      containerStyle: {\n        borderColor: \"white\",\n        borderWidth: 3\n      },\n      title: item == null ? void 0 : item.firstname.charAt(0).concat(item == null ? void 0 : item.lastname.charAt(0)).toUpperCase(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    })), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, React.createElement(Icon, {\n      name: \"briefcase\",\n      size: 20,\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: {\n        textAlignVertical: \"bottom\",\n        marginHorizontal: 8,\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, item == null ? void 0 : item.jobTitle, \" chez \", item == null ? void 0 : item.organisation)), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, React.createElement(Icon, {\n      name: \"school\",\n      size: 20,\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: {\n        textAlignVertical: \"bottom\",\n        marginHorizontal: 8,\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, \"Promotion \", item == null ? void 0 : item.promo)), React.createElement(Divider, {\n      style: {\n        marginVertical: 20,\n        backgroundColor: \"grey\",\n        borderWidth: 1,\n        width: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: \"justify\",\n        flex: 1,\n        marginEnd: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, item == null ? void 0 : item.description)), React.createElement(Divider, {\n      style: {\n        marginVertical: 20,\n        backgroundColor: \"grey\",\n        borderWidth: 1,\n        width: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, React.createElement(Icon, {\n      name: \"at\",\n      size: 20,\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: {\n        textAlignVertical: \"bottom\",\n        marginStart: 8,\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, item == null ? void 0 : item.email))), item._id !== auth.user._id && React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, React.createElement(Button, {\n      title: \"Contacter\",\n      onPress: function onPress() {\n        var a = auth == null ? void 0 : auth.user.privateConversations.filter(function (c) {\n          return c.interlocutor_id == item._id;\n        });\n\n        if (a.length > 0) {\n          navigation.navigate(\"Messages\", {\n            screen: \"Room\",\n            params: {\n              title: fullname,\n              conversation_id: a[0].conversation_id\n            }\n          });\n        } else dispatch(showOverlay({\n          form: {\n            action: startPrivateConversation,\n            inputName: \"text\",\n            actionParams: {\n              recipient: item == null ? void 0 : item._id\n            },\n            message: \"Demarrer une conversation avec \" + _.capitalize(item == null ? void 0 : item.firstname) + \" \" + _.capitalize(item == null ? void 0 : item.lastname)\n          },\n          redirect: \"Messages\"\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    })));\n  } else {\n    return null;\n  }\n};\n\nexport default PeopleScreen;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/People/PeopleReadScreen.js"],"names":["React","useDispatch","useSelector","Avatar","Divider","Icon","Button","LinearGradient","theme","_","showOverlay","startPrivateConversation","PeopleScreen","route","navigation","state","auth","dispatch","item","params","fullname","capitalize","firstname","lastname","flex","alignContent","paddingVertical","paddingHorizontal","backgroundColor","colors","primary","secondary","flexDirection","marginBottom","borderRadius","justifyContent","fontSize","color","grey5","fontWeight","professor","grey4","paddingLeft","administration","avatar","borderColor","borderWidth","uri","filename","charAt","concat","toUpperCase","alignItems","textAlignVertical","marginHorizontal","jobTitle","organisation","promo","marginVertical","width","textAlign","marginEnd","description","marginStart","email","_id","user","a","privateConversations","filter","c","interlocutor_id","length","navigate","screen","title","conversation_id","form","action","inputName","actionParams","recipient","message","redirect"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { View, Text, ScrollView } from \"react-native\";\nimport { Avatar, Divider, Icon, Button } from \"react-native-elements\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport theme from \"../../Theme.json\";\nimport _ from \"lodash\";\nimport { showOverlay } from \"../../actions/overlayAction\";\nimport { startPrivateConversation } from \"../../actions/chatActions\";\n\nconst PeopleScreen = ({ route, navigation }) => {\n  const { auth } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const { item } = route.params;\n  const fullname =\n    _.capitalize(item?.firstname) + \" \" + _.capitalize(item?.lastname);\n\n  if (item) {\n    return (\n      <View\n        style={{\n          flex: 1,\n          alignContent: \"space-between\",\n          paddingVertical: 10,\n          paddingHorizontal: 8,\n          backgroundColor: \"white\",\n        }}\n      >\n        <ScrollView\n          style={{\n            flex: 1,\n          }}\n        >\n          <LinearGradient\n            colors={[theme.colors.primary, theme.colors.secondary]}\n            start={[0.25, 1]}\n            end={[0, 0]}\n            style={{\n              flexDirection: \"row\",\n              marginBottom: 20,\n              paddingVertical: 8,\n              paddingHorizontal: 16,\n              borderRadius: 5,\n            }}\n          >\n            <View\n              style={{\n                flex: 1,\n                alignContent: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Text style={{ fontSize: 20, color: theme.colors.grey5 }}>\n                {_.capitalize(item?.firstname)}\n              </Text>\n              <Text\n                style={{ fontSize: 30, color: \"white\", fontWeight: \"bold\" }}\n              >\n                {_.capitalize(item?.lastname)}\n              </Text>\n              {item.professor && (\n                <Text style={{ color: theme.colors.grey4, paddingLeft: 4 }}>\n                  Professeur\n                </Text>\n              )}\n              {item.administration && (\n                <Text style={{ color: theme.colors.grey4, paddingLeft: 4 }}>\n                  Membre du corps administratif\n                </Text>\n              )}\n            </View>\n            {item?.avatar ? (\n              <Avatar\n                size=\"xlarge\"\n                containerStyle={{\n                  borderColor: \"white\",\n                  borderWidth: 3,\n                }}\n                source={{\n                  uri: `https://siee-gate.herokuapp.com/api/files/avatar/${item?.avatar?.filename}`,\n                }}\n              />\n            ) : (\n              <Avatar\n                size=\"xlarge\"\n                containerStyle={{\n                  borderColor: \"white\",\n                  borderWidth: 3,\n                }}\n                title={item?.firstname\n                  .charAt(0)\n                  .concat(item?.lastname.charAt(0))\n                  .toUpperCase()}\n              />\n            )}\n          </LinearGradient>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text\n              style={{\n                textAlignVertical: \"bottom\",\n                marginHorizontal: 8,\n                flex: 1,\n              }}\n            >\n              {item?.jobTitle} chez {item?.organisation}\n            </Text>\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Icon name=\"school\" size={20} color=\"grey\" />\n            <Text\n              style={{\n                textAlignVertical: \"bottom\",\n                marginHorizontal: 8,\n                flex: 1,\n              }}\n            >\n              Promotion {item?.promo}\n            </Text>\n          </View>\n          <Divider\n            style={{\n              marginVertical: 20,\n              backgroundColor: \"grey\",\n              borderWidth: 1,\n              width: 20,\n            }}\n          />\n          <View style={{ flexDirection: \"row\" }}>\n            <Text style={{ textAlign: \"justify\", flex: 1, marginEnd: 8 }}>\n              {item?.description}\n            </Text>\n          </View>\n          <Divider\n            style={{\n              marginVertical: 20,\n              backgroundColor: \"grey\",\n              borderWidth: 1,\n              width: 20,\n            }}\n          />\n          <View style={{ flexDirection: \"row\" }}>\n            <Icon name=\"at\" size={20} color=\"grey\" />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {item?.email}\n            </Text>\n          </View>\n        </ScrollView>\n        {item._id !== auth.user._id && (\n          <View>\n            <Button\n              title=\"Contacter\"\n              onPress={() => {\n                let a = auth?.user.privateConversations.filter(\n                  (c) => c.interlocutor_id == item._id\n                );\n                if (a.length > 0) {\n                  navigation.navigate(\"Messages\", {\n                    screen: \"Room\",\n                    params: {\n                      title: fullname,\n                      conversation_id: a[0].conversation_id,\n                    },\n                  });\n                } else\n                  dispatch(\n                    showOverlay({\n                      form: {\n                        action: startPrivateConversation,\n                        inputName: \"text\",\n                        actionParams: { recipient: item?._id },\n                        message:\n                          \"Demarrer une conversation avec \" +\n                          _.capitalize(item?.firstname) +\n                          \" \" +\n                          _.capitalize(item?.lastname),\n                      },\n                      redirect: \"Messages\",\n                    })\n                  );\n              }}\n            />\n          </View>\n        )}\n      </View>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default PeopleScreen;\n"]},"metadata":{},"sourceType":"module"}