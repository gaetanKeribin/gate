{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/Profile/OptionsScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Button, Input, ThemeContext, Overlay } from \"react-native-elements\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { updateUser as _updateUser, deleteAccount as _deleteAccount, updateUserPassword as _updateUserPassword } from \"../../actions/authActions\";\n\nvar ProfileEditScreen = function ProfileEditScreen(_ref) {\n  var updateUser = _ref.updateUser,\n      deleteAccount = _ref.deleteAccount,\n      auth = _ref.auth,\n      updateUserPassword = _ref.updateUserPassword;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var _useState = useState(auth.user.description),\n      _useState2 = _slicedToArray(_useState, 2),\n      desc = _useState2[0],\n      setDesc = _useState2[1];\n\n  var _useState3 = useState(auth.user.email),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(auth.user.jobTitle),\n      _useState6 = _slicedToArray(_useState5, 2),\n      jobTitle = _useState6[0],\n      setJobTitle = _useState6[1];\n\n  var _useState7 = useState(auth.user.organisation),\n      _useState8 = _slicedToArray(_useState7, 2),\n      organisation = _useState8[0],\n      setOrganisation = _useState8[1];\n\n  var _useState9 = useState(\"\" + auth.user.promo),\n      _useState10 = _slicedToArray(_useState9, 2),\n      promo = _useState10[0],\n      setPromo = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      password = _useState12[0],\n      setPassword = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      confirmation = _useState14[0],\n      setConfirmation = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showPasswordForm = _useState16[0],\n      setShowPasswordForm = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      showPasswordEditForm = _useState18[0],\n      setShowPasswordEditForm = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      passwordError = _useState20[0],\n      setPasswordError = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      newPassword = _useState22[0],\n      setNewPassword = _useState22[1];\n\n  var onEditProfile = function onEditProfile() {\n    updateUser(_objectSpread({}, auth.user, {\n      description: desc,\n      email: email,\n      jobTitle: jobTitle,\n      organisation: organisation,\n      promo: promo\n    }));\n  };\n\n  var onChangePassword = function onChangePassword() {\n    if (newPassword.length < 8) {\n      return setPasswordError(\"Choisissez un mot de passe d'au moins 8 caractÃ¨res.\");\n    } else if (newPassword !== confirmation) {\n      return setPasswordError(\"Les mots de passe ne correspondent pas.\");\n    }\n\n    updateUserPassword(password, newPassword);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"space-between\",\n      paddingVertical: 8,\n      paddingHorizontal: 8,\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Changer mon mot de passe\"), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }\n    }),\n    label: \"Ancien mot de passe\",\n    secureTextEntry: true,\n    value: password,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 20,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 23\n      }\n    }),\n    label: \"Nouveau mot de passe\",\n    secureTextEntry: true,\n    value: newPassword,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 20,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      setPasswordError(\"\");\n      setNewPassword(value);\n    },\n    errorMessage: passwordError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: confirmation === newPassword ? \"check\" : \"close\",\n      color: confirmation === newPassword ? \"green\" : \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }),\n    label: \"Confirmation\",\n    secureTextEntry: true,\n    value: confirmation,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 40,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      return setConfirmation(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })), React.createElement(Button, {\n    title: \"Valider\",\n    onPress: function onPress() {\n      return onChangePassword();\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.primary\n    },\n    loading: auth.isUpdatingPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      paddingTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, auth.updateUserError && React.createElement(Text, {\n    style: {\n      color: \"red\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, auth.updateUserError), React.createElement(Button, {\n    title: \"Valider les changements\",\n    onPress: function onPress() {\n      return onEditProfile();\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.success\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Changer mon mot de passe\",\n    onPress: function onPress() {\n      return setShowPasswordEditForm(true);\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.primary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Supprimer mon compte\",\n    onPress: function onPress() {\n      return setShowPasswordForm(true);\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.error\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateUser: function updateUser(user) {\n      return dispatch(_updateUser(user));\n    },\n    deleteAccount: function deleteAccount(password) {\n      return dispatch(_deleteAccount(password));\n    },\n    updateUserPassword: function updateUserPassword(password, newPassword) {\n      return dispatch(_updateUserPassword(password, newPassword));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEditScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/Profile/OptionsScreen.js"],"names":["React","useState","useContext","connect","Icon","Button","Input","ThemeContext","Overlay","updateUser","deleteAccount","updateUserPassword","ProfileEditScreen","auth","theme","user","description","desc","setDesc","email","setEmail","jobTitle","setJobTitle","organisation","setOrganisation","promo","setPromo","password","setPassword","confirmation","setConfirmation","showPasswordForm","setShowPasswordForm","showPasswordEditForm","setShowPasswordEditForm","passwordError","setPasswordError","newPassword","setNewPassword","onEditProfile","onChangePassword","length","flex","alignContent","paddingVertical","paddingHorizontal","backgroundColor","marginRight","marginBottom","marginTop","value","colors","primary","isUpdatingPassword","paddingTop","updateUserError","color","textAlign","success","error","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Icon,\n  Button,\n  Input,\n  ThemeContext,\n  Overlay\n} from \"react-native-elements\";\nimport { View, ScrollView, Text } from \"react-native\";\nimport {\n  updateUser,\n  deleteAccount,\n  updateUserPassword\n} from \"../../actions/authActions\";\n\nconst ProfileEditScreen = ({\n  updateUser,\n  deleteAccount,\n  auth,\n  updateUserPassword\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const [desc, setDesc] = useState(auth.user.description);\n  const [email, setEmail] = useState(auth.user.email);\n  const [jobTitle, setJobTitle] = useState(auth.user.jobTitle);\n  const [organisation, setOrganisation] = useState(auth.user.organisation);\n  const [promo, setPromo] = useState(`${auth.user.promo}`);\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [showPasswordForm, setShowPasswordForm] = useState(false);\n  const [showPasswordEditForm, setShowPasswordEditForm] = useState(false);\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n\n  const onEditProfile = () => {\n    updateUser({\n      ...auth.user,\n      description: desc,\n      email,\n      jobTitle,\n      organisation,\n      promo\n    });\n  };\n\n  const onChangePassword = () => {\n    if (newPassword.length < 8) {\n      return setPasswordError(\n        \"Choisissez un mot de passe d'au moins 8 caractÃ¨res.\"\n      );\n    } else if (newPassword !== confirmation) {\n      return setPasswordError(\"Les mots de passe ne correspondent pas.\");\n    }\n    updateUserPassword(password, newPassword);\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\"\n      }}\n    >\n      <ScrollView>\n        <View>\n          <Text>Changer mon mot de passe</Text>\n          <Input\n            placeholder=\"Mot de passe\"\n            leftIcon={<Icon name=\"lock\" />}\n            label=\"Ancien mot de passe\"\n            secureTextEntry\n            value={password}\n            leftIconContainerStyle={{ marginRight: 12 }}\n            containerStyle={{ marginBottom: 20, marginTop: 8 }}\n            onChangeText={value => setPassword(value)}\n          />\n          <Input\n            placeholder=\"Mot de passe\"\n            leftIcon={<Icon name=\"lock\" />}\n            label=\"Nouveau mot de passe\"\n            secureTextEntry\n            value={newPassword}\n            leftIconContainerStyle={{ marginRight: 12 }}\n            containerStyle={{ marginBottom: 20, marginTop: 8 }}\n            onChangeText={value => {\n              setPasswordError(\"\");\n              setNewPassword(value);\n            }}\n            errorMessage={passwordError}\n          />\n          <Input\n            placeholder=\"Mot de passe\"\n            leftIcon={\n              <Icon\n                name={confirmation === newPassword ? \"check\" : \"close\"}\n                color={confirmation === newPassword ? \"green\" : \"red\"}\n              />\n            }\n            label=\"Confirmation\"\n            secureTextEntry\n            value={confirmation}\n            leftIconContainerStyle={{ marginRight: 12 }}\n            containerStyle={{ marginBottom: 40, marginTop: 8 }}\n            onChangeText={value => setConfirmation(value)}\n          />\n        </View>\n\n        <Button\n          title=\"Valider\"\n          onPress={() => onChangePassword()}\n          buttonStyle={{ backgroundColor: theme.colors.primary }}\n          loading={auth.isUpdatingPassword}\n        />\n      </ScrollView>\n      <View style={{ paddingTop: 8 }}>\n        {auth.updateUserError && (\n          <Text style={{ color: \"red\", textAlign: \"center\" }}>\n            {auth.updateUserError}\n          </Text>\n        )}\n        <Button\n          title=\"Valider les changements\"\n          onPress={() => onEditProfile()}\n          buttonStyle={{ backgroundColor: theme.colors.success }}\n        />\n        <Button\n          title=\"Changer mon mot de passe\"\n          onPress={() => setShowPasswordEditForm(true)}\n          buttonStyle={{ backgroundColor: theme.colors.primary }}\n        />\n        <Button\n          title=\"Supprimer mon compte\"\n          onPress={() => setShowPasswordForm(true)}\n          buttonStyle={{ backgroundColor: theme.colors.error }}\n        />\n      </View>\n    </View>\n  );\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: user => dispatch(updateUser(user)),\n    deleteAccount: password => dispatch(deleteAccount(password)),\n    updateUserPassword: (password, newPassword) =>\n      dispatch(updateUserPassword(password, newPassword))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEditScreen);\n"]},"metadata":{},"sourceType":"module"}