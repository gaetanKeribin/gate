{"ast":null,"code":"var _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/PeopleReadScreen.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Avatar, Divider, Icon, Button } from \"react-native-elements\";\nimport theme from \"../Theme.json\";\nimport { fetchUsers } from \"../actions/usersActions\";\nimport _ from \"lodash\";\n\nvar PeopleScreen = function PeopleScreen(_ref) {\n  var _user$avatar;\n\n  var users = _ref.users,\n      fetchUsers = _ref.fetchUsers,\n      navigation = _ref.navigation,\n      route = _ref.route;\n  var user = route.params.user;\n  useEffect(function () {\n    function fetchData() {\n      fetchUsers();\n    }\n\n    fetchData();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, user ? React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"space-between\",\n      paddingVertical: 10,\n      paddingHorizontal: 8,\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      paddingTop: 40,\n      flex: 1,\n      paddingHorizontal: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [theme.colors.primary, theme.colors.secondary],\n    start: [0.25, 1],\n    end: [0, 0],\n    style: {\n      flexDirection: \"row\",\n      marginBottom: 20,\n      paddingVertical: 8,\n      paddingHorizontal: 16,\n      borderRadius: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: theme.colors.grey5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, _.capitalize(user.firstname)), React.createElement(Text, {\n    style: {\n      fontSize: 30,\n      color: \"white\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, _.capitalize(user.lastname))), user.avatar ? React.createElement(Avatar, {\n    onEditPress: function onEditPress() {\n      return editAvatar();\n    },\n    size: \"xlarge\",\n    containerStyle: {\n      borderColor: \"white\",\n      borderWidth: 3\n    },\n    source: {\n      uri: \"http://10.0.2.2:8005/api/files/avatar/\" + ((_user$avatar = user.avatar) == null ? void 0 : _user$avatar.filename)\n    },\n    onPress: function onPress() {\n      return setShowAvatarForm(true);\n    },\n    showEditButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }) : React.createElement(Avatar, {\n    onEditPress: function onEditPress() {\n      return editAvatar();\n    },\n    size: \"xlarge\",\n    containerStyle: {\n      borderColor: \"white\",\n      borderWidth: 3\n    },\n    title: user.firstname.charAt(0).concat(user.lastname.charAt(0)).toUpperCase(),\n    onPress: function onPress() {\n      return editAvatar();\n    },\n    showEditButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), React.createElement(Modal, {\n    isVisible: showAvatarForm,\n    height: \"auto\",\n    onBackdropPress: function onBackdropPress() {\n      return setShowAvatarForm(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Changer\",\n    onPress: function onPress() {\n      return editAvatar();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }), React.createElement(Button, {\n    title: \"Supprimer\",\n    buttonStyle: {\n      backgroundColor: theme.colors.grey0\n    },\n    onPress: function onPress() {\n      var _user$avatar2;\n\n      return deleteFile(\"avatar\", (_user$avatar2 = user.avatar) == null ? void 0 : _user$avatar2.filename);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  })))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"briefcase\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginHorizontal: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, user.jobTitle, \" chez \", user.organisation)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"flex-start\",\n      justifyContent: \"flex-start\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"school\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginHorizontal: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, \"Promotion \", user.promo)), React.createElement(Divider, {\n    style: {\n      marginVertical: 8,\n      backgroundColor: \"grey\",\n      borderWidth: 1,\n      width: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      flex: 1,\n      marginEnd: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, user.description)), React.createElement(Divider, {\n    style: {\n      marginVertical: 8,\n      backgroundColor: \"grey\",\n      borderWidth: 1,\n      width: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"at\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, user.email))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"Editer\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Edit\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }))) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PeopleScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/PeopleReadScreen.js"],"names":["React","useEffect","connect","Avatar","Divider","Icon","Button","theme","fetchUsers","_","PeopleScreen","users","navigation","route","user","params","fetchData","flex","alignContent","paddingVertical","paddingHorizontal","backgroundColor","paddingTop","colors","primary","secondary","flexDirection","marginBottom","borderRadius","justifyContent","fontSize","color","grey5","capitalize","firstname","fontWeight","lastname","avatar","editAvatar","borderColor","borderWidth","uri","filename","setShowAvatarForm","charAt","concat","toUpperCase","showAvatarForm","grey0","deleteFile","textAlignVertical","marginHorizontal","jobTitle","organisation","alignItems","promo","marginVertical","width","textAlign","marginEnd","description","marginStart","email","navigate","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { View, Text, ActivityIndicator } from \"react-native\";\nimport { Avatar, Divider, Icon, Button } from \"react-native-elements\";\nimport theme from \"../Theme.json\";\nimport { fetchUsers } from \"../actions/usersActions\";\nimport _ from \"lodash\";\n\nconst PeopleScreen = ({ users, fetchUsers, navigation, route }) => {\n  const { user } = route.params;\n  useEffect(() => {\n    function fetchData() {\n      fetchUsers();\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <View\n      style={{\n        flex: 1\n      }}\n    >\n      {user ? (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"space-between\",\n            paddingVertical: 10,\n            paddingHorizontal: 8,\n            backgroundColor: \"white\"\n          }}\n        >\n          <ScrollView\n            style={{\n              paddingTop: 40,\n              flex: 1,\n              paddingHorizontal: 12\n            }}\n          >\n            <LinearGradient\n              colors={[theme.colors.primary, theme.colors.secondary]}\n              start={[0.25, 1]}\n              end={[0, 0]}\n              style={{\n                flexDirection: \"row\",\n                marginBottom: 20,\n                paddingVertical: 8,\n                paddingHorizontal: 16,\n                borderRadius: 5\n              }}\n            >\n              <View\n                style={{\n                  flex: 1,\n                  alignContent: \"center\",\n                  justifyContent: \"center\"\n                }}\n              >\n                <Text style={{ fontSize: 20, color: theme.colors.grey5 }}>\n                  {_.capitalize(user.firstname)}\n                </Text>\n                <Text\n                  style={{ fontSize: 30, color: \"white\", fontWeight: \"bold\" }}\n                >\n                  {_.capitalize(user.lastname)}\n                </Text>\n              </View>\n              {user.avatar ? (\n                <Avatar\n                  onEditPress={() => editAvatar()}\n                  size=\"xlarge\"\n                  containerStyle={{\n                    borderColor: \"white\",\n                    borderWidth: 3\n                  }}\n                  source={{\n                    uri: `http://10.0.2.2:8005/api/files/avatar/${user.avatar?.filename}`\n                  }}\n                  onPress={() => setShowAvatarForm(true)}\n                  showEditButton\n                />\n              ) : (\n                <Avatar\n                  onEditPress={() => editAvatar()}\n                  size=\"xlarge\"\n                  containerStyle={{\n                    borderColor: \"white\",\n                    borderWidth: 3\n                  }}\n                  title={user.firstname\n                    .charAt(0)\n                    .concat(user.lastname.charAt(0))\n                    .toUpperCase()}\n                  onPress={() => editAvatar()}\n                  showEditButton\n                />\n              )}\n              <Modal\n                isVisible={showAvatarForm}\n                height=\"auto\"\n                onBackdropPress={() => setShowAvatarForm(false)}\n              >\n                <View>\n                  <Button title=\"Changer\" onPress={() => editAvatar()} />\n                  <Button\n                    title=\"Supprimer\"\n                    buttonStyle={{\n                      backgroundColor: theme.colors.grey0\n                    }}\n                    onPress={() => deleteFile(\"avatar\", user.avatar?.filename)}\n                  />\n                </View>\n              </Modal>\n            </LinearGradient>\n            <View style={{ flexDirection: \"row\" }}>\n              <Icon name=\"briefcase\" size={20} color=\"grey\" />\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  marginHorizontal: 8,\n                  flex: 1\n                }}\n              >\n                {user.jobTitle} chez {user.organisation}\n              </Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"flex-start\",\n                justifyContent: \"flex-start\"\n              }}\n            >\n              <Icon name=\"school\" size={20} color=\"grey\" />\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  marginHorizontal: 8,\n                  flex: 1\n                }}\n              >\n                Promotion {user.promo}\n              </Text>\n            </View>\n            <Divider\n              style={{\n                marginVertical: 8,\n                backgroundColor: \"grey\",\n                borderWidth: 1,\n                width: 20\n              }}\n            />\n            <View style={{ flexDirection: \"row\" }}>\n              <Text style={{ textAlign: \"center\", flex: 1, marginEnd: 8 }}>\n                {user.description}\n              </Text>\n            </View>\n            <Divider\n              style={{\n                marginVertical: 8,\n                backgroundColor: \"grey\",\n                borderWidth: 1,\n                width: 20\n              }}\n            />\n            <View style={{ flexDirection: \"row\" }}>\n              <Icon name=\"at\" size={20} color=\"grey\" />\n              <Text\n                style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n              >\n                {user.email}\n              </Text>\n            </View>\n          </ScrollView>\n          <View>\n            <Button\n              title=\"Editer\"\n              onPress={() => navigation.navigate(\"Edit\")}\n            />\n          </View>\n        </View>\n      ) : (\n        <View\n          style={{ flex: 1, alignContent: \"center\", justifyContent: \"center\" }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PeopleScreen);\n"]},"metadata":{},"sourceType":"module"}