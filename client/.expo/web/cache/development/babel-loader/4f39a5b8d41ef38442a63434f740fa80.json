{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\nimport { socketMiddleware, axiosMiddleware, devMiddleware, refreshTokenMiddleware } from \"./reduxMiddlewares\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nvar persistConfig = {\n  key: \"root\",\n  storage: AsyncStorage,\n  whitelist: [\"authReducer\"],\n  blacklist: [\"counterReducer\"]\n};\nvar middlewares = [thunk, devMiddleware, axiosMiddleware, socketMiddleware];\nvar store = createStore(rootReducer, applyMiddleware.apply(void 0, middlewares));\nvar persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/store/index.js"],"names":["createStore","applyMiddleware","compose","thunk","rootReducer","socketMiddleware","axiosMiddleware","devMiddleware","refreshTokenMiddleware","AsyncStorage","persistStore","persistReducer","persistConfig","key","storage","whitelist","blacklist","middlewares","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP;AACA,SACEC,gBADF,EAEEC,eAFF,EAGEC,aAHF,EAIEC,sBAJF;AAMA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAEL,YAFW;AAGpBM,EAAAA,SAAS,EAAE,CAAC,aAAD,CAHS;AAIpBC,EAAAA,SAAS,EAAE,CAAC,gBAAD;AAJS,CAAtB;AAOA,IAAMC,WAAW,GAAG,CAACd,KAAD,EAAQI,aAAR,EAAuBD,eAAvB,EAAwCD,gBAAxC,CAApB;AAEA,IAAMa,KAAK,GAAGlB,WAAW,CAACI,WAAD,EAAcH,eAAe,MAAf,SAAmBgB,WAAnB,CAAd,CAAzB;AAEA,IAAIE,SAAS,GAAGT,YAAY,CAACQ,KAAD,CAA5B;AAMA,SAASA,KAAT,EAAgBC,SAAhB","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\nimport {\n  socketMiddleware,\n  axiosMiddleware,\n  devMiddleware,\n  refreshTokenMiddleware\n} from \"./reduxMiddlewares\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { persistStore, persistReducer } from \"redux-persist\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: AsyncStorage,\n  whitelist: [\"authReducer\"],\n  blacklist: [\"counterReducer\"]\n};\n\nconst middlewares = [thunk, devMiddleware, axiosMiddleware, socketMiddleware];\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nlet persistor = persistStore(store);\n\n// store.subscribe(() => {\n//   // console.log(\"new client state\", store.getState().auth);\n// });\n\nexport { store, persistor };\n"]},"metadata":{},"sourceType":"module"}