{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/Auth/LogInScreen.js\";\nimport React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Input, Button, Icon, ThemeContext } from \"react-native-elements\";\nimport { logIn as _logIn } from \"../../actions/authActions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nvar logInScreen = function logInScreen(_ref) {\n  var auth = _ref.auth,\n      logIn = _ref.logIn,\n      navigation = _ref.navigation;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var _useState = useState(\"johndoe@gmail.com\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"12345678\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var handleLogIn = function handleLogIn() {\n    return _regeneratorRuntime.async(function handleLogIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (email) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setErrorMessage(\"MÃ©l invalide.\"));\n\n          case 4:\n            if (password) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setErrorMessage(\"Mot de passe invalide.\"));\n\n          case 6:\n            logIn({\n              email: email,\n              password: password\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingHorizontal: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [theme.colors.primary, theme.colors.secondary],\n    start: [0.25, 1],\n    end: [0, 0],\n    style: {\n      flexDirection: \"row\",\n      marginBottom: 20,\n      height: 150,\n      width: 150,\n      borderRadius: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/logo.png\"),\n    style: {\n      height: 150,\n      width: 150,\n      borderRadius: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), React.createElement(Input, {\n    placeholder: \"Email\",\n    leftIcon: React.createElement(Icon, {\n      name: \"email\",\n      type: \"material-community\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }),\n    value: email,\n    onChangeText: function onChangeText(value) {\n      return setEmail(value);\n    },\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }),\n    label: \"Mot de passe\",\n    secureTextEntry: true,\n    value: password,\n    containerStyle: {\n      marginBottom: 30,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    errorStyle: {\n      color: \"red\"\n    },\n    errorMessage: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Se connecter\",\n    onPress: handleLogIn,\n    loading: auth.isLoggingIn,\n    containerStyle: {\n      marginBottom: 20,\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Nouveau? Je m'enregistre.\",\n    type: \"clear\",\n    onPress: function onPress() {\n      return navigation.navigate(\"SignUp\");\n    },\n    containerStyle: {\n      marginBottom: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    logIn: function logIn(credentials) {\n      return dispatch(_logIn(credentials));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(logInScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/Auth/LogInScreen.js"],"names":["React","useState","useContext","connect","Input","Button","Icon","ThemeContext","logIn","LinearGradient","logInScreen","auth","navigation","theme","email","setEmail","password","setPassword","errorMessage","setErrorMessage","handleLogIn","flex","justifyContent","alignItems","paddingHorizontal","colors","primary","secondary","flexDirection","marginBottom","height","width","borderRadius","require","value","marginTop","color","isLoggingIn","navigate","mapStateToProps","state","mapDispatchToProps","dispatch","credentials"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { View, Image } from \"react-native\";\nimport { Input, Button, Icon, ThemeContext } from \"react-native-elements\";\nimport { logIn } from \"../../actions/authActions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst logInScreen = ({ auth, logIn, navigation }) => {\n  const { theme } = useContext(ThemeContext);\n  const [email, setEmail] = useState(\"johndoe@gmail.com\");\n  const [password, setPassword] = useState(\"12345678\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleLogIn = async () => {\n    if (!email) {\n      return setErrorMessage(\"MÃ©l invalide.\");\n    } else if (!password) {\n      return setErrorMessage(\"Mot de passe invalide.\");\n    }\n\n    logIn({ email, password });\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12\n      }}\n    >\n      <LinearGradient\n        colors={[theme.colors.primary, theme.colors.secondary]}\n        start={[0.25, 1]}\n        end={[0, 0]}\n        style={{\n          flexDirection: \"row\",\n          marginBottom: 20,\n          height: 150,\n          width: 150,\n          borderRadius: 100\n        }}\n      >\n        <Image\n          source={require(\"../../assets/logo.png\")}\n          style={{\n            height: 150,\n            width: 150,\n            borderRadius: 100\n          }}\n        />\n      </LinearGradient>\n      <Input\n        placeholder=\"Email\"\n        leftIcon={<Icon name=\"email\" type=\"material-community\" />}\n        value={email}\n        onChangeText={value => setEmail(value)}\n        label=\"Email\"\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={<Icon name=\"lock\" />}\n        label=\"Mot de passe\"\n        secureTextEntry\n        value={password}\n        containerStyle={{ marginBottom: 30, marginTop: 8 }}\n        onChangeText={value => setPassword(value)}\n        errorStyle={{ color: \"red\" }}\n        errorMessage={errorMessage}\n      />\n      <Button\n        title=\"Se connecter\"\n        onPress={handleLogIn}\n        loading={auth.isLoggingIn}\n        containerStyle={{ marginBottom: 20, marginTop: 8 }}\n      />\n      <Button\n        title=\"Nouveau? Je m'enregistre.\"\n        type=\"clear\"\n        onPress={() => navigation.navigate(\"SignUp\")}\n        containerStyle={{ marginBottom: 30 }}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logIn: credentials => dispatch(logIn(credentials))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(logInScreen);\n"]},"metadata":{},"sourceType":"module"}