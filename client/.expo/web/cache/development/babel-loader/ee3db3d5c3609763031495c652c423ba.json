{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Avatar, Icon } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { fetchUsers as _fetchUsers } from \"../../actions/usersActions\";\nimport _ from \"lodash\";\n\nvar Item = function Item(_ref) {\n  var _item$avatar;\n\n  var item = _ref.item,\n      navigation = _ref.navigation;\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate(\"Read\", {\n        user: item\n      });\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingTop: 8,\n      paddingHorizontal: 20,\n      marginVertical: 4,\n      marginHorizontal: 0,\n      borderBottomWidth: 1,\n      borderBottomColor: theme.colors.grey4,\n      paddingVertical: 12,\n      flexDirection: \"row\"\n    }\n  }, React.createElement(View, {\n    style: {\n      alignContent: \"center\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginRight: 12\n    }\n  }, item.avatar ? React.createElement(Avatar, {\n    source: {\n      uri: \"https://siee-gate.herokuapp.com/api/files/avatar/\" + ((_item$avatar = item.avatar) == null ? void 0 : _item$avatar.filename)\n    },\n    size: \"medium\"\n  }) : React.createElement(Avatar, {\n    size: \"medium\",\n    title: item.firstname[0].concat(item.lastname[0]).toUpperCase()\n  })), React.createElement(View, null, React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      fontWeight: \"bold\",\n      fontSize: 16\n    }\n  }, _.capitalize(item.firstname), \" \", _.capitalize(item.lastname)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1,\n      alignItems: \"center\"\n    }\n  }, React.createElement(Icon, {\n    name: \"account-card-details\",\n    size: 20\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8\n    }\n  }, item.jobTitle, \" chez \", item.organisation)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      flex: 1,\n      alignItems: \"center\"\n    }\n  }, React.createElement(Icon, {\n    name: \"school\",\n    size: 20\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8\n    }\n  }, \"SIEE promotion \", item.promo)))));\n};\n\nvar PeopleScreen = function PeopleScreen(_ref2) {\n  var users = _ref2.users,\n      fetchUsers = _ref2.fetchUsers,\n      navigation = _ref2.navigation;\n  useEffect(function () {\n    function fetchData() {\n      fetchUsers();\n    }\n\n    fetchData();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, users.isLoaded ? React.createElement(FlatList, {\n    style: {\n      borderRadius: 0,\n      shadowOffset: {\n        width: 10,\n        height: 10\n      },\n      shadowColor: \"black\",\n      shadowOpacity: 0.3,\n      elevation: 2,\n      backgroundColor: \"white\"\n    },\n    data: users.users,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(Item, {\n        item: item,\n        navigation: navigation\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    }\n  }) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\"\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    users: state.users\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchUsers: function fetchUsers() {\n      return dispatch(_fetchUsers());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PeopleScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/People/PeopleListScreen.js"],"names":["React","useEffect","connect","Avatar","Icon","theme","fetchUsers","_","Item","item","navigation","navigate","user","paddingTop","paddingHorizontal","marginVertical","marginHorizontal","borderBottomWidth","borderBottomColor","colors","grey4","paddingVertical","flexDirection","alignContent","justifyContent","alignItems","marginRight","avatar","uri","filename","firstname","concat","lastname","toUpperCase","textAlignVertical","fontWeight","fontSize","capitalize","flex","marginStart","jobTitle","organisation","promo","PeopleScreen","users","fetchData","isLoaded","borderRadius","shadowOffset","width","height","shadowColor","shadowOpacity","elevation","backgroundColor","_id","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  View,\n  Text,\n  ActivityIndicator,\n  FlatList,\n  TouchableOpacity\n} from \"react-native\";\nimport { Avatar, Icon } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport _ from \"lodash\";\n\nconst Item = ({ item, navigation }) => {\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Read\", {\n          user: item\n        });\n      }}\n    >\n      <View\n        style={{\n          paddingTop: 8,\n          paddingHorizontal: 20,\n          marginVertical: 4,\n          marginHorizontal: 0,\n          borderBottomWidth: 1,\n          borderBottomColor: theme.colors.grey4,\n          paddingVertical: 12,\n          flexDirection: \"row\"\n        }}\n      >\n        <View\n          style={{\n            alignContent: \"center\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginRight: 12\n          }}\n        >\n          {item.avatar ? (\n            <Avatar\n              source={{\n                uri: `https://siee-gate.herokuapp.com/api/files/avatar/${item.avatar?.filename}`\n              }}\n              size=\"medium\"\n            />\n          ) : (\n            <Avatar\n              size=\"medium\"\n              title={item.firstname[0].concat(item.lastname[0]).toUpperCase()}\n            />\n          )}\n        </View>\n        <View>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16\n            }}\n          >\n            {_.capitalize(item.firstname)} {_.capitalize(item.lastname)}\n          </Text>\n          <View style={{ flexDirection: \"row\", flex: 1, alignItems: \"center\" }}>\n            <Icon name=\"account-card-details\" size={20} />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              {item.jobTitle} chez {item.organisation}\n            </Text>\n          </View>\n          <View style={{ flexDirection: \"row\", flex: 1, alignItems: \"center\" }}>\n            <Icon name=\"school\" size={20} />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              SIEE promotion {item.promo}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst PeopleScreen = ({ users, fetchUsers, navigation }) => {\n  useEffect(() => {\n    function fetchData() {\n      fetchUsers();\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {users.isLoaded ? (\n        <FlatList\n          style={{\n            borderRadius: 0,\n            shadowOffset: { width: 10, height: 10 },\n            shadowColor: \"black\",\n            shadowOpacity: 0.3,\n            elevation: 2,\n            backgroundColor: \"white\"\n          }}\n          data={users.users}\n          renderItem={({ item }) => (\n            <Item item={item} navigation={navigation} />\n          )}\n          keyExtractor={item => item._id}\n        />\n      ) : (\n        <View\n          style={{ flex: 1, alignContent: \"center\", justifyContent: \"center\" }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  users: state.users\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PeopleScreen);\n"]},"metadata":{},"sourceType":"module"}