{"ast":null,"code":"var _jsxFileName = \"/home/gaetan/Documents/GATE/app/client/src/components/People/PeopleReadScreen.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Avatar, Divider, Icon, Button } from \"react-native-elements\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport theme from \"../../Theme.json\";\nimport _ from \"lodash\";\nimport { showOverlay } from \"../../actions/overlayAction\";\nimport { startPrivateConversation } from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\n\nvar PeopleScreen = function PeopleScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      auth = _useSelector.auth;\n\n  var dispatch = useDispatch();\n  var item = route.params.item;\n\n  var fullname = _.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname);\n\n  if (!item) return null;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"space-between\",\n      paddingVertical: 10,\n      paddingHorizontal: 8,\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [theme.colors.primary, theme.colors.secondary],\n    start: [0.25, 1],\n    end: [0, 0],\n    style: {\n      flexDirection: \"row\",\n      marginBottom: 20,\n      paddingVertical: 8,\n      paddingHorizontal: 16,\n      borderRadius: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: theme.colors.grey5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, _.capitalize(item.firstname)), React.createElement(Text, {\n    style: {\n      fontSize: 30,\n      color: \"white\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, _.capitalize(item.lastname)), item.professor && React.createElement(Text, {\n    style: {\n      color: theme.colors.grey4,\n      paddingLeft: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Professeur\"), item.administration && React.createElement(Text, {\n    style: {\n      color: theme.colors.grey4,\n      paddingLeft: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Membre du corps administratif\")), item.avatar ? React.createElement(Avatar, {\n    size: \"xlarge\",\n    containerStyle: {\n      borderColor: \"white\",\n      borderWidth: 3\n    },\n    source: {\n      uri: apiConfig.baseUrl + \"/api/files/avatars/\" + item.avatar\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }) : React.createElement(Avatar, {\n    size: \"xlarge\",\n    containerStyle: {\n      borderColor: \"white\",\n      borderWidth: 3\n    },\n    title: item.firstname.charAt(0).concat(item.lastname.charAt(0)).toUpperCase(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"briefcase\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginHorizontal: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, item.jobTitle, \" chez \", item.organisation)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"school\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginHorizontal: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Promotion \", item.promo)), React.createElement(Divider, {\n    style: {\n      marginVertical: 20,\n      backgroundColor: \"grey\",\n      borderWidth: 1,\n      width: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"justify\",\n      flex: 1,\n      marginEnd: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, item.description)), React.createElement(Divider, {\n    style: {\n      marginVertical: 20,\n      backgroundColor: \"grey\",\n      borderWidth: 1,\n      width: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"at\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, item.email))), item._id !== auth.user._id && React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Contacter\",\n    onPress: function onPress() {\n      var a = auth == null ? void 0 : auth.user.privateConversations.filter(function (c) {\n        return c.interlocutor_id == item._id;\n      });\n\n      if (a.length > 0) {\n        navigation.navigate(\"Messages\", {\n          screen: \"Room\",\n          params: {\n            title: fullname,\n            conversation_id: a[0].conversation_id\n          }\n        });\n      } else dispatch(showOverlay({\n        form: {\n          action: startPrivateConversation,\n          inputName: \"text\",\n          actionParams: {\n            recipient: item._id\n          },\n          message: \"Demarrer une conversation avec \" + _.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname)\n        },\n        redirect: \"Messages\"\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default PeopleScreen;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/People/PeopleReadScreen.js"],"names":["React","useDispatch","useSelector","Avatar","Divider","Icon","Button","LinearGradient","theme","_","showOverlay","startPrivateConversation","apiConfig","PeopleScreen","route","navigation","state","auth","dispatch","item","params","fullname","capitalize","firstname","lastname","flex","alignContent","paddingVertical","paddingHorizontal","backgroundColor","colors","primary","secondary","flexDirection","marginBottom","borderRadius","justifyContent","fontSize","color","grey5","fontWeight","professor","grey4","paddingLeft","administration","avatar","borderColor","borderWidth","uri","baseUrl","charAt","concat","toUpperCase","alignItems","textAlignVertical","marginHorizontal","jobTitle","organisation","promo","marginVertical","width","textAlign","marginEnd","description","marginStart","email","_id","user","a","privateConversations","filter","c","interlocutor_id","length","navigate","screen","title","conversation_id","form","action","inputName","actionParams","recipient","message","redirect"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { View, Text, ScrollView } from \"react-native\";\nimport { Avatar, Divider, Icon, Button } from \"react-native-elements\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport theme from \"../../Theme.json\";\nimport _ from \"lodash\";\nimport { showOverlay } from \"../../actions/overlayAction\";\nimport { startPrivateConversation } from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\n\nconst PeopleScreen = ({ route, navigation }) => {\n  const { auth } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const { item } = route.params;\n  const fullname =\n    _.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname);\n\n  if (!item) return null;\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\",\n      }}\n    >\n      <ScrollView\n        style={{\n          flex: 1,\n        }}\n      >\n        <LinearGradient\n          colors={[theme.colors.primary, theme.colors.secondary]}\n          start={[0.25, 1]}\n          end={[0, 0]}\n          style={{\n            flexDirection: \"row\",\n            marginBottom: 20,\n            paddingVertical: 8,\n            paddingHorizontal: 16,\n            borderRadius: 5,\n          }}\n        >\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.colors.grey5 }}>\n              {_.capitalize(item.firstname)}\n            </Text>\n            <Text style={{ fontSize: 30, color: \"white\", fontWeight: \"bold\" }}>\n              {_.capitalize(item.lastname)}\n            </Text>\n            {item.professor && (\n              <Text style={{ color: theme.colors.grey4, paddingLeft: 4 }}>\n                Professeur\n              </Text>\n            )}\n            {item.administration && (\n              <Text style={{ color: theme.colors.grey4, paddingLeft: 4 }}>\n                Membre du corps administratif\n              </Text>\n            )}\n          </View>\n          {item.avatar ? (\n            <Avatar\n              size=\"xlarge\"\n              containerStyle={{\n                borderColor: \"white\",\n                borderWidth: 3,\n              }}\n              source={{\n                uri: `${apiConfig.baseUrl}/api/files/avatars/${item.avatar}`,\n              }}\n            />\n          ) : (\n            <Avatar\n              size=\"xlarge\"\n              containerStyle={{\n                borderColor: \"white\",\n                borderWidth: 3,\n              }}\n              title={item.firstname\n                .charAt(0)\n                .concat(item.lastname.charAt(0))\n                .toUpperCase()}\n            />\n          )}\n        </LinearGradient>\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Icon name=\"briefcase\" size={20} color=\"grey\" />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginHorizontal: 8,\n              flex: 1,\n            }}\n          >\n            {item.jobTitle} chez {item.organisation}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <Icon name=\"school\" size={20} color=\"grey\" />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginHorizontal: 8,\n              flex: 1,\n            }}\n          >\n            Promotion {item.promo}\n          </Text>\n        </View>\n        <Divider\n          style={{\n            marginVertical: 20,\n            backgroundColor: \"grey\",\n            borderWidth: 1,\n            width: 20,\n          }}\n        />\n        <View style={{ flexDirection: \"row\" }}>\n          <Text style={{ textAlign: \"justify\", flex: 1, marginEnd: 8 }}>\n            {item.description}\n          </Text>\n        </View>\n        <Divider\n          style={{\n            marginVertical: 20,\n            backgroundColor: \"grey\",\n            borderWidth: 1,\n            width: 20,\n          }}\n        />\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon name=\"at\" size={20} color=\"grey\" />\n          <Text\n            style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n          >\n            {item.email}\n          </Text>\n        </View>\n      </ScrollView>\n      {item._id !== auth.user._id && (\n        <View>\n          <Button\n            title=\"Contacter\"\n            onPress={() => {\n              let a = auth?.user.privateConversations.filter(\n                (c) => c.interlocutor_id == item._id\n              );\n              if (a.length > 0) {\n                navigation.navigate(\"Messages\", {\n                  screen: \"Room\",\n                  params: {\n                    title: fullname,\n                    conversation_id: a[0].conversation_id,\n                  },\n                });\n              } else\n                dispatch(\n                  showOverlay({\n                    form: {\n                      action: startPrivateConversation,\n                      inputName: \"text\",\n                      actionParams: { recipient: item._id },\n                      message:\n                        \"Demarrer une conversation avec \" +\n                        _.capitalize(item.firstname) +\n                        \" \" +\n                        _.capitalize(item.lastname),\n                    },\n                    redirect: \"Messages\",\n                  })\n                );\n            }}\n          />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default PeopleScreen;\n"]},"metadata":{},"sourceType":"module"}