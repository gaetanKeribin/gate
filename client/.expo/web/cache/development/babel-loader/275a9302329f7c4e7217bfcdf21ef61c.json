{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/EditJobScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Input, Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport { updateJob as _updateJob, deleteJob as _deleteJob } from \"../actions/jobsActions\";\n\nvar EditJobScreen = function EditJobScreen(_ref) {\n  var updateJob = _ref.updateJob,\n      deleteJob = _ref.deleteJob,\n      route = _ref.route;\n  var job = route.params.job;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var _useState = useState(job.employmentType),\n      _useState2 = _slicedToArray(_useState, 2),\n      employmentType = _useState2[0],\n      setEmploymentType = _useState2[1];\n\n  var _useState3 = useState(job.asap),\n      _useState4 = _slicedToArray(_useState3, 2),\n      asap = _useState4[0],\n      setAsap = _useState4[1];\n\n  var _useState5 = useState(job.organisation),\n      _useState6 = _slicedToArray(_useState5, 2),\n      organisation = _useState6[0],\n      setOrganisation = _useState6[1];\n\n  var _useState7 = useState(job.city),\n      _useState8 = _slicedToArray(_useState7, 2),\n      city = _useState8[0],\n      setCity = _useState8[1];\n\n  var _useState9 = useState(job.salary),\n      _useState10 = _slicedToArray(_useState9, 2),\n      salary = _useState10[0],\n      setSalary = _useState10[1];\n\n  var _useState11 = useState(job.jobTitle),\n      _useState12 = _slicedToArray(_useState11, 2),\n      jobTitle = _useState12[0],\n      setJobTitle = _useState12[1];\n\n  var _useState13 = useState(job.jobDesc),\n      _useState14 = _slicedToArray(_useState13, 2),\n      jobDesc = _useState14[0],\n      setJobDesc = _useState14[1];\n\n  var _useState15 = useState(\"\" + job.minExp),\n      _useState16 = _slicedToArray(_useState15, 2),\n      minExp = _useState16[0],\n      setMinExp = _useState16[1];\n\n  var _useState17 = useState(job.contact),\n      _useState18 = _slicedToArray(_useState17, 2),\n      contact = _useState18[0],\n      setContact = _useState18[1];\n\n  var _useState19 = useState({}),\n      _useState20 = _slicedToArray(_useState19, 2),\n      errors = _useState20[0],\n      setErrors = _useState20[1];\n\n  var onEditJob = function onEditJob() {\n    {\n      if (!employmentType) {\n        return setErrors({\n          employmentType: \"Ce champs est obligatoire.\"\n        });\n      } else if (!organisation) {\n        return setErrors({\n          organisation: \"Ce champs est obligatoire.\"\n        });\n      } else if (!city) {\n        return setErrors({\n          city: \"Ce champs est obligatoire.\"\n        });\n      } else if (!jobDesc) {\n        return setErrors({\n          jobDesc: \"Ce champs est obligatoire.\"\n        });\n      } else if (!jobTitle) {\n        return setErrors({\n          jobTitle: \"Ce champs est obligatoire.\"\n        });\n      } else if (!minExp) {\n        return setErrors({\n          minExp: \"Ce champs est obligatoire.\"\n        });\n      }\n    }\n    updateJob(_objectSpread({}, job, {\n      employmentType: employmentType,\n      asap: asap,\n      organisation: organisation,\n      city: city,\n      salary: salary,\n      jobDesc: jobDesc,\n      jobTitle: jobTitle,\n      minExp: minExp,\n      contact: contact\n    }));\n    {\n      setAsap(false);\n      setCity();\n      setSalary();\n      setContact();\n      setErrors({});\n      setEmploymentType();\n      setOrganisation();\n      setJobDesc();\n      setJobTitle();\n    }\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"space-between\",\n      paddingVertical: 8,\n      paddingHorizontal: 8,\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    label: \"Type de contrat*\",\n    placeholder: \"CDI, CDD, Apprentissage...\",\n    value: employmentType,\n    onChangeText: function onChangeText(value) {\n      return setEmploymentType(value);\n    },\n    errorMessage: errors.employmentType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"Organisation*\",\n    placeholder: \"Deloitte, Engie, EY...\",\n    value: organisation,\n    onChangeText: function onChangeText(value) {\n      return setOrganisation(value);\n    },\n    errorMessage: errors.organisation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Paris, Shanghai, Lyon...\",\n    label: \"Ville*\",\n    value: city,\n    onChangeText: function onChangeText(value) {\n      return setCity(value);\n    },\n    errorMessage: errors.city,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Auditeur des SI, Pentester junior...\",\n    label: \"Intitul\\xE9 du poste*\",\n    value: jobTitle,\n    onChangeText: function onChangeText(value) {\n      return setJobTitle(value);\n    },\n    errorMessage: errors.jobTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"Description du poste*\",\n    multiline: true,\n    inputStyle: {\n      height: 200,\n      textAlignVertical: \"top\"\n    },\n    placeholder: \"Les missions, les comp\\xE9tences requises, l'employeur...\",\n    value: jobDesc,\n    onChangeText: function onChangeText(value) {\n      return setJobDesc(value);\n    },\n    errorMessage: errors.jobDesc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"Exp\\xE9rience*\",\n    placeholder: \"Ann\\xE9es pass\\xE9es dans un poste similaire\",\n    value: minExp,\n    keyboardType: \"number-pad\",\n    onChangeText: function onChangeText(value) {\n      return setMinExp(value);\n    },\n    errorMessage: errors.minExp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"R\\xE9mun\\xE9ration\",\n    placeholder: \"En \\u20AC\",\n    keyboardType: \"decimal-pad\",\n    value: salary,\n    onChangeText: function onChangeText(value) {\n      return setSalary(value);\n    },\n    showSoftInputOnFocus: false,\n    errorMessage: errors.salary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      marginBottom: 12,\n      flexDirection: \"row\",\n      display: \"flex\",\n      height: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: theme.colors.grey3,\n      fontWeight: \"bold\",\n      paddingLeft: 10,\n      fontSize: 16,\n      flex: 1,\n      textAlignVertical: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"Poste \\xE0 pourvoir d\\xE8s que possible\"), React.createElement(Switch, {\n    trackColor: {\n      false: theme.colors.grey4,\n      true: theme.colors.primarySoft\n    },\n    thumbColor: asap ? theme.colors.primary : theme.colors.grey2,\n    value: asap,\n    onValueChange: function onValueChange(value) {\n      return setAsap(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  })), React.createElement(Input, {\n    label: \"Contact\",\n    placeholder: \"Email\",\n    value: contact,\n    onChangeText: function onChangeText(value) {\n      return setContact(value);\n    },\n    errorMessage: errors.contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      paddingTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Valider les changements\",\n    onPress: function onPress() {\n      return onEditJob();\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.primary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Supprimer l'offre\",\n    onPress: function onPress() {\n      return deleteJob(job._id);\n    },\n    buttonStyle: {\n      backgroundColor: theme.colors.error\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    jobs: state.jobs,\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateJob: function updateJob(job) {\n      return dispatch(_updateJob(job));\n    },\n    deleteJob: function deleteJob(id) {\n      return dispatch(_deleteJob(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditJobScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/EditJobScreen.js"],"names":["React","useContext","useState","Input","Icon","ThemeContext","Button","connect","updateJob","deleteJob","EditJobScreen","route","job","params","theme","employmentType","setEmploymentType","asap","setAsap","organisation","setOrganisation","city","setCity","salary","setSalary","jobTitle","setJobTitle","jobDesc","setJobDesc","minExp","setMinExp","contact","setContact","errors","setErrors","onEditJob","flex","alignContent","paddingVertical","paddingHorizontal","backgroundColor","value","height","textAlignVertical","marginBottom","flexDirection","display","color","colors","grey3","fontWeight","paddingLeft","fontSize","false","grey4","true","primarySoft","primary","grey2","paddingTop","_id","error","mapStateToProps","state","jobs","auth","mapDispatchToProps","dispatch","id"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { View, Text, Switch, ScrollView } from \"react-native\";\nimport { Input, Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport { updateJob, deleteJob } from \"../actions/jobsActions\";\n\nconst EditJobScreen = ({ updateJob, deleteJob, route }) => {\n  const { job } = route.params;\n  const { theme } = useContext(ThemeContext);\n  const [employmentType, setEmploymentType] = useState(job.employmentType);\n  const [asap, setAsap] = useState(job.asap);\n  const [organisation, setOrganisation] = useState(job.organisation);\n  const [city, setCity] = useState(job.city);\n  const [salary, setSalary] = useState(job.salary);\n  const [jobTitle, setJobTitle] = useState(job.jobTitle);\n  const [jobDesc, setJobDesc] = useState(job.jobDesc);\n  const [minExp, setMinExp] = useState(`${job.minExp}`);\n  const [contact, setContact] = useState(job.contact);\n  const [errors, setErrors] = useState({});\n\n  const onEditJob = () => {\n    {\n      if (!employmentType) {\n        return setErrors({\n          employmentType: \"Ce champs est obligatoire.\"\n        });\n      } else if (!organisation) {\n        return setErrors({\n          organisation: \"Ce champs est obligatoire.\"\n        });\n      } else if (!city) {\n        return setErrors({\n          city: \"Ce champs est obligatoire.\"\n        });\n      } else if (!jobDesc) {\n        return setErrors({\n          jobDesc: \"Ce champs est obligatoire.\"\n        });\n      } else if (!jobTitle) {\n        return setErrors({\n          jobTitle: \"Ce champs est obligatoire.\"\n        });\n      } else if (!minExp) {\n        return setErrors({\n          minExp: \"Ce champs est obligatoire.\"\n        });\n      }\n    }\n\n    updateJob({\n      ...job,\n      employmentType,\n      asap,\n      organisation,\n      city,\n      salary,\n      jobDesc,\n      jobTitle,\n      minExp,\n      contact\n    });\n\n    {\n      setAsap(false);\n      setCity();\n      setSalary();\n      setContact();\n      setErrors({});\n      setEmploymentType();\n      setOrganisation();\n      setJobDesc();\n      setJobTitle();\n    }\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\"\n      }}\n    >\n      <ScrollView>\n        <Input\n          label=\"Type de contrat*\"\n          placeholder=\"CDI, CDD, Apprentissage...\"\n          value={employmentType}\n          onChangeText={value => setEmploymentType(value)}\n          errorMessage={errors.employmentType}\n        />\n        <Input\n          label=\"Organisation*\"\n          placeholder=\"Deloitte, Engie, EY...\"\n          value={organisation}\n          onChangeText={value => setOrganisation(value)}\n          errorMessage={errors.organisation}\n        />\n        <Input\n          placeholder=\"Paris, Shanghai, Lyon...\"\n          label=\"Ville*\"\n          value={city}\n          onChangeText={value => setCity(value)}\n          errorMessage={errors.city}\n        />\n        <Input\n          placeholder=\"Auditeur des SI, Pentester junior...\"\n          label=\"Intitulé du poste*\"\n          value={jobTitle}\n          onChangeText={value => setJobTitle(value)}\n          errorMessage={errors.jobTitle}\n        />\n        <Input\n          label=\"Description du poste*\"\n          multiline\n          inputStyle={{ height: 200, textAlignVertical: \"top\" }}\n          placeholder=\"Les missions, les compétences requises, l'employeur...\"\n          value={jobDesc}\n          onChangeText={value => setJobDesc(value)}\n          errorMessage={errors.jobDesc}\n        />\n        <Input\n          label=\"Expérience*\"\n          placeholder=\"Années passées dans un poste similaire\"\n          value={minExp}\n          keyboardType=\"number-pad\"\n          onChangeText={value => setMinExp(value)}\n          errorMessage={errors.minExp}\n        />\n        <Input\n          label=\"Rémunération\"\n          placeholder=\"En €\"\n          keyboardType=\"decimal-pad\"\n          value={salary}\n          onChangeText={value => setSalary(value)}\n          showSoftInputOnFocus={false}\n          errorMessage={errors.salary}\n        />\n        <View\n          style={{\n            marginBottom: 12,\n            flexDirection: \"row\",\n            display: \"flex\",\n            height: 40\n          }}\n        >\n          <Text\n            style={{\n              color: theme.colors.grey3,\n              fontWeight: \"bold\",\n              paddingLeft: 10,\n              fontSize: 16,\n              flex: 1,\n              textAlignVertical: \"center\"\n            }}\n          >\n            Poste à pourvoir dès que possible\n          </Text>\n          <Switch\n            trackColor={{\n              false: theme.colors.grey4,\n              true: theme.colors.primarySoft\n            }}\n            thumbColor={asap ? theme.colors.primary : theme.colors.grey2}\n            value={asap}\n            onValueChange={value => setAsap(value)}\n          />\n        </View>\n        <Input\n          label=\"Contact\"\n          placeholder=\"Email\"\n          value={contact}\n          onChangeText={value => setContact(value)}\n          errorMessage={errors.contact}\n        />\n      </ScrollView>\n      <View style={{ paddingTop: 8 }}>\n        <Button\n          title=\"Valider les changements\"\n          onPress={() => onEditJob()}\n          buttonStyle={{ backgroundColor: theme.colors.primary }}\n        />\n        <Button\n          title=\"Supprimer l'offre\"\n          onPress={() => deleteJob(job._id)}\n          buttonStyle={{ backgroundColor: theme.colors.error }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { jobs: state.jobs, auth: state.auth };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateJob: job => dispatch(updateJob(job)),\n    deleteJob: id => dispatch(deleteJob(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditJobScreen);\n"]},"metadata":{},"sourceType":"module"}