{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/frontend/src/components/SignUpScreen.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Input, Button, Icon, Divider } from \"react-native-elements\";\nimport { signUp as _signUp } from \"../actions/authActions\";\nimport { notifyUser as _notifyUser } from \"../actions/notifyActions\";\n\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var switchPanel = _ref.switchPanel,\n      signUp = _ref.signUp,\n      auth = _ref.auth;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstname = _useState2[0],\n      setFirstname = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastname = _useState4[0],\n      setLastname = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      confirmation = _useState10[0],\n      setConfirmation = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      errorMessage = _useState12[0],\n      setErrorMessage = _useState12[1];\n\n  var handleSignUp = function handleSignUp() {\n    return _regeneratorRuntime.async(function handleSignUp$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (email) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setErrorMessage({\n              mail: \"MÃ©l manquant.\"\n            }));\n\n          case 4:\n            if (password) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setErrorMessage({\n              password: \"Mot de passe manquant.\"\n            }));\n\n          case 8:\n            if (!(password !== confirmation)) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setErrorMessage({\n              confirmation: \"Veuillez retaper la confirmation de votre mot de passe.\"\n            }));\n\n          case 12:\n            if (firstname) {\n              _context.next = 16;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setErrorMessage({\n              firstname: \"Mot de passe manquant.\"\n            }));\n\n          case 16:\n            if (lastname) {\n              _context.next = 18;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setErrorMessage({\n              lastname: \"Mot de passe manquant.\"\n            }));\n\n          case 18:\n            signUp({\n              email: email,\n              password: password\n            });\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      height: 40,\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, errorMessage), React.createElement(Input, {\n    placeholder: \"Pr\\xE9nom\",\n    value: firstname,\n    onChangeText: function onChangeText(value) {\n      return setFirstname(value);\n    },\n    label: \"Pr\\xE9nom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Nom\",\n    value: lastname,\n    onChangeText: function onChangeText(value) {\n      return setLastname(value);\n    },\n    label: \"Nom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Email\",\n    leftIcon: React.createElement(Icon, {\n      name: \"email\",\n      type: \"material-community\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }),\n    value: email,\n    onChangeText: function onChangeText(value) {\n      return setEmail(value);\n    },\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }),\n    label: \"Mot de passe\",\n    secureTextEntry: true,\n    value: password,\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: confirmation === password ? \"check\" : \"close\",\n      color: confirmation === password ? \"green\" : \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }),\n    label: \"Confirmation\",\n    secureTextEntry: true,\n    value: confirmation,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 40,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      return setConfirmation(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"S'inscrire\",\n    onPress: handleSignUp,\n    loading: auth.isSigningUp,\n    containerStyle: {\n      marginBottom: 20,\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"D\\xE9j\\xE0 enregistr\\xE9? Je me connecte.\",\n    type: \"clear\",\n    onPress: switchPanel,\n    containerStyle: {\n      marginBottom: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signUp: function signUp(credentials) {\n      return dispatch(_signUp(credentials));\n    },\n    notifyUser: function notifyUser(notification) {\n      return dispatch(_notifyUser(notification));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpScreen);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 12\n  },\n  textInput: {\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    marginTop: 8\n  }\n});","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/SignUpScreen.js"],"names":["React","useState","connect","Input","Button","Icon","Divider","signUp","notifyUser","SignUpScreen","switchPanel","auth","firstname","setFirstname","lastname","setLastname","email","setEmail","password","setPassword","confirmation","setConfirmation","errorMessage","setErrorMessage","handleSignUp","mail","styles","container","height","color","value","marginRight","marginBottom","marginTop","isSigningUp","mapStateToProps","state","mapDispatchToProps","dispatch","credentials","notification","StyleSheet","create","flex","justifyContent","alignItems","paddingHorizontal","textInput","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { Input, Button, Icon, Divider } from \"react-native-elements\";\nimport { signUp } from \"../actions/authActions\";\nimport { notifyUser } from \"../actions/notifyActions\";\n\nconst SignUpScreen = ({ switchPanel, signUp, auth }) => {\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState({});\n\n  const handleSignUp = async () => {\n    if (!email) {\n      return setErrorMessage({ mail: \"MÃ©l manquant.\" });\n    } else if (!password) {\n      return setErrorMessage({ password: \"Mot de passe manquant.\" });\n    } else if (password !== confirmation) {\n      return setErrorMessage({\n        confirmation: \"Veuillez retaper la confirmation de votre mot de passe.\"\n      });\n    } else if (!firstname) {\n      return setErrorMessage({ firstname: \"Mot de passe manquant.\" });\n    } else if (!lastname) {\n      return setErrorMessage({ lastname: \"Mot de passe manquant.\" });\n    }\n\n    signUp({ email, password });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={{ height: 40, color: \"red\" }}>{errorMessage}</Text>\n      <Input\n        placeholder=\"PrÃ©nom\"\n        value={firstname}\n        onChangeText={value => setFirstname(value)}\n        label=\"PrÃ©nom\"\n      />\n      <Input\n        placeholder=\"Nom\"\n        value={lastname}\n        onChangeText={value => setLastname(value)}\n        label=\"Nom\"\n      />\n      <Input\n        placeholder=\"Email\"\n        leftIcon={<Icon name=\"email\" type=\"material-community\" />}\n        value={email}\n        onChangeText={value => setEmail(value)}\n        label=\"Email\"\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={<Icon name=\"lock\" />}\n        label=\"Mot de passe\"\n        secureTextEntry\n        value={password}\n        onChangeText={value => setPassword(value)}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={\n          <Icon\n            name={confirmation === password ? \"check\" : \"close\"}\n            color={confirmation === password ? \"green\" : \"red\"}\n          />\n        }\n        label=\"Confirmation\"\n        secureTextEntry\n        value={confirmation}\n        leftIconContainerStyle={{ marginRight: 12 }}\n        containerStyle={{ marginBottom: 40, marginTop: 8 }}\n        onChangeText={value => setConfirmation(value)}\n      />\n      <Button\n        title=\"S'inscrire\"\n        onPress={handleSignUp}\n        loading={auth.isSigningUp}\n        containerStyle={{ marginBottom: 20, marginTop: 8 }}\n      />\n      <Button\n        title=\"DÃ©jÃ  enregistrÃ©? Je me connecte.\"\n        type=\"clear\"\n        onPress={switchPanel}\n        containerStyle={{ marginBottom: 30 }}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: credentials => dispatch(signUp(credentials)),\n    notifyUser: notification => dispatch(notifyUser(notification))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpScreen);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 12\n  },\n  textInput: {\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    marginTop: 8\n  }\n});\n"]},"metadata":{},"sourceType":"module"}