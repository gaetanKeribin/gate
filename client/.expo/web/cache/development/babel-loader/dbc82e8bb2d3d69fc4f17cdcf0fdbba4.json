{"ast":null,"code":"var _jsxFileName = \"/home/gaetan/Documents/GATE/app/client/src/components/People/PeopleReadScreen.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Avatar, Divider, Icon, Button } from \"react-native-elements\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport theme from \"../../Theme.json\";\nimport _ from \"lodash\";\nimport { showOverlay } from \"../../actions/overlayAction\";\nimport { startConversation } from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nvar PeopleReadScreen = function PeopleReadScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      auth = _useSelector.auth;\n\n  var dispatch = useDispatch();\n  var item = route.params.item;\n\n  var fullname = _.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname);\n\n  if (!item) return null;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [theme.colors.primary, theme.colors.secondary],\n    start: [0.25, 1],\n    end: [0, 0],\n    style: {\n      flexDirection: \"row\",\n      marginBottom: 20,\n      paddingVertical: 8,\n      paddingHorizontal: 16,\n      borderRadius: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      color: theme.colors.grey5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, _.capitalize(item.firstname)), React.createElement(Text, {\n    style: {\n      fontSize: 30,\n      color: \"white\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, _.capitalize(item.lastname)), item.professor && React.createElement(Text, {\n    style: {\n      color: theme.colors.grey4,\n      paddingLeft: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"Professeur\"), item.administration && React.createElement(Text, {\n    style: {\n      color: theme.colors.grey4,\n      paddingLeft: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Membre du corps administratif\")), item.avatar ? React.createElement(Avatar, {\n    size: \"xlarge\",\n    containerStyle: {\n      borderColor: \"white\",\n      borderWidth: 3\n    },\n    source: {\n      uri: apiConfig.baseUrl + \"/api/files/avatars/\" + item.avatar\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }) : React.createElement(Avatar, {\n    size: \"xlarge\",\n    containerStyle: {\n      borderColor: \"white\",\n      borderWidth: 3\n    },\n    title: item.firstname.charAt(0).concat(item.lastname.charAt(0)).toUpperCase(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"briefcase\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginHorizontal: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, item.jobTitle, \" chez \", item.organisation)), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"school\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginHorizontal: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Promotion \", item.promo)), React.createElement(Divider, {\n    style: {\n      marginVertical: 20,\n      backgroundColor: \"grey\",\n      borderWidth: 1,\n      width: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"justify\",\n      flex: 1,\n      marginEnd: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, item.description)), React.createElement(Divider, {\n    style: {\n      marginVertical: 20,\n      backgroundColor: \"grey\",\n      borderWidth: 1,\n      width: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"at\",\n    size: 20,\n    color: \"grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      marginStart: 8,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, item.email))), React.createElement(View, {\n    style: {\n      borderRadius: 50,\n      shadowColor: \"black\",\n      shadowOffset: {\n        width: 0,\n        height: 0\n      },\n      shadowOpacity: 0.5,\n      shadowRadius: 12,\n      position: \"absolute\",\n      alignSelf: \"center\",\n      flexDirection: \"row\",\n      top: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: navigation.goBack,\n    containerStyle: {\n      margin: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    size: 20,\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  })), item._id !== auth.user._id && React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      var a = auth == null ? void 0 : auth.user.conversations.filter(function (c) {\n        return c.interlocutor_id == item._id;\n      });\n\n      if (a.length > 0) {\n        navigation.navigate(\"Messages\", {\n          screen: \"Room\",\n          params: {\n            title: fullname,\n            conversation_id: a[0].conversation_id\n          }\n        });\n      } else dispatch(showOverlay({\n        form: {\n          action: startConversation,\n          inputName: \"text\",\n          actionParams: {\n            recipient: item._id\n          },\n          message: \"Demarrer une conversation avec \" + _.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname)\n        },\n        redirect: \"Messages\"\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"message-outline\",\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default PeopleReadScreen;\nvar styles = StyleSheet.create({\n  container: {\n    minWidth: Dimensions.get(\"window\").width < 500 ? Dimensions.get(\"window\").width : 500,\n    maxWidth: 1000,\n    alignSelf: \"center\"\n  },\n  searchBarContainer: {\n    padding: 8,\n    backgroundColor: \"white\",\n    borderColor: \"lightgrey\",\n    margin: 12,\n    borderRadius: 4,\n    borderWidth: 1\n  },\n  FlatList: {\n    backgroundColor: \"white\",\n    borderColor: \"lightgrey\",\n    borderWidth: 1,\n    margin: 12,\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/People/PeopleReadScreen.js"],"names":["React","useDispatch","useSelector","Avatar","Divider","Icon","Button","LinearGradient","theme","_","showOverlay","startConversation","apiConfig","TouchableOpacity","PeopleReadScreen","route","navigation","state","auth","dispatch","item","params","fullname","capitalize","firstname","lastname","styles","container","flex","colors","primary","secondary","flexDirection","marginBottom","paddingVertical","paddingHorizontal","borderRadius","alignContent","justifyContent","fontSize","color","grey5","fontWeight","professor","grey4","paddingLeft","administration","avatar","borderColor","borderWidth","uri","baseUrl","charAt","concat","toUpperCase","alignItems","textAlignVertical","marginHorizontal","jobTitle","organisation","promo","marginVertical","backgroundColor","width","textAlign","marginEnd","description","marginStart","email","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","position","alignSelf","top","goBack","margin","_id","user","a","conversations","filter","c","interlocutor_id","length","navigate","screen","title","conversation_id","form","action","inputName","actionParams","recipient","message","redirect","StyleSheet","create","minWidth","Dimensions","get","maxWidth","searchBarContainer","padding","FlatList"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { View, Text, ScrollView, StyleSheet, Dimensions } from \"react-native\";\nimport { Avatar, Divider, Icon, Button } from \"react-native-elements\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport theme from \"../../Theme.json\";\nimport _ from \"lodash\";\nimport { showOverlay } from \"../../actions/overlayAction\";\nimport { startConversation } from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nconst PeopleReadScreen = ({ route, navigation }) => {\n  const { auth } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const { item } = route.params;\n  const fullname =\n    _.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname);\n\n  if (!item) return null;\n\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        style={{\n          flex: 1,\n        }}\n      >\n        <LinearGradient\n          colors={[theme.colors.primary, theme.colors.secondary]}\n          start={[0.25, 1]}\n          end={[0, 0]}\n          style={{\n            flexDirection: \"row\",\n            marginBottom: 20,\n            paddingVertical: 8,\n            paddingHorizontal: 16,\n            borderRadius: 5,\n          }}\n        >\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.colors.grey5 }}>\n              {_.capitalize(item.firstname)}\n            </Text>\n            <Text style={{ fontSize: 30, color: \"white\", fontWeight: \"bold\" }}>\n              {_.capitalize(item.lastname)}\n            </Text>\n            {item.professor && (\n              <Text style={{ color: theme.colors.grey4, paddingLeft: 4 }}>\n                Professeur\n              </Text>\n            )}\n            {item.administration && (\n              <Text style={{ color: theme.colors.grey4, paddingLeft: 4 }}>\n                Membre du corps administratif\n              </Text>\n            )}\n          </View>\n          {item.avatar ? (\n            <Avatar\n              size=\"xlarge\"\n              containerStyle={{\n                borderColor: \"white\",\n                borderWidth: 3,\n              }}\n              source={{\n                uri: `${apiConfig.baseUrl}/api/files/avatars/${item.avatar}`,\n              }}\n            />\n          ) : (\n            <Avatar\n              size=\"xlarge\"\n              containerStyle={{\n                borderColor: \"white\",\n                borderWidth: 3,\n              }}\n              title={item.firstname\n                .charAt(0)\n                .concat(item.lastname.charAt(0))\n                .toUpperCase()}\n            />\n          )}\n        </LinearGradient>\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Icon name=\"briefcase\" size={20} color=\"grey\" />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginHorizontal: 8,\n              flex: 1,\n            }}\n          >\n            {item.jobTitle} chez {item.organisation}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <Icon name=\"school\" size={20} color=\"grey\" />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginHorizontal: 8,\n              flex: 1,\n            }}\n          >\n            Promotion {item.promo}\n          </Text>\n        </View>\n        <Divider\n          style={{\n            marginVertical: 20,\n            backgroundColor: \"grey\",\n            borderWidth: 1,\n            width: 20,\n          }}\n        />\n        <View style={{ flexDirection: \"row\" }}>\n          <Text style={{ textAlign: \"justify\", flex: 1, marginEnd: 8 }}>\n            {item.description}\n          </Text>\n        </View>\n        <Divider\n          style={{\n            marginVertical: 20,\n            backgroundColor: \"grey\",\n            borderWidth: 1,\n            width: 20,\n          }}\n        />\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon name=\"at\" size={20} color=\"grey\" />\n          <Text\n            style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n          >\n            {item.email}\n          </Text>\n        </View>\n      </ScrollView>\n      <View\n        style={{\n          borderRadius: 50,\n          shadowColor: \"black\",\n          shadowOffset: { width: 0, height: 0 },\n          shadowOpacity: 0.5,\n          shadowRadius: 12,\n          position: \"absolute\",\n          alignSelf: \"center\",\n          flexDirection: \"row\",\n          top: 8,\n        }}\n      >\n        <TouchableOpacity\n          onPress={navigation.goBack}\n          containerStyle={{ margin: 8 }}\n        >\n          <Icon name=\"arrow-left\" size={20} color=\"white\" />\n        </TouchableOpacity>\n        {item._id !== auth.user._id && (\n          <TouchableOpacity\n            onPress={() => {\n              let a = auth?.user.conversations.filter(\n                (c) => c.interlocutor_id == item._id\n              );\n              if (a.length > 0) {\n                navigation.navigate(\"Messages\", {\n                  screen: \"Room\",\n                  params: {\n                    title: fullname,\n                    conversation_id: a[0].conversation_id,\n                  },\n                });\n              } else\n                dispatch(\n                  showOverlay({\n                    form: {\n                      action: startConversation,\n                      inputName: \"text\",\n                      actionParams: { recipient: item._id },\n                      message:\n                        \"Demarrer une conversation avec \" +\n                        _.capitalize(item.firstname) +\n                        \" \" +\n                        _.capitalize(item.lastname),\n                    },\n                    redirect: \"Messages\",\n                  })\n                );\n            }}\n          >\n            <Icon name=\"message-outline\" color=\"white\" />\n          </TouchableOpacity>\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default PeopleReadScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    minWidth:\n      Dimensions.get(\"window\").width < 500\n        ? Dimensions.get(\"window\").width\n        : 500,\n    maxWidth: 1000,\n    alignSelf: \"center\",\n  },\n  searchBarContainer: {\n    padding: 8,\n    backgroundColor: \"white\",\n    borderColor: \"lightgrey\",\n    margin: 12,\n    borderRadius: 4,\n    borderWidth: 1,\n  },\n  FlatList: {\n    backgroundColor: \"white\",\n    borderColor: \"lightgrey\",\n    borderWidth: 1,\n    margin: 12,\n    borderRadius: 4,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}