{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from\"react\";import\"react-native-gesture-handler\";import{Provider,useSelector,shallowEqual}from\"react-redux\";import View from\"react-native-web/dist/exports/View\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import{store}from\"./store/index\";import{NavigationContainer}from\"@react-navigation/native\";import{createBottomTabNavigator}from\"@react-navigation/bottom-tabs\";import{createDrawerNavigator}from\"@react-navigation/drawer\";import{ThemeProvider,Icon}from\"react-native-elements\";import Actvity from\"./components/MyJobsScreen\";import Post from\"./components/PostScreen\";import Jobs from\"./components/JobsScreen\";import Profile from\"./components/ProfileScreen\";import People from\"./components/PeopleScreen\";import Messages from\"./components/MessagesScreen\";import LogIn from\"./components/LogInScreen\";import SignUp from\"./components/SignUpScreen\";import Notifier from\"./components/Notifier\";import theme from\"./Theme.json\";import{navigationRef,isMountedRef}from\"./RootNavigation\";var BottomTab=createBottomTabNavigator();var Drawer=createDrawerNavigator();var AuthStack=function AuthStack(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),signUp=_useState2[0],setSignUp=_useState2[1];var switchPanel=function switchPanel(){setSignUp(!signUp);};if(signUp){return React.createElement(SignUp,{switchPanel:switchPanel});}else{return React.createElement(LogIn,{switchPanel:switchPanel});}};var MainStack=function MainStack(){return React.createElement(BottomTab.Navigator,{initialRouteName:\"People\",screenOptions:function screenOptions(_ref){var route=_ref.route;return{tabBarIcon:function tabBarIcon(_ref2){var focused=_ref2.focused,color=_ref2.color,size=_ref2.size;var iconName;switch(route.name){case\"Home\":iconName=\"home\";break;case\"Post\":iconName=\"plus-box\";break;case\"Jobs\":iconName=\"briefcase\";break;case\"People\":iconName=\"account-group\";break;case\"Messages\":iconName=\"forum\";break;default:break;}return React.createElement(Icon,{name:iconName,size:size,color:color});}};},tabBarOptions:{activeTintColor:theme.colors.primary,inactiveTintColor:\"gray\"}},React.createElement(BottomTab.Screen,{name:\"People\",component:People,options:{title:\"Alumnis\"}}),React.createElement(BottomTab.Screen,{name:\"Jobs\",component:Jobs,options:{title:\"Emplois\"}}),React.createElement(BottomTab.Screen,{name:\"Post\",component:Post,options:{title:\"Poster\"}}),React.createElement(BottomTab.Screen,{name:\"Messages\",component:Messages,options:{title:\"Messages\"}}));};var AppStack=function AppStack(){var isLoggedIn=useSelector(function(state){return state.auth.isLoggedIn;},shallowEqual);return React.createElement(View,{style:{alignSelf:\"center\",flex:1,maxWidth:500}},isLoggedIn?React.createElement(Drawer.Navigator,{initialRouteName:\"Main\",headerMode:\"screen\"},React.createElement(Drawer.Screen,{name:\"Main\",component:MainStack,options:{title:\"Acceuil\"}}),React.createElement(Drawer.Screen,{name:\"Profile\",component:Profile,options:{title:\"Mon profile\"}}),React.createElement(Drawer.Screen,{name:\"MyJobs\",component:Actvity,options:{title:\"Mes offres d'emplois\"}})):React.createElement(AuthStack,null));};export default App=function App(){React.useEffect(function(){isMountedRef.current=true;return function(){return isMountedRef.current=false;};},[]);return React.createElement(Provider,{store:store},React.createElement(ThemeProvider,{theme:theme},React.createElement(SafeAreaView,{style:{flex:1,flexDirection:\"row\",justifyContent:\"center\"}},React.createElement(NavigationContainer,{ref:navigationRef},React.createElement(AppStack,null),React.createElement(Notifier,null)))));};","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/App.js"],"names":["React","useState","Provider","useSelector","shallowEqual","store","NavigationContainer","createBottomTabNavigator","createDrawerNavigator","ThemeProvider","Icon","Actvity","Post","Jobs","Profile","People","Messages","LogIn","SignUp","Notifier","theme","navigationRef","isMountedRef","BottomTab","Drawer","AuthStack","signUp","setSignUp","switchPanel","MainStack","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","colors","primary","inactiveTintColor","title","AppStack","isLoggedIn","state","auth","alignSelf","flex","maxWidth","App","useEffect","current","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"react-native-gesture-handler\";\nimport { Provider, useSelector, shallowEqual } from \"react-redux\";\nimport { View, SafeAreaView } from \"react-native\";\nimport { store } from \"./store/index\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { ThemeProvider, Icon } from \"react-native-elements\";\nimport Actvity from \"./components/MyJobsScreen\";\nimport Post from \"./components/PostScreen\";\nimport Jobs from \"./components/JobsScreen\";\nimport Profile from \"./components/ProfileScreen\";\nimport People from \"./components/PeopleScreen\";\nimport Messages from \"./components/MessagesScreen\";\nimport LogIn from \"./components/LogInScreen\";\nimport SignUp from \"./components/SignUpScreen\";\nimport Notifier from \"./components/Notifier\";\nimport theme from \"./Theme.json\";\nimport { navigationRef, isMountedRef } from \"./RootNavigation\";\n\nconst BottomTab = createBottomTabNavigator();\nconst Drawer = createDrawerNavigator();\n\nconst AuthStack = () => {\n  const [signUp, setSignUp] = useState(false);\n  const switchPanel = () => {\n    setSignUp(!signUp);\n  };\n  if (signUp) {\n    return <SignUp switchPanel={switchPanel} />;\n  } else {\n    return <LogIn switchPanel={switchPanel} />;\n  }\n};\n\nconst MainStack = () => {\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"People\"\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          switch (route.name) {\n            case \"Home\":\n              iconName = \"home\";\n              break;\n            case \"Post\":\n              iconName = \"plus-box\";\n              break;\n            case \"Jobs\":\n              iconName = \"briefcase\";\n              break;\n            case \"People\":\n              iconName = \"account-group\";\n              break;\n            case \"Messages\":\n              iconName = \"forum\";\n              break;\n            default:\n              break;\n          }\n\n          return <Icon name={iconName} size={size} color={color} />;\n        }\n      })}\n      tabBarOptions={{\n        activeTintColor: theme.colors.primary,\n        inactiveTintColor: \"gray\"\n      }}\n    >\n      <BottomTab.Screen\n        name=\"People\"\n        component={People}\n        options={{ title: \"Alumnis\" }}\n      />\n      <BottomTab.Screen\n        name=\"Jobs\"\n        component={Jobs}\n        options={{ title: \"Emplois\" }}\n      />\n      <BottomTab.Screen\n        name=\"Post\"\n        component={Post}\n        options={{ title: \"Poster\" }}\n      />\n      <BottomTab.Screen\n        name=\"Messages\"\n        component={Messages}\n        options={{ title: \"Messages\" }}\n      />\n    </BottomTab.Navigator>\n  );\n};\n\nconst AppStack = () => {\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn, shallowEqual);\n  return (\n    <View\n      style={{\n        alignSelf: \"center\",\n        flex: 1,\n        maxWidth: 500\n      }}\n    >\n      {isLoggedIn ? (\n        <Drawer.Navigator initialRouteName=\"Main\" headerMode=\"screen\">\n          <Drawer.Screen\n            name=\"Main\"\n            component={MainStack}\n            options={{ title: \"Acceuil\" }}\n          />\n          <Drawer.Screen\n            name=\"Profile\"\n            component={Profile}\n            options={{ title: \"Mon profile\" }}\n          />\n          <Drawer.Screen\n            name=\"MyJobs\"\n            component={Actvity}\n            options={{ title: \"Mes offres d'emplois\" }}\n          />\n        </Drawer.Navigator>\n      ) : (\n        <AuthStack />\n      )}\n    </View>\n  );\n};\n\nexport default App = () => {\n  React.useEffect(() => {\n    isMountedRef.current = true;\n\n    return () => (isMountedRef.current = false);\n  }, []);\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <SafeAreaView\n          style={{\n            flex: 1,\n            flexDirection: \"row\",\n            justifyContent: \"center\"\n          }}\n        >\n          <NavigationContainer ref={navigationRef}>\n            <AppStack />\n            <Notifier />\n          </NavigationContainer>\n        </SafeAreaView>\n      </ThemeProvider>\n    </Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}