{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect,useCallback,useContext}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import FlatList from\"react-native-web/dist/exports/FlatList\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import RefreshControl from\"react-native-web/dist/exports/RefreshControl\";import TextInput from\"react-native-web/dist/exports/TextInput\";import{Avatar,ThemeContext,Button,Icon}from\"react-native-elements\";import _ from\"lodash\";import\"moment/locale/fr\";import moment from\"moment\";import{fetchUsers}from\"../../actions/usersActions\";import{fetchConversations}from\"../../actions/chatActions\";import{apiConfig}from\"../../config\";var Item=function Item(_ref){var _item$lastMessage,_item$participants$3,_item$participants$4,_item$participants$5,_item$participants$6;var item=_ref.item,navigation=_ref.navigation,auth=_ref.auth;var listParticipants=function listParticipants(){var _item$participants,_item$participants3;_.remove(item.participants,function(participant){return participant._id===(auth==null?void 0:auth.user._id);});if(((_item$participants=item.participants)==null?void 0:_item$participants.length)>1){var _item$participants2;var participantsList=(_item$participants2=item.participants)==null?void 0:_item$participants2.map(function(participant){return _.capitalize(participant.firstname);});return participantsList.toString().replace(\",\",\", \");}else if(((_item$participants3=item.participants)==null?void 0:_item$participants3.length)===1){var _item$participants$,_item$participants$2;return _.capitalize((_item$participants$=item.participants[0])==null?void 0:_item$participants$.firstname).concat(\" \",_.capitalize((_item$participants$2=item.participants[0])==null?void 0:_item$participants$2.lastname));}else{return\"Compte supprimÃ©\";}};var title=listParticipants();var incoming=((_item$lastMessage=item.lastMessage)==null?void 0:_item$lastMessage.sender)!==(auth==null?void 0:auth.user._id);if(!item)return null;return React.createElement(TouchableOpacity,{onPress:function onPress(){return navigation.navigate(\"Room\",{title:title,conversation_id:item._id});}},React.createElement(View,{style:{paddingHorizontal:8,paddingVertical:8,borderBottomColor:\"white\",borderBottomWidth:3,backgroundColor:\"white\"}},React.createElement(View,{style:{flexDirection:\"row\"}},React.createElement(View,{style:{alignContent:\"center\",justifyContent:\"center\",paddingRight:8}},((_item$participants$3=item.participants[0])==null?void 0:_item$participants$3.avatar)?React.createElement(Avatar,{source:{uri:apiConfig.baseUrl+\"/api/files/avatars/\"+((_item$participants$4=item.participants[0])==null?void 0:_item$participants$4.avatar)},size:\"medium\"}):React.createElement(Avatar,{size:\"medium\",title:(_item$participants$5=item.participants[0])==null?void 0:_item$participants$5.firstname[0].concat((_item$participants$6=item.participants[0])==null?void 0:_item$participants$6.lastname[0]).toUpperCase()})),React.createElement(View,{style:{flex:1,justifyContent:\"flex-start\"}},React.createElement(View,{style:{flexDirection:\"row\",justifyContent:\"space-between\"}},React.createElement(Text,{style:{textAlignVertical:\"bottom\",fontSize:16,fontWeight:\"bold\"}},title),React.createElement(Text,{color:\"grey\",style:{color:\"grey\",fontSize:10,textAlignVertical:\"bottom\"}},_.capitalize(moment(item.messages[0].sentAt).locale(\"fr\").fromNow()))),React.createElement(View,{style:{flexDirection:\"row\",alignItems:\"center\"}},React.createElement(Text,{style:{textAlignVertical:\"center\",fontSize:14,flex:1,fontWeight:item.messages[0]&&incoming?100:800}},item.messages[0].sender===(auth==null?void 0:auth.user._id)&&\"Vous: \",item.messages[0].text,item.readAck.message_id===messages[0]._id&&!incoming&&\"Lu il y a \"+moment(item.readAck.timestamp).locale(\"fr\").fromNow()))))));};var ChatLobbyScreen=function ChatLobbyScreen(_ref2){var navigation=_ref2.navigation;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),refreshing=_useState2[0],setRefreshing=_useState2[1];var _useContext=useContext(ThemeContext),theme=_useContext.theme;var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state;}),chat=_useSelector.chat,auth=_useSelector.auth;useEffect(function(){function fetchData(){dispatch(fetchConversations());}fetchData();},[]);var onRefresh=useCallback(function(){setRefreshing(true);dispatch(fetchConversations());setRefreshing(false);},[refreshing]);return React.createElement(View,{style:{flex:1}},chat.isLoaded?chat.conversations.length>0?React.createElement(FlatList,{data:chat.conversations,renderItem:function renderItem(_ref3){var item=_ref3.item;return React.createElement(Item,{item:item,auth:auth,navigation:navigation,theme:theme,dispatch:dispatch});},keyExtractor:function keyExtractor(item){return item._id;},refreshControl:React.createElement(RefreshControl,{refreshing:refreshing,onRefresh:onRefresh})}):React.createElement(View,{style:{flex:1,alignContent:\"center\",justifyContent:\"center\"}},React.createElement(Text,{style:{textAlign:\"center\",color:theme.colors.grey3}},\"Aucune conversation\"),React.createElement(Button,{title:\"Rafraichir\",type:\"clear\",onPress:function onPress(){return dispatch(fetchConversations());}})):React.createElement(View,{style:{flex:1,alignContent:\"center\",justifyContent:\"center\"}},React.createElement(ActivityIndicator,{size:\"large\"})));};export default ChatLobbyScreen;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/Messages/MessagesLobbyScreen.js"],"names":["React","useState","useEffect","useCallback","useContext","useDispatch","useSelector","Avatar","ThemeContext","Button","Icon","_","moment","fetchUsers","fetchConversations","apiConfig","Item","item","navigation","auth","listParticipants","remove","participants","participant","_id","user","length","participantsList","map","capitalize","firstname","toString","replace","concat","lastname","title","incoming","lastMessage","sender","navigate","conversation_id","paddingHorizontal","paddingVertical","borderBottomColor","borderBottomWidth","backgroundColor","flexDirection","alignContent","justifyContent","paddingRight","avatar","uri","baseUrl","toUpperCase","flex","textAlignVertical","fontSize","fontWeight","color","messages","sentAt","locale","fromNow","alignItems","text","readAck","message_id","timestamp","ChatLobbyScreen","refreshing","setRefreshing","theme","dispatch","state","chat","fetchData","onRefresh","isLoaded","conversations","textAlign","colors","grey3"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  View,\n  Text,\n  ActivityIndicator,\n  FlatList,\n  TouchableOpacity,\n  RefreshControl,\n  TextInput,\n} from \"react-native\";\nimport { Avatar, ThemeContext, Button, Icon } from \"react-native-elements\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport { fetchConversations } from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\n\nconst Item = ({ item, navigation, auth }) => {\n  const listParticipants = () => {\n    _.remove(\n      item.participants,\n      (participant) => participant._id === auth?.user._id\n    );\n\n    if (item.participants?.length > 1) {\n      const participantsList = item.participants?.map((participant) =>\n        _.capitalize(participant.firstname)\n      );\n      return participantsList.toString().replace(\",\", \", \");\n    } else if (item.participants?.length === 1) {\n      return _.capitalize(item.participants[0]?.firstname).concat(\n        \" \",\n        _.capitalize(item.participants[0]?.lastname)\n      );\n    } else {\n      return \"Compte supprimÃ©\";\n    }\n  };\n\n  const title = listParticipants();\n\n  const incoming = item.lastMessage?.sender !== auth?.user._id;\n\n  if (!item) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={() =>\n        navigation.navigate(\"Room\", {\n          title,\n          conversation_id: item._id,\n        })\n      }\n    >\n      <View\n        style={{\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          borderBottomColor: \"white\",\n          borderBottomWidth: 3,\n          backgroundColor: \"white\",\n        }}\n      >\n        <View style={{ flexDirection: \"row\" }}>\n          <View\n            style={{\n              alignContent: \"center\",\n              justifyContent: \"center\",\n              paddingRight: 8,\n            }}\n          >\n            {item.participants[0]?.avatar ? (\n              <Avatar\n                source={{\n                  uri: `${apiConfig.baseUrl}/api/files/avatars/${item.participants[0]?.avatar}`,\n                }}\n                size=\"medium\"\n              />\n            ) : (\n              <Avatar\n                size=\"medium\"\n                title={item.participants[0]?.firstname[0]\n                  .concat(item.participants[0]?.lastname[0])\n                  .toUpperCase()}\n              />\n            )}\n          </View>\n          <View\n            style={{\n              flex: 1,\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  fontSize: 16,\n                  fontWeight: \"bold\",\n                }}\n              >\n                {title}\n              </Text>\n              <Text\n                color=\"grey\"\n                style={{\n                  color: \"grey\",\n                  fontSize: 10,\n                  textAlignVertical: \"bottom\",\n                }}\n              >\n                {_.capitalize(\n                  moment(item.messages[0].sentAt).locale(\"fr\").fromNow()\n                )}\n              </Text>\n            </View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Text\n                style={{\n                  textAlignVertical: \"center\",\n                  fontSize: 14,\n                  flex: 1,\n                  fontWeight: item.messages[0] && incoming ? 100 : 800,\n                }}\n              >\n                {item.messages[0].sender === auth?.user._id && \"Vous: \"}\n                {item.messages[0].text}\n                {item.readAck.message_id === messages[0]._id &&\n                  !incoming &&\n                  `Lu il y a ${moment(item.readAck.timestamp)\n                    .locale(\"fr\")\n                    .fromNow()}`}\n              </Text>\n            </View>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst ChatLobbyScreen = ({ navigation }) => {\n  const [refreshing, setRefreshing] = useState(false);\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const { chat, auth } = useSelector((state) => state);\n\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchConversations());\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    dispatch(fetchConversations());\n    setRefreshing(false);\n  }, [refreshing]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {chat.isLoaded ? (\n        chat.conversations.length > 0 ? (\n          <FlatList\n            data={chat.conversations}\n            renderItem={({ item }) => (\n              <Item\n                item={item}\n                auth={auth}\n                navigation={navigation}\n                theme={theme}\n                dispatch={dispatch}\n              />\n            )}\n            keyExtractor={(item) => item._id}\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n          />\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text style={{ textAlign: \"center\", color: theme.colors.grey3 }}>\n              Aucune conversation\n            </Text>\n            <Button\n              title=\"Rafraichir\"\n              type=\"clear\"\n              onPress={() => dispatch(fetchConversations())}\n            />\n          </View>\n        )\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default ChatLobbyScreen;\n"]},"metadata":{},"sourceType":"module"}