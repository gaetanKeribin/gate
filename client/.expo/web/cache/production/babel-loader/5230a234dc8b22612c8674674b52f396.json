{"ast":null,"code":"import React,{useContext}from\"react\";import{Icon,ThemeContext}from\"react-native-elements\";import{connect}from\"react-redux\";import{logOut as _logOut}from\"../actions/authActions\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import Platform from\"react-native-web/dist/exports/Platform\";import Constants from\"expo-constants\";import{navigate}from\"../RootNavigation\";var AppNavbar=function AppNavbar(_ref){var navigation=_ref.navigation,leftButton=_ref.leftButton,title=_ref.title,logOut=_ref.logOut,noRightButton=_ref.noRightButton;var _useContext=useContext(ThemeContext),theme=_useContext.theme;var LeftButtonComponent=function LeftButtonComponent(){switch(leftButton){case\"profile\":return React.createElement(Icon,{name:\"menu\",onPress:function onPress(){return navigation.openDrawer();},color:theme.colors.primary});case\"back\":return React.createElement(Icon,{name:\"arrow-left\",color:theme.colors.primary,onPress:function onPress(){return navigate(\"Main\");}});default:return React.createElement(Icon,{name:\"menu\",onPress:function onPress(){return navigation.openDrawer();},color:theme.colors.primary});}};var CenterComponent=function CenterComponent(){return React.createElement(View,null,React.createElement(Text,{style:{color:theme.colors.primary,fontSize:20,textAlign:\"center\"}},title));};var RightComponent=function RightComponent(){if(noRightButton){return React.createElement(View,null);}else{return React.createElement(View,{style:{flexDirection:\"row\"}},React.createElement(Icon,{name:\"logout\",color:theme.colors.grey0,containerStyle:{marginHorizontal:8},onPress:function onPress(){return logOut();}}));}};return React.createElement(View,{style:{flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\",paddingTop:Platform.OS===\"web\"?10:Constants.statusBarHeight,paddingHorizontal:10,paddingBottom:8,backgroundColor:\"white\",borderBottomColor:\"lightgrey\",borderBottomWidth:1}},React.createElement(LeftButtonComponent,null),React.createElement(CenterComponent,null),React.createElement(RightComponent,null));};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{logOut:function logOut(){return dispatch(_logOut());}};};export default connect(mapStateToProps,mapDispatchToProps)(AppNavbar);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/AppNavbar.js"],"names":["React","useContext","Icon","ThemeContext","connect","logOut","Constants","navigate","AppNavbar","navigation","leftButton","title","noRightButton","theme","LeftButtonComponent","openDrawer","colors","primary","CenterComponent","color","fontSize","textAlign","RightComponent","flexDirection","grey0","marginHorizontal","justifyContent","alignItems","paddingTop","Platform","OS","statusBarHeight","paddingHorizontal","paddingBottom","backgroundColor","borderBottomColor","borderBottomWidth","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { Icon, ThemeContext } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport { logOut } from \"../actions/authActions\";\nimport { View, Text, Platform } from \"react-native\";\nimport Constants from \"expo-constants\";\nimport { navigate } from \"../RootNavigation\";\n\nconst AppNavbar = ({\n  navigation,\n  leftButton,\n  title,\n  logOut,\n  noRightButton,\n}) => {\n  const { theme } = useContext(ThemeContext);\n\n  const LeftButtonComponent = () => {\n    switch (leftButton) {\n      case \"profile\":\n        return (\n          <Icon\n            name=\"menu\"\n            onPress={() => navigation.openDrawer()}\n            color={theme.colors.primary}\n          />\n        );\n      case \"back\":\n        return (\n          <Icon\n            name=\"arrow-left\"\n            color={theme.colors.primary}\n            onPress={() => navigate(\"Main\")}\n          />\n        );\n      default:\n        return (\n          <Icon\n            name=\"menu\"\n            onPress={() => navigation.openDrawer()}\n            color={theme.colors.primary}\n          />\n        );\n    }\n  };\n\n  const CenterComponent = () => {\n    return (\n      <View>\n        <Text\n          style={{\n            color: theme.colors.primary,\n            fontSize: 20,\n            textAlign: \"center\",\n          }}\n        >\n          {title}\n        </Text>\n      </View>\n    );\n  };\n\n  const RightComponent = () => {\n    if (noRightButton) {\n      return <View></View>;\n    } else {\n      return (\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon\n            name=\"logout\"\n            color={theme.colors.grey0}\n            containerStyle={{ marginHorizontal: 8 }}\n            onPress={() => logOut()}\n          />\n        </View>\n      );\n    }\n  };\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        paddingTop: Platform.OS === \"web\" ? 10 : Constants.statusBarHeight,\n        paddingHorizontal: 10,\n        paddingBottom: 8,\n        backgroundColor: \"white\",\n        borderBottomColor: \"lightgrey\",\n        borderBottomWidth: 1,\n      }}\n    >\n      <LeftButtonComponent />\n      <CenterComponent />\n      <RightComponent />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logOut: () => dispatch(logOut()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavbar);\n"]},"metadata":{},"sourceType":"module"}