{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState,useContext}from\"react\";import{connect}from\"react-redux\";import{Icon,Button,Input,ThemeContext,Overlay}from\"react-native-elements\";import View from\"react-native-web/dist/exports/View\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Text from\"react-native-web/dist/exports/Text\";import{updateUser as _updateUser,deleteAccount as _deleteAccount,updateUserPassword as _updateUserPassword}from\"../actions/authActions\";var ProfileEditScreen=function ProfileEditScreen(_ref){var updateUser=_ref.updateUser,deleteAccount=_ref.deleteAccount,auth=_ref.auth,updateUserPassword=_ref.updateUserPassword;var _useContext=useContext(ThemeContext),theme=_useContext.theme;var _useState=useState(auth.user.description),_useState2=_slicedToArray(_useState,2),desc=_useState2[0],setDesc=_useState2[1];var _useState3=useState(auth.user.email),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(auth.user.jobTitle),_useState6=_slicedToArray(_useState5,2),jobTitle=_useState6[0],setJobTitle=_useState6[1];var _useState7=useState(auth.user.organisation),_useState8=_slicedToArray(_useState7,2),organisation=_useState8[0],setOrganisation=_useState8[1];var _useState9=useState(\"\"+auth.user.promo),_useState10=_slicedToArray(_useState9,2),promo=_useState10[0],setPromo=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),password=_useState12[0],setPassword=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),confirmation=_useState14[0],setConfirmation=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),showPasswordForm=_useState16[0],setShowPasswordForm=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),showPasswordEditForm=_useState18[0],setShowPasswordEditForm=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),passwordError=_useState20[0],setPasswordError=_useState20[1];var _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),newPassword=_useState22[0],setNewPassword=_useState22[1];var onEditProfile=function onEditProfile(){updateUser(_objectSpread({},auth.user,{description:desc,email:email,jobTitle:jobTitle,organisation:organisation,promo:promo}));};var onChangePassword=function onChangePassword(){if(newPassword.length<8){return setPasswordError(\"Choisissez un mot de passe d'au moins 8 caractÃ¨res.\");}else if(newPassword!==confirmation){return setPasswordError(\"Les mots de passe ne correspondent pas.\");}updateUserPassword(password,newPassword);};return React.createElement(View,{style:{flex:1,alignContent:\"space-between\",paddingVertical:8,paddingHorizontal:8,backgroundColor:\"white\"}},React.createElement(ScrollView,null,React.createElement(Input,{label:\"Promotion\",value:promo,onChangeText:function onChangeText(text){return setPromo(text);},leftIcon:React.createElement(Icon,{name:\"school\"})}),React.createElement(Input,{value:organisation,label:\"Organisation\",onChangeText:function onChangeText(text){return setOrganisation(text);},leftIcon:React.createElement(Icon,{name:\"domain\"})}),React.createElement(Input,{value:jobTitle,onChangeText:function onChangeText(text){return setJobTitle(text);},label:\"Profession\",leftIcon:React.createElement(Icon,{name:\"briefcase\"})}),React.createElement(Input,{label:\"Description\",value:desc,multiline:true,numberOfLines:8,onChangeText:function onChangeText(text){return setDesc(text);}}),React.createElement(Input,{label:\"email\",value:email,leftIcon:React.createElement(Icon,{name:\"email\"}),onChangeText:function onChangeText(text){return setEmail(text);}})),React.createElement(View,{style:{paddingTop:8}},auth.updateUserError&&React.createElement(Text,{style:{color:\"red\",textAlign:\"center\"}},auth.updateUserError),React.createElement(Button,{title:\"Valider les changements\",onPress:function onPress(){return onEditProfile();},buttonStyle:{backgroundColor:theme.colors.success}}),React.createElement(Button,{title:\"Changer mon mot de passe\",onPress:function onPress(){return setShowPasswordEditForm(true);},buttonStyle:{backgroundColor:theme.colors.primary}}),React.createElement(Button,{title:\"Supprimer mon compte\",onPress:function onPress(){return setShowPasswordForm(true);},buttonStyle:{backgroundColor:theme.colors.error}})),React.createElement(Overlay,{isVisible:showPasswordEditForm,height:\"auto\",onBackdropPress:function onBackdropPress(){return setShowPasswordEditForm(false);}},React.createElement(View,null,React.createElement(Input,{placeholder:\"Mot de passe\",leftIcon:React.createElement(Icon,{name:\"lock\"}),label:\"Ancien mot de passe\",secureTextEntry:true,value:password,leftIconContainerStyle:{marginRight:12},containerStyle:{marginBottom:20,marginTop:8},onChangeText:function onChangeText(value){return setPassword(value);}}),React.createElement(Input,{placeholder:\"Mot de passe\",leftIcon:React.createElement(Icon,{name:\"lock\"}),label:\"Nouveau mot de passe\",secureTextEntry:true,value:newPassword,leftIconContainerStyle:{marginRight:12},containerStyle:{marginBottom:20,marginTop:8},onChangeText:function onChangeText(value){setPasswordError(\"\");setNewPassword(value);},errorMessage:passwordError}),React.createElement(Input,{placeholder:\"Mot de passe\",leftIcon:React.createElement(Icon,{name:confirmation===newPassword?\"check\":\"close\",color:confirmation===newPassword?\"green\":\"red\"}),label:\"Confirmation\",secureTextEntry:true,value:confirmation,leftIconContainerStyle:{marginRight:12},containerStyle:{marginBottom:40,marginTop:8},onChangeText:function onChangeText(value){return setConfirmation(value);}}),React.createElement(Button,{title:\"Valider\",onPress:function onPress(){return onChangePassword();},buttonStyle:{backgroundColor:theme.colors.primary},loading:auth.isUpdatingPassword}))),React.createElement(Overlay,{isVisible:showPasswordForm,height:\"auto\",onBackdropPress:function onBackdropPress(){return setShowPasswordForm(false);}},React.createElement(View,null,auth.deleteAccountError&&React.createElement(Text,{style:{color:\"red\",textAlign:\"center\"}},auth.deleteAccountError),React.createElement(Input,{placeholder:\"Mot de passe\",leftIcon:React.createElement(Icon,{name:\"lock\"}),label:\"Mot de passe\",secureTextEntry:true,value:password,leftIconContainerStyle:{marginRight:12},containerStyle:{marginBottom:20,marginTop:8},onChangeText:function onChangeText(value){return setPassword(value);}}),React.createElement(Button,{title:\"Supprimer mon compte\",onPress:function onPress(password){return deleteAccount(password);},buttonStyle:{backgroundColor:theme.colors.error},loading:auth.isDeletingAccount}))));};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateUser:function updateUser(user){return dispatch(_updateUser(user));},deleteAccount:function deleteAccount(password){return dispatch(_deleteAccount(password));},updateUserPassword:function updateUserPassword(password,newPassword){return dispatch(_updateUserPassword(password,newPassword));}};};export default connect(mapStateToProps,mapDispatchToProps)(ProfileEditScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/ProfileEditScreen.js"],"names":["React","useState","useContext","connect","Icon","Button","Input","ThemeContext","Overlay","updateUser","deleteAccount","updateUserPassword","ProfileEditScreen","auth","theme","user","description","desc","setDesc","email","setEmail","jobTitle","setJobTitle","organisation","setOrganisation","promo","setPromo","password","setPassword","confirmation","setConfirmation","showPasswordForm","setShowPasswordForm","showPasswordEditForm","setShowPasswordEditForm","passwordError","setPasswordError","newPassword","setNewPassword","onEditProfile","onChangePassword","length","flex","alignContent","paddingVertical","paddingHorizontal","backgroundColor","text","paddingTop","updateUserError","color","textAlign","colors","success","primary","error","marginRight","marginBottom","marginTop","value","isUpdatingPassword","deleteAccountError","isDeletingAccount","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Icon,\n  Button,\n  Input,\n  ThemeContext,\n  Overlay\n} from \"react-native-elements\";\nimport { View, ScrollView, Text } from \"react-native\";\nimport {\n  updateUser,\n  deleteAccount,\n  updateUserPassword\n} from \"../actions/authActions\";\n\nconst ProfileEditScreen = ({\n  updateUser,\n  deleteAccount,\n  auth,\n  updateUserPassword\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const [desc, setDesc] = useState(auth.user.description);\n  const [email, setEmail] = useState(auth.user.email);\n  const [jobTitle, setJobTitle] = useState(auth.user.jobTitle);\n  const [organisation, setOrganisation] = useState(auth.user.organisation);\n  const [promo, setPromo] = useState(`${auth.user.promo}`);\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [showPasswordForm, setShowPasswordForm] = useState(false);\n  const [showPasswordEditForm, setShowPasswordEditForm] = useState(false);\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n\n  const onEditProfile = () => {\n    updateUser({\n      ...auth.user,\n      description: desc,\n      email,\n      jobTitle,\n      organisation,\n      promo\n    });\n  };\n\n  const onChangePassword = () => {\n    if (newPassword.length < 8) {\n      return setPasswordError(\n        \"Choisissez un mot de passe d'au moins 8 caractÃ¨res.\"\n      );\n    } else if (newPassword !== confirmation) {\n      return setPasswordError(\"Les mots de passe ne correspondent pas.\");\n    }\n    updateUserPassword(password, newPassword);\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\"\n      }}\n    >\n      <ScrollView>\n        <Input\n          label=\"Promotion\"\n          value={promo}\n          onChangeText={text => setPromo(text)}\n          leftIcon={<Icon name=\"school\" />}\n        />\n        <Input\n          value={organisation}\n          label=\"Organisation\"\n          onChangeText={text => setOrganisation(text)}\n          leftIcon={<Icon name=\"domain\" />}\n        />\n        <Input\n          value={jobTitle}\n          onChangeText={text => setJobTitle(text)}\n          label=\"Profession\"\n          leftIcon={<Icon name=\"briefcase\" />}\n        />\n        <Input\n          label=\"Description\"\n          value={desc}\n          multiline\n          numberOfLines={8}\n          onChangeText={text => setDesc(text)}\n        />\n        <Input\n          label=\"email\"\n          value={email}\n          leftIcon={<Icon name=\"email\" />}\n          onChangeText={text => setEmail(text)}\n        />\n      </ScrollView>\n      <View style={{ paddingTop: 8 }}>\n        {auth.updateUserError && (\n          <Text style={{ color: \"red\", textAlign: \"center\" }}>\n            {auth.updateUserError}\n          </Text>\n        )}\n        <Button\n          title=\"Valider les changements\"\n          onPress={() => onEditProfile()}\n          buttonStyle={{ backgroundColor: theme.colors.success }}\n        />\n        <Button\n          title=\"Changer mon mot de passe\"\n          onPress={() => setShowPasswordEditForm(true)}\n          buttonStyle={{ backgroundColor: theme.colors.primary }}\n        />\n        <Button\n          title=\"Supprimer mon compte\"\n          onPress={() => setShowPasswordForm(true)}\n          buttonStyle={{ backgroundColor: theme.colors.error }}\n        />\n      </View>\n      <Overlay\n        isVisible={showPasswordEditForm}\n        height=\"auto\"\n        onBackdropPress={() => setShowPasswordEditForm(false)}\n      >\n        <View>\n          <Input\n            placeholder=\"Mot de passe\"\n            leftIcon={<Icon name=\"lock\" />}\n            label=\"Ancien mot de passe\"\n            secureTextEntry\n            value={password}\n            leftIconContainerStyle={{ marginRight: 12 }}\n            containerStyle={{ marginBottom: 20, marginTop: 8 }}\n            onChangeText={value => setPassword(value)}\n          />\n          <Input\n            placeholder=\"Mot de passe\"\n            leftIcon={<Icon name=\"lock\" />}\n            label=\"Nouveau mot de passe\"\n            secureTextEntry\n            value={newPassword}\n            leftIconContainerStyle={{ marginRight: 12 }}\n            containerStyle={{ marginBottom: 20, marginTop: 8 }}\n            onChangeText={value => {\n              setPasswordError(\"\");\n              setNewPassword(value);\n            }}\n            errorMessage={passwordError}\n          />\n          <Input\n            placeholder=\"Mot de passe\"\n            leftIcon={\n              <Icon\n                name={confirmation === newPassword ? \"check\" : \"close\"}\n                color={confirmation === newPassword ? \"green\" : \"red\"}\n              />\n            }\n            label=\"Confirmation\"\n            secureTextEntry\n            value={confirmation}\n            leftIconContainerStyle={{ marginRight: 12 }}\n            containerStyle={{ marginBottom: 40, marginTop: 8 }}\n            onChangeText={value => setConfirmation(value)}\n          />\n          <Button\n            title=\"Valider\"\n            onPress={() => onChangePassword()}\n            buttonStyle={{ backgroundColor: theme.colors.primary }}\n            loading={auth.isUpdatingPassword}\n          />\n        </View>\n      </Overlay>\n      <Overlay\n        isVisible={showPasswordForm}\n        height=\"auto\"\n        onBackdropPress={() => setShowPasswordForm(false)}\n      >\n        <View>\n          {auth.deleteAccountError && (\n            <Text style={{ color: \"red\", textAlign: \"center\" }}>\n              {auth.deleteAccountError}\n            </Text>\n          )}\n          <Input\n            placeholder=\"Mot de passe\"\n            leftIcon={<Icon name=\"lock\" />}\n            label=\"Mot de passe\"\n            secureTextEntry\n            value={password}\n            leftIconContainerStyle={{ marginRight: 12 }}\n            containerStyle={{ marginBottom: 20, marginTop: 8 }}\n            onChangeText={value => setPassword(value)}\n          />\n          <Button\n            title=\"Supprimer mon compte\"\n            onPress={password => deleteAccount(password)}\n            buttonStyle={{ backgroundColor: theme.colors.error }}\n            loading={auth.isDeletingAccount}\n          />\n        </View>\n      </Overlay>\n    </View>\n  );\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: user => dispatch(updateUser(user)),\n    deleteAccount: password => dispatch(deleteAccount(password)),\n    updateUserPassword: (password, newPassword) =>\n      dispatch(updateUserPassword(password, newPassword))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEditScreen);\n"]},"metadata":{},"sourceType":"module"}