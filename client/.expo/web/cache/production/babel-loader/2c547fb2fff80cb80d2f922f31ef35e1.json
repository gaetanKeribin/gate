{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useEffect,useContext,useState}from\"react\";import{connect}from\"react-redux\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import TextInput from\"react-native-web/dist/exports/TextInput\";import{Icon,ThemeContext,Button}from\"react-native-elements\";import{resetNotification}from\"../actions/notifyActions\";import*as RootNavigation from\"../RootNavigation.js\";import Constants from\"expo-constants\";import{TouchableOpacity}from\"react-native-gesture-handler\";var Notifier=function Notifier(_ref){var notification=_ref.notification,reset=_ref.reset;var _useState=useState(\"handleWrite\"),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useContext=useContext(ThemeContext),theme=_useContext.theme;notification.message&&setTimeout(function(){reset();console.log(notification.redirect);notification.redirect&&RootNavigation.navigate(notification.redirect,{});},notification.timeout);if(notification.format===\"partial\"){return;}else if(notification.format===\"full\"){return React.createElement(View,{style:{position:\"absolute\",height:Dimensions.get(\"window\").height,width:Dimensions.get(\"window\").width,backgroundColor:theme.colors.grey6,alignContent:\"center\",justifyContent:\"center\",alignItems:\"stretch\"}},React.createElement(TouchableOpacity,{containerStyle:{flex:1,minHeight:12},style:{flex:1},onPress:function onPress(){return reset();}}),React.createElement(View,{style:{flexDirection:\"row\",alignItems:\"center\",justifyContent:\"center\"}},React.createElement(TouchableOpacity,{containerStyle:{flex:1,flexShrink:1},style:{flex:1},onPress:function onPress(){return reset();}}),React.createElement(View,{style:{backgroundColor:\"white\",borderRadius:10,justifyContent:\"center\",alignItems:\"center\",paddingHorizontal:8,paddingVertical:12,elevation:8}},React.createElement(View,{style:{flexDirection:\"row\",alignItems:\"baseline\",justifyContent:\"space-between\",alignSelf:\"stretch\"}},React.createElement(Icon,{containerStyle:{marginBottom:8},size:20,name:notification.variant===\"success\"?\"check-circle-outline\":notification.variant===\"warning\"?\"alert-circle-outline\":notification.variant===\"error\"?\"close-circle-outline\":notification.icon,color:notification.variant===\"success\"?\"green\":notification.variant===\"warning\"?\"yellow\":notification.variant===\"error\"?\"red\":notification.variant===\"error\"?\"blue\":theme.colors.grey1}),React.createElement(Text,null,notification.title),React.createElement(Icon,{containerStyle:{marginBottom:8,alignSelf:\"flex-end\"},name:\"close\",size:20,color:theme.colors.grey1,onPress:function onPress(){return reset();}})),notification.message&&React.createElement(Text,{style:{fontSize:14}},notification.message)),React.createElement(TouchableOpacity,{containerStyle:{flex:1},style:{flex:1},onPress:function onPress(){return reset();}})),React.createElement(TouchableOpacity,{containerStyle:{flex:1,minHeight:12},style:{flex:1},onPress:function onPress(){return reset();}}));}else{return null;}};var mapStateToProps=function mapStateToProps(state){return{notification:state.notification};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{reset:function reset(){return dispatch(resetNotification());}};};export default connect(mapStateToProps,mapDispatchToProps)(Notifier);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/Notifier.js"],"names":["React","useEffect","useContext","useState","connect","Icon","ThemeContext","Button","resetNotification","RootNavigation","Constants","TouchableOpacity","Notifier","notification","reset","input","setInput","theme","message","setTimeout","console","log","redirect","navigate","timeout","format","position","height","Dimensions","get","width","backgroundColor","colors","grey6","alignContent","justifyContent","alignItems","flex","minHeight","flexDirection","flexShrink","borderRadius","paddingHorizontal","paddingVertical","elevation","alignSelf","marginBottom","variant","icon","grey1","title","fontSize","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { StyleSheet, Text, View, Dimensions, TextInput } from \"react-native\";\nimport { Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { resetNotification } from \"../actions/notifyActions\";\nimport * as RootNavigation from \"../RootNavigation.js\";\nimport Constants from \"expo-constants\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nconst Notifier = ({ notification, reset }) => {\n  const [input, setInput] = useState(\"handleWrite\");\n  const { theme } = useContext(ThemeContext);\n  notification.message &&\n    setTimeout(() => {\n      reset();\n      console.log(notification.redirect);\n\n      notification.redirect &&\n        RootNavigation.navigate(notification.redirect, {});\n    }, notification.timeout);\n\n  if (notification.format === \"partial\") {\n    return;\n  } else if (notification.format === \"full\") {\n    return (\n      <View\n        style={{\n          position: \"absolute\",\n          height: Dimensions.get(\"window\").height,\n          width: Dimensions.get(\"window\").width,\n          backgroundColor: theme.colors.grey6,\n          alignContent: \"center\",\n          justifyContent: \"center\",\n          alignItems: \"stretch\"\n        }}\n      >\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minHeight: 12 }}\n          style={{\n            flex: 1\n          }}\n          onPress={() => reset()}\n        />\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <TouchableOpacity\n            containerStyle={{ flex: 1, flexShrink: 1 }}\n            style={{\n              flex: 1\n            }}\n            onPress={() => reset()}\n          />\n          <View\n            style={{\n              backgroundColor: \"white\",\n              borderRadius: 10,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              paddingHorizontal: 8,\n              paddingVertical: 12,\n              elevation: 8\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"baseline\",\n                justifyContent: \"space-between\",\n                alignSelf: \"stretch\"\n              }}\n            >\n              <Icon\n                containerStyle={{ marginBottom: 8 }}\n                size={20}\n                name={\n                  notification.variant === \"success\"\n                    ? \"check-circle-outline\"\n                    : notification.variant === \"warning\"\n                    ? \"alert-circle-outline\"\n                    : notification.variant === \"error\"\n                    ? \"close-circle-outline\"\n                    : notification.icon\n                }\n                color={\n                  notification.variant === \"success\"\n                    ? \"green\"\n                    : notification.variant === \"warning\"\n                    ? \"yellow\"\n                    : notification.variant === \"error\"\n                    ? \"red\"\n                    : notification.variant === \"error\"\n                    ? \"blue\"\n                    : theme.colors.grey1\n                }\n              />\n              <Text>{notification.title}</Text>\n              <Icon\n                containerStyle={{ marginBottom: 8, alignSelf: \"flex-end\" }}\n                name=\"close\"\n                size={20}\n                color={theme.colors.grey1}\n                onPress={() => reset()}\n              />\n            </View>\n            {notification.message && (\n              <Text style={{ fontSize: 14 }}>{notification.message}</Text>\n            )}\n          </View>\n          <TouchableOpacity\n            containerStyle={{ flex: 1 }}\n            style={{\n              flex: 1\n            }}\n            onPress={() => reset()}\n          />\n        </View>\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minHeight: 12 }}\n          style={{\n            flex: 1\n          }}\n          onPress={() => reset()}\n        />\n      </View>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = state => ({\n  notification: state.notification\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    reset: () => dispatch(resetNotification())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifier);\n"]},"metadata":{},"sourceType":"module"}