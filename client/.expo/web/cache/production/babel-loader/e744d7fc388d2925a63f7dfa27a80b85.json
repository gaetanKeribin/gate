{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState,useRef}from\"react\";import View from\"react-native-web/dist/exports/View\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{Icon,Button,ThemeContext}from\"react-native-elements\";var SmallForm=function SmallForm(_ref){var form=_ref.form,dispatchRedirectReset=_ref.dispatchRedirectReset,theme=_ref.theme,dispatch=_ref.dispatch;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),inputValue=_useState2[0],setInputValue=_useState2[1];return React.createElement(View,{style:styles.root},form.message&&React.createElement(Text,{style:{fontSize:14,flexDirection:\"row\",alignItems:\"center\",justifyContent:\"center\",alignContent:\"center\",marginTop:8}},form.message),React.createElement(View,{style:{flexDirection:\"row\",alignItems:\"stretch\",marginTop:8}},React.createElement(TextInput,{value:inputValue,multiline:true,placeholder:\"Ecrivez ici.\",placeholderTextColor:\"grey\",onChangeText:function onChangeText(text){return setInputValue(text);},style:[theme.TextInput],textAlignVertical:\"top\"}),React.createElement(Button,{style:{},icon:React.createElement(Icon,{name:\"send\",size:20,color:inputValue?theme.colors.primary:theme.colors.grey2}),disabled:!inputValue,type:\"clear\",onPress:function onPress(){dispatch(form.action(_objectSpread(_defineProperty({},form.inputName,inputValue),form.actionParams)));dispatchRedirectReset();}})));};export default SmallForm;var styles=StyleSheet.create({root:{backgroundColor:\"white\",borderRadius:10,paddingHorizontal:12,paddingVertical:8,elevation:1,shadowColor:\"black\",shadowOffset:{width:0,height:0},shadowOpacity:0.5,shadowRadius:20},input:{height:40,textAlign:\"center\",marginHorizontal:8}});","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/CustomOverlay/SmallForm.js"],"names":["React","useState","useRef","Icon","Button","ThemeContext","SmallForm","form","dispatchRedirectReset","theme","dispatch","inputValue","setInputValue","styles","root","message","fontSize","flexDirection","alignItems","justifyContent","alignContent","marginTop","text","TextInput","colors","primary","grey2","action","inputName","actionParams","StyleSheet","create","backgroundColor","borderRadius","paddingHorizontal","paddingVertical","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","input","textAlign","marginHorizontal"],"mappings":"g6BAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,KAAwC,OAAxC,C,0OAEA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,YAAvB,KAA2C,uBAA3C,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAsD,IAAnDC,CAAAA,IAAmD,MAAnDA,IAAmD,CAA7CC,qBAA6C,MAA7CA,qBAA6C,CAAtBC,KAAsB,MAAtBA,KAAsB,CAAfC,QAAe,MAAfA,QAAe,eAClCT,QAAQ,CAAC,EAAD,CAD0B,wCAC/DU,UAD+D,eACnDC,aADmD,eAGtE,MACE,qBAAC,IAAD,EAAM,KAAK,CAAEC,MAAM,CAACC,IAApB,EACGP,IAAI,CAACQ,OAAL,EACC,oBAAC,IAAD,EACE,KAAK,CAAE,CACLC,QAAQ,CAAE,EADL,CAELC,aAAa,CAAE,KAFV,CAGLC,UAAU,CAAE,QAHP,CAILC,cAAc,CAAE,QAJX,CAKLC,YAAY,CAAE,QALT,CAMLC,SAAS,CAAE,CANN,CADT,EAUGd,IAAI,CAACQ,OAVR,CAFJ,CAeE,oBAAC,IAAD,EACE,KAAK,CAAE,CACLE,aAAa,CAAE,KADV,CAELC,UAAU,CAAE,SAFP,CAGLG,SAAS,CAAE,CAHN,CADT,EAOE,oBAAC,SAAD,EACE,KAAK,CAAEV,UADT,CAEE,SAAS,KAFX,CAGE,WAAW,CAAC,cAHd,CAIE,oBAAoB,CAAC,MAJvB,CAKE,YAAY,CAAE,sBAACW,IAAD,QAAUV,CAAAA,aAAa,CAACU,IAAD,CAAvB,EALhB,CAME,KAAK,CAAE,CAACb,KAAK,CAACc,SAAP,CANT,CAOE,iBAAiB,CAAC,KAPpB,EAPF,CAgBE,oBAAC,MAAD,EACE,KAAK,CAAE,EADT,CAEE,IAAI,CACF,oBAAC,IAAD,EACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAE,EAFR,CAGE,KAAK,CAAEZ,UAAU,CAAGF,KAAK,CAACe,MAAN,CAAaC,OAAhB,CAA0BhB,KAAK,CAACe,MAAN,CAAaE,KAH1D,EAHJ,CASE,QAAQ,CAAE,CAACf,UATb,CAUE,IAAI,CAAC,OAVP,CAWE,OAAO,CAAE,kBAAM,CACbD,QAAQ,CACNH,IAAI,CAACoB,MAAL,kCACGpB,IAAI,CAACqB,SADR,CACoBjB,UADpB,EAEKJ,IAAI,CAACsB,YAFV,EADM,CAAR,CAMArB,qBAAqB,GACtB,CAnBH,EAhBF,CAfF,CADF,CAwDD,CA3DD,CA6DA,cAAeF,CAAAA,SAAf,CAEA,GAAMO,CAAAA,MAAM,CAAGiB,UAAU,CAACC,MAAX,CAAkB,CAC/BjB,IAAI,CAAE,CACJkB,eAAe,CAAE,OADb,CAEJC,YAAY,CAAE,EAFV,CAGJC,iBAAiB,CAAE,EAHf,CAIJC,eAAe,CAAE,CAJb,CAKJC,SAAS,CAAE,CALP,CAMJC,WAAW,CAAE,OANT,CAOJC,YAAY,CAAE,CAAEC,KAAK,CAAE,CAAT,CAAYC,MAAM,CAAE,CAApB,CAPV,CAQJC,aAAa,CAAE,GARX,CASJC,YAAY,CAAE,EATV,CADyB,CAY/BC,KAAK,CAAE,CACLH,MAAM,CAAE,EADH,CAELI,SAAS,CAAE,QAFN,CAGLC,gBAAgB,CAAE,CAHb,CAZwB,CAAlB,CAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { View, TextInput, Text, StyleSheet } from \"react-native\";\nimport { Icon, Button, ThemeContext } from \"react-native-elements\";\n\nconst SmallForm = ({ form, dispatchRedirectReset, theme, dispatch }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  return (\n    <View style={styles.root}>\n      {form.message && (\n        <Text\n          style={{\n            fontSize: 14,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            alignContent: \"center\",\n            marginTop: 8,\n          }}\n        >\n          {form.message}\n        </Text>\n      )}\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"stretch\",\n          marginTop: 8,\n        }}\n      >\n        <TextInput\n          value={inputValue}\n          multiline\n          placeholder=\"Ecrivez ici.\"\n          placeholderTextColor=\"grey\"\n          onChangeText={(text) => setInputValue(text)}\n          style={[theme.TextInput]}\n          textAlignVertical=\"top\"\n        />\n        <Button\n          style={{}}\n          icon={\n            <Icon\n              name=\"send\"\n              size={20}\n              color={inputValue ? theme.colors.primary : theme.colors.grey2}\n            />\n          }\n          disabled={!inputValue}\n          type=\"clear\"\n          onPress={() => {\n            dispatch(\n              form.action({\n                [form.inputName]: inputValue,\n                ...form.actionParams,\n              })\n            );\n            dispatchRedirectReset();\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default SmallForm;\n\nconst styles = StyleSheet.create({\n  root: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    elevation: 1,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.5,\n    shadowRadius: 20,\n  },\n  input: {\n    height: 40,\n    textAlign: \"center\",\n    marginHorizontal: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}