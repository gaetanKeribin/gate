{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React from\"react\";import\"react-native-gesture-handler\";import{Provider,useSelector,shallowEqual,useDispatch}from\"react-redux\";import View from\"react-native-web/dist/exports/View\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import Platform from\"react-native-web/dist/exports/Platform\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import{store,persistor}from\"./store/index\";import{PersistGate}from\"redux-persist/integration/react\";import{NavigationContainer}from\"@react-navigation/native\";import{createBottomTabNavigator}from\"@react-navigation/bottom-tabs\";import{createDrawerNavigator}from\"@react-navigation/drawer\";import{ThemeProvider,Icon}from\"react-native-elements\";import MyJobs from\"./components/MyJobs\";import Jobs from\"./components/Jobs\";import Profile from\"./components/Profile\";import People from\"./components/People\";import Messages from\"./components/Messages\";import Auth from\"./components/Auth\";import CustomOverlay from\"./components/CustomOverlay\";import theme from\"./Theme.json\";import{navigationRef,isMountedRef}from\"./RootNavigation\";import{verifyToken}from\"./actions/authActions\";var BottomTab=createBottomTabNavigator();var Drawer=createDrawerNavigator();var MainStack=function MainStack(){return React.createElement(BottomTab.Navigator,{initialRouteName:\"People\",screenOptions:function screenOptions(_ref){var route=_ref.route;return{tabBarIcon:function tabBarIcon(_ref2){var focused=_ref2.focused,color=_ref2.color,size=_ref2.size;var iconName;switch(route.name){case\"Home\":iconName=\"home\";break;case\"Jobs\":iconName=\"briefcase\";break;case\"People\":iconName=\"account-group\";break;case\"Messages\":iconName=\"forum\";break;default:break;}return React.createElement(Icon,{name:iconName,size:size,color:color});}};},tabBarOptions:{activeTintColor:theme.colors.primary,inactiveTintColor:\"gray\"}},React.createElement(BottomTab.Screen,{name:\"People\",component:People,options:{title:\"Annuaire\"}}),React.createElement(BottomTab.Screen,{name:\"Jobs\",component:Jobs,options:{title:\"Emplois\"}}),React.createElement(BottomTab.Screen,{name:\"Messages\",component:Messages,options:{title:\"Messages\"}}));};var AppStack=function AppStack(){var dispatch=useDispatch();var userToken=useSelector(function(state){return state.auth.token;},shallowEqual);React.useEffect(function(){var bootstrapAsync=function bootstrapAsync(){return _regeneratorRuntime.async(function bootstrapAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userToken!==null){dispatch(verifyToken());}case 1:case\"end\":return _context.stop();}}},null,null,null,Promise);};bootstrapAsync();},[]);return React.createElement(View,{style:{flex:1,maxWidth:500}},userToken?React.createElement(Drawer.Navigator,{initialRouteName:\"Main\",headerMode:\"screen\"},React.createElement(Drawer.Screen,{name:\"Main\",component:MainStack,options:{title:\"Accueil\"}}),React.createElement(Drawer.Screen,{name:\"Profile\",component:Profile,options:{title:\"Mon profil\"}}),React.createElement(Drawer.Screen,{name:\"MyJobs\",component:MyJobs,options:{title:\"Mes offres d'emplois\"}})):React.createElement(Auth,null));};var App=function App(){React.useEffect(function(){isMountedRef.current=true;return function(){return isMountedRef.current=false;};},[]);return React.createElement(Provider,{store:store},React.createElement(PersistGate,{loading:null,persistor:persistor},React.createElement(ThemeProvider,{theme:theme},React.createElement(SafeAreaView,{style:{flex:1,flexDirection:\"row\",justifyContent:\"center\"}},Platform.OS===\"ios\"&&React.createElement(StatusBar,{barStyle:\"default\"}),React.createElement(NavigationContainer,{ref:navigationRef},React.createElement(AppStack,null),React.createElement(CustomOverlay,null))))));};export default App;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/App.js"],"names":["React","Provider","useSelector","shallowEqual","useDispatch","store","persistor","PersistGate","NavigationContainer","createBottomTabNavigator","createDrawerNavigator","ThemeProvider","Icon","MyJobs","Jobs","Profile","People","Messages","Auth","CustomOverlay","theme","navigationRef","isMountedRef","verifyToken","BottomTab","Drawer","MainStack","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","colors","primary","inactiveTintColor","title","AppStack","dispatch","userToken","state","auth","token","useEffect","bootstrapAsync","flex","maxWidth","App","current","flexDirection","justifyContent","Platform","OS"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"react-native-gesture-handler\";\nimport { Provider, useSelector, shallowEqual, useDispatch } from \"react-redux\";\nimport { View, SafeAreaView, Platform, StatusBar } from \"react-native\";\nimport { store, persistor } from \"./store/index\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { ThemeProvider, Icon } from \"react-native-elements\";\nimport MyJobs from \"./components/MyJobs\";\nimport Jobs from \"./components/Jobs\";\nimport Profile from \"./components/Profile\";\nimport People from \"./components/People\";\nimport Messages from \"./components/Messages\";\nimport Auth from \"./components/Auth\";\nimport CustomOverlay from \"./components/CustomOverlay\";\nimport theme from \"./Theme.json\";\nimport { navigationRef, isMountedRef } from \"./RootNavigation\";\nimport { verifyToken } from \"./actions/authActions\";\n\nconst BottomTab = createBottomTabNavigator();\nconst Drawer = createDrawerNavigator();\n\nconst MainStack = () => {\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"People\"\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          switch (route.name) {\n            case \"Home\":\n              iconName = \"home\";\n              break;\n            case \"Jobs\":\n              iconName = \"briefcase\";\n              break;\n            case \"People\":\n              iconName = \"account-group\";\n              break;\n            case \"Messages\":\n              iconName = \"forum\";\n              break;\n            default:\n              break;\n          }\n\n          return <Icon name={iconName} size={size} color={color} />;\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: theme.colors.primary,\n        inactiveTintColor: \"gray\",\n      }}\n    >\n      <BottomTab.Screen\n        name=\"People\"\n        component={People}\n        options={{ title: \"Annuaire\" }}\n      />\n      <BottomTab.Screen\n        name=\"Jobs\"\n        component={Jobs}\n        options={{ title: \"Emplois\" }}\n      />\n      <BottomTab.Screen\n        name=\"Messages\"\n        component={Messages}\n        options={{ title: \"Messages\" }}\n      />\n    </BottomTab.Navigator>\n  );\n};\n\nconst AppStack = () => {\n  const dispatch = useDispatch();\n\n  const userToken = useSelector((state) => state.auth.token, shallowEqual);\n  React.useEffect(() => {\n    const bootstrapAsync = async () => {\n      if (userToken !== null) {\n        dispatch(verifyToken());\n      }\n    };\n    bootstrapAsync();\n  }, []);\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        maxWidth: 500,\n      }}\n    >\n      {userToken ? (\n        <Drawer.Navigator initialRouteName=\"Main\" headerMode=\"screen\">\n          <Drawer.Screen\n            name=\"Main\"\n            component={MainStack}\n            options={{ title: \"Accueil\" }}\n          />\n          <Drawer.Screen\n            name=\"Profile\"\n            component={Profile}\n            options={{ title: \"Mon profil\" }}\n          />\n          <Drawer.Screen\n            name=\"MyJobs\"\n            component={MyJobs}\n            options={{ title: \"Mes offres d'emplois\" }}\n          />\n        </Drawer.Navigator>\n      ) : (\n        <Auth />\n      )}\n    </View>\n  );\n};\n\nconst App = () => {\n  React.useEffect(() => {\n    isMountedRef.current = true;\n    return () => (isMountedRef.current = false);\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <SafeAreaView\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            {Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />}\n            <NavigationContainer ref={navigationRef}>\n              <AppStack />\n              <CustomOverlay />\n            </NavigationContainer>\n          </SafeAreaView>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}