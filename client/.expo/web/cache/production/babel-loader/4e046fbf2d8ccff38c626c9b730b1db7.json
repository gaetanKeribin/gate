{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState,useContext}from\"react\";import{connect}from\"react-redux\";import{Icon,Button,Input,ThemeContext}from\"react-native-elements\";import View from\"react-native-web/dist/exports/View\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{updateUser as _updateUser,deleteAccount as _deleteAccount,updateUserPassword as _updateUserPassword}from\"../../actions/authActions\";var ProfileEditScreen=function ProfileEditScreen(_ref){var updateUser=_ref.updateUser,deleteAccount=_ref.deleteAccount,auth=_ref.auth,updateUserPassword=_ref.updateUserPassword;var _useContext=useContext(ThemeContext),theme=_useContext.theme;var _useState=useState(auth.user.description),_useState2=_slicedToArray(_useState,2),desc=_useState2[0],setDesc=_useState2[1];var _useState3=useState(auth.user.email),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(auth.user.jobTitle),_useState6=_slicedToArray(_useState5,2),jobTitle=_useState6[0],setJobTitle=_useState6[1];var _useState7=useState(auth.user.organisation),_useState8=_slicedToArray(_useState7,2),organisation=_useState8[0],setOrganisation=_useState8[1];var _useState9=useState(\"\"+auth.user.promo),_useState10=_slicedToArray(_useState9,2),promo=_useState10[0],setPromo=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),password=_useState12[0],setPassword=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),confirmation=_useState14[0],setConfirmation=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),passwordError=_useState16[0],setPasswordError=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),newPassword=_useState18[0],setNewPassword=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),showEditPasswordForm=_useState20[0],setShowEditPasswordForm=_useState20[1];var _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),showDeleteAccountForm=_useState22[0],setShowDeleteAccountForm=_useState22[1];var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),showEditAccountInfoForm=_useState24[0],setShowEditAccountInfoForm=_useState24[1];var onEditProfile=function onEditProfile(){updateUser(_objectSpread({},auth.user,{description:desc,email:email,jobTitle:jobTitle,organisation:organisation,promo:promo}));};var onChangePassword=function onChangePassword(){if(newPassword.length<8){return setPasswordError(\"Choisissez un mot de passe d'au moins 8 caractÃ¨res.\");}else if(newPassword!==confirmation){return setPasswordError(\"Les mots de passe ne correspondent pas.\");}updateUserPassword(password,newPassword);};return React.createElement(View,{style:{flex:1,alignContent:\"space-between\",paddingVertical:8,paddingHorizontal:8,backgroundColor:\"white\"}},React.createElement(ScrollView,null,React.createElement(View,{style:{borderBottomColor:theme.colors.grey4,borderBottomWidth:1}},React.createElement(TouchableOpacity,{style:{paddingVertical:12,paddingHorizontal:12,flexDirection:\"row\",justifyContent:\"space-between\",alignContent:\"center\"},onPress:function onPress(){return setShowEditAccountInfoForm(!showEditAccountInfoForm);}},React.createElement(Text,{style:{fontSize:16}},\"Editer mes informations\"),React.createElement(Icon,{name:!showEditAccountInfoForm?\"chevron-down\":\"chevron-up\"})),showEditAccountInfoForm&&React.createElement(View,{style:{marginBottom:12}},React.createElement(Input,{label:\"Promotion\",value:promo,onChangeText:function onChangeText(text){return setPromo(text);},leftIcon:React.createElement(Icon,{name:\"school\"})}),React.createElement(Input,{value:organisation,label:\"Organisation\",onChangeText:function onChangeText(text){return setOrganisation(text);},leftIcon:React.createElement(Icon,{name:\"domain\"})}),React.createElement(Input,{value:jobTitle,onChangeText:function onChangeText(text){return setJobTitle(text);},label:\"Profession\",leftIcon:React.createElement(Icon,{name:\"briefcase\"})}),React.createElement(Input,{label:\"Description\",value:desc,multiline:true,numberOfLines:8,onChangeText:function onChangeText(text){return setDesc(text);}}),React.createElement(Input,{label:\"email\",value:email,leftIcon:React.createElement(Icon,{name:\"email\"}),onChangeText:function onChangeText(text){return setEmail(text);}}),React.createElement(Button,{title:\"Valider les changements\",onPress:function onPress(){return onEditProfile();},buttonStyle:{backgroundColor:theme.colors.primary}}))),React.createElement(View,{style:{borderBottomColor:theme.colors.grey4,borderBottomWidth:1}},React.createElement(TouchableOpacity,{style:{paddingVertical:12,paddingHorizontal:12,flexDirection:\"row\",justifyContent:\"space-between\"},onPress:function onPress(){return setShowEditPasswordForm(!showEditPasswordForm);}},React.createElement(Text,{style:{fontSize:16}},\"Changer mon mot de passe\"),React.createElement(Icon,{name:!showEditPasswordForm?\"chevron-down\":\"chevron-up\"})),showEditPasswordForm&&React.createElement(View,{style:{marginBottom:12}},React.createElement(Input,{placeholder:\"Mot de passe\",leftIcon:React.createElement(Icon,{name:\"lock\"}),label:\"Ancien mot de passe\",secureTextEntry:true,value:password,leftIconContainerStyle:{marginRight:12},containerStyle:{marginBottom:20,marginTop:8},onChangeText:function onChangeText(value){return setPassword(value);}}),React.createElement(Input,{placeholder:\"Mot de passe\",leftIcon:React.createElement(Icon,{name:\"lock\"}),label:\"Nouveau mot de passe\",secureTextEntry:true,value:newPassword,leftIconContainerStyle:{marginRight:12},containerStyle:{marginBottom:20,marginTop:8},onChangeText:function onChangeText(value){setPasswordError(\"\");setNewPassword(value);},errorMessage:passwordError}),React.createElement(Input,{placeholder:\"Mot de passe\",leftIcon:React.createElement(Icon,{name:confirmation===newPassword?\"check\":\"close\",color:confirmation===newPassword?\"green\":\"red\"}),label:\"Confirmation\",secureTextEntry:true,value:confirmation,leftIconContainerStyle:{marginRight:12},containerStyle:{marginBottom:40,marginTop:8},onChangeText:function onChangeText(value){return setConfirmation(value);}}),React.createElement(Button,{title:\"Valider\",onPress:function onPress(){return onChangePassword();},buttonStyle:{backgroundColor:theme.colors.primary},loading:auth.isUpdatingPassword}))),React.createElement(View,null,React.createElement(TouchableOpacity,{style:{paddingVertical:12,paddingHorizontal:12,flexDirection:\"row\",justifyContent:\"space-between\"},onPress:function onPress(){return setShowDeleteAccountForm(!showDeleteAccountForm);}},React.createElement(Text,{style:{fontSize:16}},\"Supprimer mon compte\"),React.createElement(Icon,{name:!showDeleteAccountForm?\"chevron-down\":\"chevron-up\"})),showDeleteAccountForm&&React.createElement(View,{style:{marginBottom:12}},React.createElement(Input,{placeholder:\"Mot de passe\",leftIcon:React.createElement(Icon,{name:\"lock\"}),label:\"Mot de passe\",secureTextEntry:true,value:password,leftIconContainerStyle:{marginRight:12},containerStyle:{marginBottom:20,marginTop:8},onChangeText:function onChangeText(value){return setPassword(value);}}),React.createElement(Button,{title:\"Valider\",disabled:!password,onPress:function onPress(password){return deleteAccount(password);},buttonStyle:{backgroundColor:theme.colors.error}})))));};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateUser:function updateUser(user){return dispatch(_updateUser(user));},deleteAccount:function deleteAccount(password){return dispatch(_deleteAccount(password));},updateUserPassword:function updateUserPassword(password,newPassword){return dispatch(_updateUserPassword(password,newPassword));}};};export default connect(mapStateToProps,mapDispatchToProps)(ProfileEditScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/Profile/ProfileEditScreen.js"],"names":["React","useState","useContext","connect","Icon","Button","Input","ThemeContext","updateUser","deleteAccount","updateUserPassword","ProfileEditScreen","auth","theme","user","description","desc","setDesc","email","setEmail","jobTitle","setJobTitle","organisation","setOrganisation","promo","setPromo","password","setPassword","confirmation","setConfirmation","passwordError","setPasswordError","newPassword","setNewPassword","showEditPasswordForm","setShowEditPasswordForm","showDeleteAccountForm","setShowDeleteAccountForm","showEditAccountInfoForm","setShowEditAccountInfoForm","onEditProfile","onChangePassword","length","flex","alignContent","paddingVertical","paddingHorizontal","backgroundColor","borderBottomColor","colors","grey4","borderBottomWidth","flexDirection","justifyContent","fontSize","marginBottom","text","primary","marginRight","marginTop","value","isUpdatingPassword","error","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Button, Input, ThemeContext } from \"react-native-elements\";\nimport { View, ScrollView, Text, TouchableOpacity } from \"react-native\";\nimport {\n  updateUser,\n  deleteAccount,\n  updateUserPassword\n} from \"../../actions/authActions\";\n\nconst ProfileEditScreen = ({\n  updateUser,\n  deleteAccount,\n  auth,\n  updateUserPassword\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const [desc, setDesc] = useState(auth.user.description);\n  const [email, setEmail] = useState(auth.user.email);\n  const [jobTitle, setJobTitle] = useState(auth.user.jobTitle);\n  const [organisation, setOrganisation] = useState(auth.user.organisation);\n  const [promo, setPromo] = useState(`${auth.user.promo}`);\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [showEditPasswordForm, setShowEditPasswordForm] = useState(false);\n  const [showDeleteAccountForm, setShowDeleteAccountForm] = useState(false);\n  const [showEditAccountInfoForm, setShowEditAccountInfoForm] = useState(false);\n\n  const onEditProfile = () => {\n    updateUser({\n      ...auth.user,\n      description: desc,\n      email,\n      jobTitle,\n      organisation,\n      promo\n    });\n  };\n\n  const onChangePassword = () => {\n    if (newPassword.length < 8) {\n      return setPasswordError(\n        \"Choisissez un mot de passe d'au moins 8 caractÃ¨res.\"\n      );\n    } else if (newPassword !== confirmation) {\n      return setPasswordError(\"Les mots de passe ne correspondent pas.\");\n    }\n    updateUserPassword(password, newPassword);\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\"\n      }}\n    >\n      <ScrollView>\n        <View\n          style={{\n            borderBottomColor: theme.colors.grey4,\n            borderBottomWidth: 1\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              paddingVertical: 12,\n              paddingHorizontal: 12,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignContent: \"center\"\n            }}\n            onPress={() => setShowEditAccountInfoForm(!showEditAccountInfoForm)}\n          >\n            <Text style={{ fontSize: 16 }}>Editer mes informations</Text>\n            <Icon\n              name={!showEditAccountInfoForm ? \"chevron-down\" : \"chevron-up\"}\n            />\n          </TouchableOpacity>\n          {showEditAccountInfoForm && (\n            <View style={{ marginBottom: 12 }}>\n              <Input\n                label=\"Promotion\"\n                value={promo}\n                onChangeText={text => setPromo(text)}\n                leftIcon={<Icon name=\"school\" />}\n              />\n              <Input\n                value={organisation}\n                label=\"Organisation\"\n                onChangeText={text => setOrganisation(text)}\n                leftIcon={<Icon name=\"domain\" />}\n              />\n              <Input\n                value={jobTitle}\n                onChangeText={text => setJobTitle(text)}\n                label=\"Profession\"\n                leftIcon={<Icon name=\"briefcase\" />}\n              />\n              <Input\n                label=\"Description\"\n                value={desc}\n                multiline\n                numberOfLines={8}\n                onChangeText={text => setDesc(text)}\n              />\n              <Input\n                label=\"email\"\n                value={email}\n                leftIcon={<Icon name=\"email\" />}\n                onChangeText={text => setEmail(text)}\n              />\n              <Button\n                title=\"Valider les changements\"\n                onPress={() => onEditProfile()}\n                buttonStyle={{ backgroundColor: theme.colors.primary }}\n              />\n            </View>\n          )}\n        </View>\n        <View\n          style={{\n            borderBottomColor: theme.colors.grey4,\n            borderBottomWidth: 1\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              paddingVertical: 12,\n              paddingHorizontal: 12,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            }}\n            onPress={() => setShowEditPasswordForm(!showEditPasswordForm)}\n          >\n            <Text style={{ fontSize: 16 }}>Changer mon mot de passe</Text>\n            <Icon\n              name={!showEditPasswordForm ? \"chevron-down\" : \"chevron-up\"}\n            />\n          </TouchableOpacity>\n          {showEditPasswordForm && (\n            <View style={{ marginBottom: 12 }}>\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Ancien mot de passe\"\n                secureTextEntry\n                value={password}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={value => setPassword(value)}\n              />\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Nouveau mot de passe\"\n                secureTextEntry\n                value={newPassword}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={value => {\n                  setPasswordError(\"\");\n                  setNewPassword(value);\n                }}\n                errorMessage={passwordError}\n              />\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={\n                  <Icon\n                    name={confirmation === newPassword ? \"check\" : \"close\"}\n                    color={confirmation === newPassword ? \"green\" : \"red\"}\n                  />\n                }\n                label=\"Confirmation\"\n                secureTextEntry\n                value={confirmation}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 40, marginTop: 8 }}\n                onChangeText={value => setConfirmation(value)}\n              />\n              <Button\n                title=\"Valider\"\n                onPress={() => onChangePassword()}\n                buttonStyle={{ backgroundColor: theme.colors.primary }}\n                loading={auth.isUpdatingPassword}\n              />\n            </View>\n          )}\n        </View>\n        <View>\n          <TouchableOpacity\n            style={{\n              paddingVertical: 12,\n              paddingHorizontal: 12,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            }}\n            onPress={() => setShowDeleteAccountForm(!showDeleteAccountForm)}\n          >\n            <Text style={{ fontSize: 16 }}>Supprimer mon compte</Text>\n            <Icon\n              name={!showDeleteAccountForm ? \"chevron-down\" : \"chevron-up\"}\n            />\n          </TouchableOpacity>\n          {showDeleteAccountForm && (\n            <View style={{ marginBottom: 12 }}>\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Mot de passe\"\n                secureTextEntry\n                value={password}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={value => setPassword(value)}\n              />\n              <Button\n                title=\"Valider\"\n                disabled={!password}\n                onPress={password => deleteAccount(password)}\n                buttonStyle={{ backgroundColor: theme.colors.error }}\n              />\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: user => dispatch(updateUser(user)),\n    deleteAccount: password => dispatch(deleteAccount(password)),\n    updateUserPassword: (password, newPassword) =>\n      dispatch(updateUserPassword(password, newPassword))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEditScreen);\n"]},"metadata":{},"sourceType":"module"}