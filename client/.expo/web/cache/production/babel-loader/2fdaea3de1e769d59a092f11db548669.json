{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useContext,useState,useEffect}from\"react\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import FlatList from\"react-native-web/dist/exports/FlatList\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import{useDispatch,useSelector}from\"react-redux\";import{ThemeContext,Button,Icon}from\"react-native-elements\";import{sendPrivateMessage,fetchConversation,sendReadAck}from\"../../actions/chatActions\";import _ from\"lodash\";import\"moment/locale/fr\";import moment from\"moment\";var Message=function Message(_ref){var message=_ref.message,incoming=_ref.incoming,theme=_ref.theme,i=_ref.i,readAck=_ref.readAck;return React.createElement(View,{style:{flexDirection:\"row\"}},!incoming&&React.createElement(View,{style:{flex:1}}),React.createElement(View,{style:{backgroundColor:incoming?\"white\":theme.colors.primary,borderTopLeftRadius:!incoming?10:0,borderTopRightRadius:10,borderBottomLeftRadius:10,borderBottomRightRadius:incoming?10:0,maxWidth:\"80%\",paddingHorizontal:8,paddingVertical:8,marginBottom:8,marginHorizontal:8}},React.createElement(Text,{selectable:true,style:{color:!incoming?\"white\":\"black\",textAlign:incoming?\"left\":\"right\"}},message.text),readAck.message_id===item._id&&React.createElement(Text,null,\"Lu il y a \",moment(readAck.timestamp).locale(\"fr\").fromNow())),incoming&&React.createElement(View,{style:{flex:1}}));};var RoomScreen=function RoomScreen(_ref2){var route=_ref2.route;var conversation_id=route.params.conversation_id;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),newMessage=_useState2[0],setNewMessage=_useState2[1];var _useContext=useContext(ThemeContext),theme=_useContext.theme;var _useSelector=useSelector(function(state){return state.auth;}),user=_useSelector.user;var conversation=useSelector(function(state){return state.chat.conversations.filter(function(conv){return conv._id===conversation_id;})[0];});var dispatch=useDispatch();useEffect(function(){function fetchData(){dispatch(fetchConversation(conversation_id));if(conversation.lastMessage.read===false)dispatch(sendReadAck(conversation_id));}fetchData();},[]);var onSendMessage=function onSendMessage(){var interlocutors=conversation==null?void 0:conversation.participants.filter(function(p){return p._id!=user._id;});dispatch(sendPrivateMessage({text:newMessage,conversation_id:conversation_id,recipient:interlocutors[0]}));setNewMessage(\"\");};return React.createElement(View,{style:{flex:1,justifyContent:\"space-between\"}},(conversation==null?void 0:conversation.messages)?React.createElement(FlatList,{data:conversation.messages,renderItem:function renderItem(_ref3,i){var item=_ref3.item;return React.createElement(Message,{i:i,message:item,incoming:(item==null?void 0:item.sender)!==user._id,theme:theme,readAck:conversation.readAck});},keyExtractor:function keyExtractor(item){return item==null?void 0:item._id;},inverted:true}):React.createElement(ActivityIndicator,null),React.createElement(View,null,conversation.read&&conversation.lastMessage.sender!==user._id&&React.createElement(Text,{style:{flex:1,textAlign:\"right\"}},\"Vu \\xE0 \",conversation.read.sentAt),React.createElement(View,{style:{flexDirection:\"row\",backgroundColor:\"white\",paddingVertical:8,paddingHorizontal:16,alignItems:\"center\",justifyContent:\"center\",alignContent:\"center\"}},React.createElement(TextInput,{style:{height:40,flex:1},onChangeText:function onChangeText(text){return setNewMessage(text);},value:newMessage,multiline:true,placeholder:\"Ecrivez votre message ici.\"}),React.createElement(Button,{icon:React.createElement(Icon,{name:\"send\",size:20,color:newMessage?theme.colors.primary:theme.colors.grey2}),disabled:!newMessage,type:\"clear\",onPress:function onPress(){return onSendMessage();}}))));};export default RoomScreen;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/Messages/MessagesRoomScreen.js"],"names":["React","useContext","useState","useEffect","useDispatch","useSelector","ThemeContext","Button","Icon","sendPrivateMessage","fetchConversation","sendReadAck","_","moment","Message","message","incoming","theme","i","readAck","flexDirection","flex","backgroundColor","colors","primary","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","maxWidth","paddingHorizontal","paddingVertical","marginBottom","marginHorizontal","color","textAlign","text","message_id","item","_id","timestamp","locale","fromNow","RoomScreen","route","conversation_id","params","newMessage","setNewMessage","state","auth","user","conversation","chat","conversations","filter","conv","dispatch","fetchData","lastMessage","read","onSendMessage","interlocutors","participants","p","recipient","justifyContent","messages","sender","sentAt","alignItems","alignContent","height","grey2"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  FlatList,\n  ActivityIndicator,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ThemeContext, Button, Icon } from \"react-native-elements\";\nimport {\n  sendPrivateMessage,\n  fetchConversation,\n  sendReadAck,\n} from \"../../actions/chatActions\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\n\nconst Message = ({ message, incoming, theme, i, readAck }) => {\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n      }}\n    >\n      {!incoming && <View style={{ flex: 1 }}></View>}\n      <View\n        style={{\n          backgroundColor: incoming ? \"white\" : theme.colors.primary,\n          borderTopLeftRadius: !incoming ? 10 : 0,\n          borderTopRightRadius: 10,\n          borderBottomLeftRadius: 10,\n          borderBottomRightRadius: incoming ? 10 : 0,\n          maxWidth: \"80%\",\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          marginBottom: 8,\n          marginHorizontal: 8,\n        }}\n      >\n        <Text\n          selectable\n          style={{\n            color: !incoming ? \"white\" : \"black\",\n            textAlign: incoming ? \"left\" : \"right\",\n          }}\n        >\n          {message.text}\n        </Text>\n        {readAck.message_id === item._id && (\n          <Text>\n            Lu il y a {moment(readAck.timestamp).locale(\"fr\").fromNow()}\n          </Text>\n        )}\n      </View>\n      {incoming && <View style={{ flex: 1 }}></View>}\n    </View>\n  );\n};\n\nconst RoomScreen = ({ route }) => {\n  const { conversation_id } = route.params;\n  const [newMessage, setNewMessage] = useState(\"\");\n  const { theme } = useContext(ThemeContext);\n\n  const { user } = useSelector((state) => state.auth);\n  const conversation = useSelector(\n    (state) =>\n      state.chat.conversations.filter((conv) => conv._id === conversation_id)[0]\n  );\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchConversation(conversation_id));\n      if (conversation.lastMessage.read === false)\n        dispatch(sendReadAck(conversation_id));\n    }\n    fetchData();\n  }, []);\n\n  const onSendMessage = () => {\n    const interlocutors = conversation?.participants.filter(\n      (p) => p._id != user._id\n    );\n    dispatch(\n      sendPrivateMessage({\n        text: newMessage,\n        conversation_id,\n        recipient: interlocutors[0],\n      })\n    );\n    setNewMessage(\"\");\n  };\n\n  // is something triggered from here when reveiving a message that isn't triggered outside of this screen\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      {conversation?.messages ? (\n        <FlatList\n          data={conversation.messages}\n          renderItem={({ item }, i) => (\n            <Message\n              i={i}\n              message={item}\n              incoming={item?.sender !== user._id}\n              theme={theme}\n              readAck={conversation.readAck}\n            />\n          )}\n          keyExtractor={(item) => item?._id}\n          inverted={true}\n        />\n      ) : (\n        <ActivityIndicator />\n      )}\n      <View>\n        {conversation.read && conversation.lastMessage.sender !== user._id && (\n          <Text style={{ flex: 1, textAlign: \"right\" }}>\n            Vu à {conversation.read.sentAt}\n          </Text>\n        )}\n        <View\n          style={{\n            flexDirection: \"row\",\n            backgroundColor: \"white\",\n            paddingVertical: 8,\n            paddingHorizontal: 16,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            alignContent: \"center\",\n          }}\n        >\n          <TextInput\n            style={{\n              height: 40,\n              flex: 1,\n            }}\n            onChangeText={(text) => setNewMessage(text)}\n            value={newMessage}\n            multiline\n            placeholder=\"Ecrivez votre message ici.\"\n          />\n          <Button\n            icon={\n              <Icon\n                name=\"send\"\n                size={20}\n                color={newMessage ? theme.colors.primary : theme.colors.grey2}\n              />\n            }\n            disabled={!newMessage}\n            type=\"clear\"\n            onPress={() => onSendMessage()}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default RoomScreen;\n"]},"metadata":{},"sourceType":"module"}