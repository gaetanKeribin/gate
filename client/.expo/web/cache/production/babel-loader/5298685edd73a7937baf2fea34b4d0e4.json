{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from\"react\";import{connect}from\"react-redux\";import View from\"react-native-web/dist/exports/View\";import{Input,Button,Icon}from\"react-native-elements\";import{signUp as _signUp}from\"../../actions/authActions\";var SignUpScreen=function SignUpScreen(_ref){var signUp=_ref.signUp,auth=_ref.auth;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),firstname=_useState2[0],setFirstname=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),lastname=_useState4[0],setLastname=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),email=_useState6[0],setEmail=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),password=_useState8[0],setPassword=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),confirmation=_useState10[0],setConfirmation=_useState10[1];var _useState11=useState({}),_useState12=_slicedToArray(_useState11,2),errors=_useState12[0],setErrors=_useState12[1];var handleSignUp=function handleSignUp(){return _regeneratorRuntime.async(function handleSignUp$(_context){while(1){switch(_context.prev=_context.next){case 0:if(firstname){_context.next=4;break;}return _context.abrupt(\"return\",setErrors({firstname:\"Prénom manquant.\"}));case 4:if(lastname){_context.next=8;break;}return _context.abrupt(\"return\",setErrors({lastname:\"Nom manquant.\"}));case 8:if(email){_context.next=12;break;}return _context.abrupt(\"return\",setErrors({mail:\"Mél manquant.\"}));case 12:if(!(password.length<8===true)){_context.next=16;break;}return _context.abrupt(\"return\",setErrors({password:\"Mot de passe manquant.\"}));case 16:if(!(password!==confirmation)){_context.next=18;break;}return _context.abrupt(\"return\",setErrors({confirmation:\"Veuillez retaper la confirmation de votre mot de passe.\"}));case 18:setErrors({});signUp({email:email,password:password,firstname:firstname,lastname:lastname});case 20:case\"end\":return _context.stop();}}},null,null,null,Promise);};return React.createElement(View,{style:{backgroundColor:\"white\",flex:1,justifyContent:\"center\",alignItems:\"center\",paddingHorizontal:12}},React.createElement(Input,{placeholder:\"Pr\\xE9nom\",value:firstname,onChangeText:function onChangeText(value){return setFirstname(value);},label:\"Pr\\xE9nom\",errorMessage:errors.firstname}),React.createElement(Input,{placeholder:\"Nom\",value:lastname,onChangeText:function onChangeText(value){return setLastname(value);},label:\"Nom\",errorMessage:errors.lastname}),React.createElement(Input,{placeholder:\"Email\",leftIcon:React.createElement(Icon,{name:\"email\",type:\"material-community\"}),value:email,onChangeText:function onChangeText(value){return setEmail(value);},label:\"Email\",errorMessage:errors.email}),React.createElement(Input,{placeholder:\"Mot de passe\",leftIcon:React.createElement(Icon,{name:\"lock\"}),label:\"Mot de passe\",secureTextEntry:true,value:password,onChangeText:function onChangeText(value){return setPassword(value);},errorMessage:errors.password}),React.createElement(Input,{placeholder:\"Mot de passe\",leftIcon:React.createElement(Icon,{name:confirmation!==password||password.length<8?\"close\":\"check\",color:confirmation!==password||password.length<8?\"red\":\"green\"}),label:\"Confirmation\",secureTextEntry:true,value:confirmation,leftIconContainerStyle:{marginRight:12},containerStyle:{marginBottom:40,marginTop:8},onChangeText:function onChangeText(value){return setConfirmation(value);},errorMessage:errors.confirmation}),React.createElement(Button,{title:\"S'inscrire\",onPress:handleSignUp,loading:auth.isSigningUp,containerStyle:{marginBottom:20,marginTop:8}}));};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{signUp:function signUp(credentials){return dispatch(_signUp(credentials));}};};export default connect(mapStateToProps,mapDispatchToProps)(SignUpScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/Auth/SignUpScreen.js"],"names":["React","useState","connect","Input","Button","Icon","signUp","SignUpScreen","auth","firstname","setFirstname","lastname","setLastname","email","setEmail","password","setPassword","confirmation","setConfirmation","errors","setErrors","handleSignUp","mail","length","backgroundColor","flex","justifyContent","alignItems","paddingHorizontal","value","marginRight","marginBottom","marginTop","isSigningUp","mapStateToProps","state","mapDispatchToProps","dispatch","credentials"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { View } from \"react-native\";\nimport { Input, Button, Icon } from \"react-native-elements\";\nimport { signUp } from \"../../actions/authActions\";\n\nconst SignUpScreen = ({ signUp, auth }) => {\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const handleSignUp = async () => {\n    if (!firstname) {\n      return setErrors({ firstname: \"Prénom manquant.\" });\n    } else if (!lastname) {\n      return setErrors({ lastname: \"Nom manquant.\" });\n    } else if (!email) {\n      return setErrors({ mail: \"Mél manquant.\" });\n    } else if (password.length < 8 === true) {\n      return setErrors({ password: \"Mot de passe manquant.\" });\n    } else if (password !== confirmation) {\n      return setErrors({\n        confirmation: \"Veuillez retaper la confirmation de votre mot de passe.\",\n      });\n    }\n    setErrors({});\n    signUp({ email, password, firstname, lastname });\n  };\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n      }}\n    >\n      <Input\n        placeholder=\"Prénom\"\n        value={firstname}\n        onChangeText={(value) => setFirstname(value)}\n        label=\"Prénom\"\n        errorMessage={errors.firstname}\n      />\n      <Input\n        placeholder=\"Nom\"\n        value={lastname}\n        onChangeText={(value) => setLastname(value)}\n        label=\"Nom\"\n        errorMessage={errors.lastname}\n      />\n      <Input\n        placeholder=\"Email\"\n        leftIcon={<Icon name=\"email\" type=\"material-community\" />}\n        value={email}\n        onChangeText={(value) => setEmail(value)}\n        label=\"Email\"\n        errorMessage={errors.email}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={<Icon name=\"lock\" />}\n        label=\"Mot de passe\"\n        secureTextEntry\n        value={password}\n        onChangeText={(value) => setPassword(value)}\n        errorMessage={errors.password}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={\n          <Icon\n            name={\n              confirmation !== password || password.length < 8\n                ? \"close\"\n                : \"check\"\n            }\n            color={\n              confirmation !== password || password.length < 8 ? \"red\" : \"green\"\n            }\n          />\n        }\n        label=\"Confirmation\"\n        secureTextEntry\n        value={confirmation}\n        leftIconContainerStyle={{ marginRight: 12 }}\n        containerStyle={{ marginBottom: 40, marginTop: 8 }}\n        onChangeText={(value) => setConfirmation(value)}\n        errorMessage={errors.confirmation}\n      />\n      <Button\n        title=\"S'inscrire\"\n        onPress={handleSignUp}\n        loading={auth.isSigningUp}\n        containerStyle={{ marginBottom: 20, marginTop: 8 }}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (credentials) => dispatch(signUp(credentials)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpScreen);\n"]},"metadata":{},"sourceType":"module"}