{"ast":null,"code":"import React,{useContext}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import View from\"react-native-web/dist/exports/View\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{ThemeContext}from\"react-native-elements\";import{resetOverlay}from\"../../actions/overlayAction\";import*as RootNavigation from\"../../RootNavigation.js\";import{TouchableOpacity}from\"react-native-gesture-handler\";import SearchBar from\"./SearchBar\";import DateInput from\"./DateInput\";import Notification from\"./Notification\";import Menu from\"./Menu\";var CustomOverlay=function CustomOverlay(){var overlay=useSelector(function(state){return state.overlay;});var _useContext=useContext(ThemeContext),theme=_useContext.theme;var dispatch=useDispatch();if(overlay.show===false)return null;var dispatchRedirectReset=function dispatchRedirectReset(){dispatch(resetOverlay());Array.isArray(overlay.callbacks)&&overlay.callbacks.forEach(function(d){dispatch(d());});overlay.redirect&&RootNavigation.navigate(overlay.redirect,overlay.redirectOpts);};overlay.timeout&&setTimeout(function(){dispatchRedirectReset();},overlay.timeout);return React.createElement(View,{style:[styles.root]},React.createElement(TouchableOpacity,{containerStyle:styles.sides,style:styles.sides,onPress:function onPress(){overlay.notification?dispatchRedirectReset():dispatch(resetOverlay());}}),React.createElement(View,{style:{flexDirection:\"row\",alignItems:\"center\",justifyContent:\"center\"}},React.createElement(TouchableOpacity,{containerStyle:styles.sides,style:styles.sides,onPress:function onPress(){overlay.notification?dispatchRedirectReset():dispatch(resetOverlay());}}),overlay.notification&&React.createElement(Notification,{notification:overlay.notification,dispatchRedirectReset:dispatchRedirectReset,theme:theme}),overlay.form&&React.createElement(InputForm,{form:overlay.form,dispatchRedirectReset:dispatchRedirectReset,dispatch:dispatch,theme:theme}),overlay.menu&&React.createElement(Menu,{menu:overlay.menu,dispatchRedirectReset:dispatchRedirectReset,dispatch:dispatch}),overlay.searchBar&&React.createElement(SearchBar,{searchBar:overlay.searchBar,dispatchRedirectReset:dispatchRedirectReset,theme:theme}),overlay.dateInput&&React.createElement(DateInput,{dateInput:overlay.dateInput,dispatchRedirectReset:dispatchRedirectReset,theme:theme}),React.createElement(TouchableOpacity,{containerStyle:styles.sides,style:styles.sides,onPress:function onPress(){overlay.notification?dispatchRedirectReset():dispatch(resetOverlay());}})),React.createElement(TouchableOpacity,{containerStyle:styles.sides,style:styles.sides,onPress:function onPress(){overlay.notification?dispatchRedirectReset():dispatch(resetOverlay());}}));};export default CustomOverlay;var styles=StyleSheet.create({root:{position:\"absolute\",height:Dimensions.get(\"window\").height,width:Dimensions.get(\"window\").width,alignContent:\"center\",justifyContent:\"center\",alignItems:\"stretch\",backgroundColor:\"rgba(200,200,200,0.5)\"},sides:{flex:1,minHeight:12}});","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/CustomOverlay/index.js"],"names":["React","useContext","useDispatch","useSelector","ThemeContext","resetOverlay","RootNavigation","TouchableOpacity","SearchBar","DateInput","Notification","Menu","CustomOverlay","overlay","state","theme","dispatch","show","dispatchRedirectReset","Array","isArray","callbacks","forEach","d","redirect","navigate","redirectOpts","timeout","setTimeout","styles","root","sides","notification","flexDirection","alignItems","justifyContent","form","menu","searchBar","dateInput","StyleSheet","create","position","height","Dimensions","get","width","alignContent","backgroundColor","flex","minHeight"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,C,uLAEA,OAASC,YAAT,KAA6B,uBAA7B,CACA,OAASC,YAAT,mCACA,MAAO,GAAKC,CAAAA,cAAZ,+BACA,OAASC,gBAAT,KAAiC,8BAAjC,CAEA,MAAOC,CAAAA,SAAP,mBACA,MAAOC,CAAAA,SAAP,mBACA,MAAOC,CAAAA,YAAP,sBACA,MAAOC,CAAAA,IAAP,cAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAMC,CAAAA,OAAO,CAAGV,WAAW,CAAC,SAACW,KAAD,QAAWA,CAAAA,KAAK,CAACD,OAAjB,EAAD,CAA3B,CAD0B,gBAERZ,UAAU,CAACG,YAAD,CAFF,CAElBW,KAFkB,aAElBA,KAFkB,CAG1B,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CACA,GAAIW,OAAO,CAACI,IAAR,GAAiB,KAArB,CAA4B,MAAO,KAAP,CAE5B,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CAClCF,QAAQ,CAACX,YAAY,EAAb,CAAR,CACAc,KAAK,CAACC,OAAN,CAAcP,OAAO,CAACQ,SAAtB,GACER,OAAO,CAACQ,SAAR,CAAkBC,OAAlB,CAA0B,SAACC,CAAD,CAAO,CAC/BP,QAAQ,CAACO,CAAC,EAAF,CAAR,CACD,CAFD,CADF,CAIAV,OAAO,CAACW,QAAR,EACElB,cAAc,CAACmB,QAAf,CAAwBZ,OAAO,CAACW,QAAhC,CAA0CX,OAAO,CAACa,YAAlD,CADF,CAED,CARD,CAUAb,OAAO,CAACc,OAAR,EACEC,UAAU,CAAC,UAAM,CACfV,qBAAqB,GACtB,CAFS,CAEPL,OAAO,CAACc,OAFD,CADZ,CAKA,MACE,qBAAC,IAAD,EAAM,KAAK,CAAE,CAACE,MAAM,CAACC,IAAR,CAAb,EACE,oBAAC,gBAAD,EACE,cAAc,CAAED,MAAM,CAACE,KADzB,CAEE,KAAK,CAAEF,MAAM,CAACE,KAFhB,CAGE,OAAO,CAAE,kBAAM,CACblB,OAAO,CAACmB,YAAR,CACId,qBAAqB,EADzB,CAEIF,QAAQ,CAACX,YAAY,EAAb,CAFZ,CAGD,CAPH,EADF,CAUE,oBAAC,IAAD,EACE,KAAK,CAAE,CACL4B,aAAa,CAAE,KADV,CAELC,UAAU,CAAE,QAFP,CAGLC,cAAc,CAAE,QAHX,CADT,EAOE,oBAAC,gBAAD,EACE,cAAc,CAAEN,MAAM,CAACE,KADzB,CAEE,KAAK,CAAEF,MAAM,CAACE,KAFhB,CAGE,OAAO,CAAE,kBAAM,CACblB,OAAO,CAACmB,YAAR,CACId,qBAAqB,EADzB,CAEIF,QAAQ,CAACX,YAAY,EAAb,CAFZ,CAGD,CAPH,EAPF,CAgBGQ,OAAO,CAACmB,YAAR,EACC,oBAAC,YAAD,EACE,YAAY,CAAEnB,OAAO,CAACmB,YADxB,CAEE,qBAAqB,CAAEd,qBAFzB,CAGE,KAAK,CAAEH,KAHT,EAjBJ,CAuBGF,OAAO,CAACuB,IAAR,EACC,oBAAC,SAAD,EACE,IAAI,CAAEvB,OAAO,CAACuB,IADhB,CAEE,qBAAqB,CAAElB,qBAFzB,CAGE,QAAQ,CAAEF,QAHZ,CAIE,KAAK,CAAED,KAJT,EAxBJ,CA+BGF,OAAO,CAACwB,IAAR,EACC,oBAAC,IAAD,EACE,IAAI,CAAExB,OAAO,CAACwB,IADhB,CAEE,qBAAqB,CAAEnB,qBAFzB,CAGE,QAAQ,CAAEF,QAHZ,EAhCJ,CAsCGH,OAAO,CAACyB,SAAR,EACC,oBAAC,SAAD,EACE,SAAS,CAAEzB,OAAO,CAACyB,SADrB,CAEE,qBAAqB,CAAEpB,qBAFzB,CAGE,KAAK,CAAEH,KAHT,EAvCJ,CA6CGF,OAAO,CAAC0B,SAAR,EACC,oBAAC,SAAD,EACE,SAAS,CAAE1B,OAAO,CAAC0B,SADrB,CAEE,qBAAqB,CAAErB,qBAFzB,CAGE,KAAK,CAAEH,KAHT,EA9CJ,CAoDE,oBAAC,gBAAD,EACE,cAAc,CAAEc,MAAM,CAACE,KADzB,CAEE,KAAK,CAAEF,MAAM,CAACE,KAFhB,CAGE,OAAO,CAAE,kBAAM,CACblB,OAAO,CAACmB,YAAR,CACId,qBAAqB,EADzB,CAEIF,QAAQ,CAACX,YAAY,EAAb,CAFZ,CAGD,CAPH,EApDF,CAVF,CAwEE,oBAAC,gBAAD,EACE,cAAc,CAAEwB,MAAM,CAACE,KADzB,CAEE,KAAK,CAAEF,MAAM,CAACE,KAFhB,CAGE,OAAO,CAAE,kBAAM,CACblB,OAAO,CAACmB,YAAR,CACId,qBAAqB,EADzB,CAEIF,QAAQ,CAACX,YAAY,EAAb,CAFZ,CAGD,CAPH,EAxEF,CADF,CAoFD,CAzGD,CA2GA,cAAeO,CAAAA,aAAf,CAEA,GAAMiB,CAAAA,MAAM,CAAGW,UAAU,CAACC,MAAX,CAAkB,CAC/BX,IAAI,CAAE,CACJY,QAAQ,CAAE,UADN,CAEJC,MAAM,CAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,MAF7B,CAGJG,KAAK,CAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAH5B,CAIJC,YAAY,CAAE,QAJV,CAKJZ,cAAc,CAAE,QALZ,CAMJD,UAAU,CAAE,SANR,CAOJc,eAAe,CAAE,uBAPb,CADyB,CAU/BjB,KAAK,CAAE,CAAEkB,IAAI,CAAE,CAAR,CAAWC,SAAS,CAAE,EAAtB,CAVwB,CAAlB,CAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { View, Dimensions, StyleSheet } from \"react-native\";\nimport { ThemeContext } from \"react-native-elements\";\nimport { resetOverlay } from \"../../actions/overlayAction\";\nimport * as RootNavigation from \"../../RootNavigation.js\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nimport SearchBar from \"./SearchBar\";\nimport DateInput from \"./DateInput\";\nimport Notification from \"./Notification\";\nimport Menu from \"./Menu\";\n\nconst CustomOverlay = () => {\n  const overlay = useSelector((state) => state.overlay);\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  if (overlay.show === false) return null;\n\n  const dispatchRedirectReset = () => {\n    dispatch(resetOverlay());\n    Array.isArray(overlay.callbacks) &&\n      overlay.callbacks.forEach((d) => {\n        dispatch(d());\n      });\n    overlay.redirect &&\n      RootNavigation.navigate(overlay.redirect, overlay.redirectOpts);\n  };\n\n  overlay.timeout &&\n    setTimeout(() => {\n      dispatchRedirectReset();\n    }, overlay.timeout);\n\n  return (\n    <View style={[styles.root]}>\n      <TouchableOpacity\n        containerStyle={styles.sides}\n        style={styles.sides}\n        onPress={() => {\n          overlay.notification\n            ? dispatchRedirectReset()\n            : dispatch(resetOverlay());\n        }}\n      />\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TouchableOpacity\n          containerStyle={styles.sides}\n          style={styles.sides}\n          onPress={() => {\n            overlay.notification\n              ? dispatchRedirectReset()\n              : dispatch(resetOverlay());\n          }}\n        />\n        {overlay.notification && (\n          <Notification\n            notification={overlay.notification}\n            dispatchRedirectReset={dispatchRedirectReset}\n            theme={theme}\n          />\n        )}\n        {overlay.form && (\n          <InputForm\n            form={overlay.form}\n            dispatchRedirectReset={dispatchRedirectReset}\n            dispatch={dispatch}\n            theme={theme}\n          />\n        )}\n        {overlay.menu && (\n          <Menu\n            menu={overlay.menu}\n            dispatchRedirectReset={dispatchRedirectReset}\n            dispatch={dispatch}\n          />\n        )}\n        {overlay.searchBar && (\n          <SearchBar\n            searchBar={overlay.searchBar}\n            dispatchRedirectReset={dispatchRedirectReset}\n            theme={theme}\n          />\n        )}\n        {overlay.dateInput && (\n          <DateInput\n            dateInput={overlay.dateInput}\n            dispatchRedirectReset={dispatchRedirectReset}\n            theme={theme}\n          />\n        )}\n        <TouchableOpacity\n          containerStyle={styles.sides}\n          style={styles.sides}\n          onPress={() => {\n            overlay.notification\n              ? dispatchRedirectReset()\n              : dispatch(resetOverlay());\n          }}\n        />\n      </View>\n      <TouchableOpacity\n        containerStyle={styles.sides}\n        style={styles.sides}\n        onPress={() => {\n          overlay.notification\n            ? dispatchRedirectReset()\n            : dispatch(resetOverlay());\n        }}\n      />\n    </View>\n  );\n};\n\nexport default CustomOverlay;\n\nconst styles = StyleSheet.create({\n  root: {\n    position: \"absolute\",\n    height: Dimensions.get(\"window\").height,\n    width: Dimensions.get(\"window\").width,\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    alignItems: \"stretch\",\n    backgroundColor: \"rgba(200,200,200,0.5)\",\n  },\n  sides: { flex: 1, minHeight: 12 },\n});\n"]},"metadata":{},"sourceType":"module"}