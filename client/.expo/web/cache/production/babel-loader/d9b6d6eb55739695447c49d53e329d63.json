{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{navigate}from\"../../RootNavigation\";var initialState={conversations:[],conversationsIds:[],interlocutorsIds:[],lastUpdatedAt:null,isLoaded:false,isFetchingConversations:false,isFetchingConversation:false};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"REQUEST_DELETE_CONVERSATION\":return _objectSpread({},state,{isDeleting:true});case\"REQUEST_DELETE_CONVERSATION:SUCCESS\":return _objectSpread({},initialState,{isDeleting:false});case\"REQUEST_DELETE_CONVERSATION:ERROR\":return _objectSpread({},state,{isFetchingConversations:false});case\"REQUEST_CONVERSATIONS\":return _objectSpread({},state,{isFetchingConversations:true});case\"REQUEST_CONVERSATIONS:SUCCESS\":return _objectSpread({},state,{lastUpdatedAt:action.receivedAt,isLoaded:true,isFetchingConversations:false},action.data);case\"RECEIVE_CONVERSATIONS:ERROR\":return _objectSpread({},state,{isFetchingConversations:false});case\"REQUEST_CONVERSATION\":return _objectSpread({},state,{isFetchingConversation:true});case\"REQUEST_CONVERSATION:SUCCESS\":state.conversations.splice(state.conversations.map(function(c){return c._id;}).indexOf(action.data._id),1,action.data);return _objectSpread({},state,{lastUpdatedAt:action.receivedAt,isLoaded:true,isFetchingConversation:false});case\"RECEIVE_CONVERSATION:ERROR\":return _objectSpread({},state,{isFetchingConversation:false});case\"RECEIVE_MESSAGE\":return _objectSpread({},state,{lastUpdatedAt:action.receivedAt,conversations:!action.newConv?[_objectSpread({},state.conversations.filter(function(conv){return conv._id===action.conversation._id;})[0],{lastMessage:action.message,messages:[action.message].concat(_toConsumableArray(state.conversations.filter(function(conv){return conv._id===action.conversation._id;})[0].messages))})].concat(_toConsumableArray(state.conversations.filter(function(conv){return conv._id!==action.conversation._id;}))):[_objectSpread({},action.conversation,{messages:[action.message]})].concat(_toConsumableArray(state.conversations)),isLoaded:true});case\"REQUEST_LOG_OUT:SUCCESS\":return initialState;default:return state;}}","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/store/reducers/chatReducer.js"],"names":["navigate","initialState","conversations","conversationsIds","interlocutorsIds","lastUpdatedAt","isLoaded","isFetchingConversations","isFetchingConversation","state","action","type","isDeleting","receivedAt","data","splice","map","c","_id","indexOf","newConv","filter","conv","conversation","lastMessage","message","messages"],"mappings":"w6BAAA,OAASA,QAAT,4BAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,aAAa,CAAE,EADI,CAEnBC,gBAAgB,CAAE,EAFC,CAGnBC,gBAAgB,CAAE,EAHC,CAInBC,aAAa,CAAE,IAJI,CAKnBC,QAAQ,CAAE,KALS,CAMnBC,uBAAuB,CAAE,KANN,CAOnBC,sBAAsB,CAAE,KAPL,CAArB,CAUA,cAAe,WAAwC,IAA9BC,CAAAA,KAA8B,2DAAtBR,YAAsB,IAARS,CAAAA,MAAQ,2CACrD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,6BAAL,CACE,wBACKF,KADL,EAEEG,UAAU,CAAE,IAFd,GAIF,IAAK,qCAAL,CACE,wBACKX,YADL,EAEEW,UAAU,CAAE,KAFd,GAIF,IAAK,mCAAL,CACE,wBACKH,KADL,EAEEF,uBAAuB,CAAE,KAF3B,GAIF,IAAK,uBAAL,CACE,wBACKE,KADL,EAEEF,uBAAuB,CAAE,IAF3B,GAIF,IAAK,+BAAL,CACE,wBACKE,KADL,EAEEJ,aAAa,CAAEK,MAAM,CAACG,UAFxB,CAGEP,QAAQ,CAAE,IAHZ,CAIEC,uBAAuB,CAAE,KAJ3B,EAKKG,MAAM,CAACI,IALZ,EAOF,IAAK,6BAAL,CACE,wBACKL,KADL,EAEEF,uBAAuB,CAAE,KAF3B,GAIF,IAAK,sBAAL,CACE,wBACKE,KADL,EAEED,sBAAsB,CAAE,IAF1B,GAIF,IAAK,8BAAL,CACEC,KAAK,CAACP,aAAN,CAAoBa,MAApB,CACEN,KAAK,CAACP,aAAN,CACGc,GADH,CACO,SAAUC,CAAV,CAAa,CAChB,MAAOA,CAAAA,CAAC,CAACC,GAAT,CACD,CAHH,EAIGC,OAJH,CAIWT,MAAM,CAACI,IAAP,CAAYI,GAJvB,CADF,CAME,CANF,CAOER,MAAM,CAACI,IAPT,EASA,wBACKL,KADL,EAEEJ,aAAa,CAAEK,MAAM,CAACG,UAFxB,CAGEP,QAAQ,CAAE,IAHZ,CAIEE,sBAAsB,CAAE,KAJ1B,GAMF,IAAK,4BAAL,CACE,wBACKC,KADL,EAEED,sBAAsB,CAAE,KAF1B,GAIF,IAAK,iBAAL,CACE,wBACKC,KADL,EAEEJ,aAAa,CAAEK,MAAM,CAACG,UAFxB,CAGEX,aAAa,CAAE,CAACQ,MAAM,CAACU,OAAR,mBAGJX,KAAK,CAACP,aAAN,CAAoBmB,MAApB,CACD,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACJ,GAAL,GAAaR,MAAM,CAACa,YAAP,CAAoBL,GAA3C,EADC,EAED,CAFC,CAHI,EAMPM,WAAW,CAAEd,MAAM,CAACe,OANb,CAOPC,QAAQ,EACNhB,MAAM,CAACe,OADD,4BAEHhB,KAAK,CAACP,aAAN,CAAoBmB,MAApB,CACD,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACJ,GAAL,GAAaR,MAAM,CAACa,YAAP,CAAoBL,GAA3C,EADC,EAED,CAFC,EAEEQ,QAJC,EAPD,8BAcNjB,KAAK,CAACP,aAAN,CAAoBmB,MAApB,CACD,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACJ,GAAL,GAAaR,MAAM,CAACa,YAAP,CAAoBL,GAA3C,EADC,CAdM,qBAmBJR,MAAM,CAACa,YAnBH,EAmBiBG,QAAQ,CAAE,CAAChB,MAAM,CAACe,OAAR,CAnB3B,8BAoBNhB,KAAK,CAACP,aApBA,EAHjB,CAyBEI,QAAQ,CAAE,IAzBZ,GA2BF,IAAK,yBAAL,CACE,MAAOL,CAAAA,YAAP,CACF,QACE,MAAOQ,CAAAA,KAAP,CA3FJ,CA6FD","sourcesContent":["import { navigate } from \"../../RootNavigation\";\n\nconst initialState = {\n  conversations: [],\n  conversationsIds: [],\n  interlocutorsIds: [],\n  lastUpdatedAt: null,\n  isLoaded: false,\n  isFetchingConversations: false,\n  isFetchingConversation: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_DELETE_CONVERSATION\":\n      return {\n        ...state,\n        isDeleting: true,\n      };\n    case \"REQUEST_DELETE_CONVERSATION:SUCCESS\":\n      return {\n        ...initialState,\n        isDeleting: false,\n      };\n    case \"REQUEST_DELETE_CONVERSATION:ERROR\":\n      return {\n        ...state,\n        isFetchingConversations: false,\n      };\n    case \"REQUEST_CONVERSATIONS\":\n      return {\n        ...state,\n        isFetchingConversations: true,\n      };\n    case \"REQUEST_CONVERSATIONS:SUCCESS\":\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        isFetchingConversations: false,\n        ...action.data,\n      };\n    case \"RECEIVE_CONVERSATIONS:ERROR\":\n      return {\n        ...state,\n        isFetchingConversations: false,\n      };\n    case \"REQUEST_CONVERSATION\":\n      return {\n        ...state,\n        isFetchingConversation: true,\n      };\n    case \"REQUEST_CONVERSATION:SUCCESS\":\n      state.conversations.splice(\n        state.conversations\n          .map(function (c) {\n            return c._id;\n          })\n          .indexOf(action.data._id),\n        1,\n        action.data\n      );\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        isFetchingConversation: false,\n      };\n    case \"RECEIVE_CONVERSATION:ERROR\":\n      return {\n        ...state,\n        isFetchingConversation: false,\n      };\n    case \"RECEIVE_MESSAGE\":\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        conversations: !action.newConv\n          ? [\n              {\n                ...state.conversations.filter(\n                  (conv) => conv._id === action.conversation._id\n                )[0],\n                lastMessage: action.message,\n                messages: [\n                  action.message,\n                  ...state.conversations.filter(\n                    (conv) => conv._id === action.conversation._id\n                  )[0].messages,\n                ],\n              },\n              ...state.conversations.filter(\n                (conv) => conv._id !== action.conversation._id\n              ),\n            ]\n          : [\n              { ...action.conversation, messages: [action.message] },\n              ...state.conversations,\n            ],\n        isLoaded: true,\n      };\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}