{"ast":null,"code":"import React,{useState,useContext,useEffect}from\"react\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import FlatList from\"react-native-web/dist/exports/FlatList\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{Icon,ThemeContext}from\"react-native-elements\";import{connect}from\"react-redux\";import _ from\"lodash\";import AppNavbar from\"./AppNavbar\";import\"moment/locale/fr\";import moment from\"moment\";import{fetchMyJobs as _fetchMyJobs}from\"../actions/jobsActions\";var Item=function Item(_ref){var item=_ref.item,navigation=_ref.navigation;var _useContext=useContext(ThemeContext),theme=_useContext.theme;return React.createElement(TouchableOpacity,{onPress:function onPress(){return navigation.navigate(\"Edit\",{job:item});}},React.createElement(View,{style:{paddingTop:8,paddingHorizontal:20,marginVertical:4,marginHorizontal:0,borderBottomWidth:1,borderBottomColor:theme.colors.grey4,paddingVertical:12,flexDirection:\"row\"}},React.createElement(View,{style:{flex:1}},React.createElement(Text,{style:{textAlignVertical:\"bottom\",fontWeight:\"bold\",fontSize:16}},item.jobTitle,\" en \",item.employmentType),React.createElement(View,{style:{flexDirection:\"row\"}},React.createElement(Icon,{name:\"briefcase\",size:20,color:\"grey\"}),React.createElement(Text,{style:{textAlignVertical:\"bottom\",marginStart:8}},item.organisation)),React.createElement(View,{style:{flexDirection:\"row\",flex:1}},React.createElement(Icon,{name:\"map-marker\",size:20}),React.createElement(Text,{style:{textAlignVertical:\"bottom\",marginStart:8,flex:1}},_.capitalize(item.city)),React.createElement(Text,{color:\"grey\",style:{color:\"grey\",fontSize:10,textAlignVertical:\"bottom\"}},_.capitalize(moment(item.publishedAt).locale(\"fr\").fromNow()))))));};var MyJobsScreen=function MyJobsScreen(_ref2){var auth=_ref2.auth,navigation=_ref2.navigation,fetchMyJobs=_ref2.fetchMyJobs;useEffect(function(){function fetchData(){fetchMyJobs();}fetchData();},[]);return React.createElement(View,{style:{flex:1}},React.createElement(AppNavbar,{title:\"Mes offres d'emploi\",navigation:navigation,noRightButton:true,leftButton:\"back\"}),React.createElement(FlatList,{data:auth.user.jobs,renderItem:function renderItem(_ref3){var item=_ref3.item;return React.createElement(Item,{item:item,navigation:navigation});},keyExtractor:function keyExtractor(item){return item._id;}}));};var mapStateToProps=function mapStateToProps(state){return{jobs:state.jobs,auth:state.auth};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchMyJobs:function fetchMyJobs(){return dispatch(_fetchMyJobs());}};};export default connect(mapStateToProps,mapDispatchToProps)(MyJobsScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/frontend/src/components/MyJobsReadScreen.js"],"names":["React","useState","useContext","useEffect","Icon","ThemeContext","connect","_","AppNavbar","moment","fetchMyJobs","Item","item","navigation","theme","navigate","job","paddingTop","paddingHorizontal","marginVertical","marginHorizontal","borderBottomWidth","borderBottomColor","colors","grey4","paddingVertical","flexDirection","flex","textAlignVertical","fontWeight","fontSize","jobTitle","employmentType","marginStart","organisation","capitalize","city","color","publishedAt","locale","fromNow","MyJobsScreen","auth","fetchData","user","jobs","_id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { View, Text, FlatList, TouchableOpacity } from \"react-native\";\nimport { Icon, ThemeContext } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport AppNavbar from \"./AppNavbar\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchMyJobs } from \"../actions/jobsActions\";\n\nconst Item = ({ item, navigation }) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <TouchableOpacity\n      onPress={() => navigation.navigate(\"Edit\", { job: item })}\n    >\n      <View\n        style={{\n          paddingTop: 8,\n          paddingHorizontal: 20,\n          marginVertical: 4,\n          marginHorizontal: 0,\n          borderBottomWidth: 1,\n          borderBottomColor: theme.colors.grey4,\n          paddingVertical: 12,\n          flexDirection: \"row\"\n        }}\n      >\n        <View style={{ flex: 1 }}>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16\n            }}\n          >\n            {item.jobTitle} en {item.employmentType}\n          </Text>\n          <View style={{ flexDirection: \"row\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              {item.organisation}\n            </Text>\n          </View>\n          <View style={{ flexDirection: \"row\", flex: 1 }}>\n            <Icon name=\"map-marker\" size={20} />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {_.capitalize(item.city)}\n            </Text>\n            <Text\n              color=\"grey\"\n              style={{\n                color: \"grey\",\n                fontSize: 10,\n                textAlignVertical: \"bottom\"\n              }}\n            >\n              {_.capitalize(\n                moment(item.publishedAt)\n                  .locale(\"fr\")\n                  .fromNow()\n              )}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst MyJobsScreen = ({ auth, navigation, fetchMyJobs }) => {\n  useEffect(() => {\n    function fetchData() {\n      fetchMyJobs();\n    }\n    fetchData();\n  }, []);\n\n  // const myJobs = auth.user.jobs.reverse();\n\n  return (\n    <View style={{ flex: 1 }}>\n      <AppNavbar\n        title=\"Mes offres d'emploi\"\n        navigation={navigation}\n        noRightButton={true}\n        leftButton=\"back\"\n      />\n      <FlatList\n        data={auth.user.jobs}\n        renderItem={({ item }) => <Item item={item} navigation={navigation} />}\n        keyExtractor={item => item._id}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    jobs: state.jobs,\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMyJobs: () => dispatch(fetchMyJobs())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyJobsScreen);\n"]},"metadata":{},"sourceType":"module"}