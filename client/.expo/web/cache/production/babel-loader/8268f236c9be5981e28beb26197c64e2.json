{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect,useCallback,useContext}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import FlatList from\"react-native-web/dist/exports/FlatList\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import RefreshControl from\"react-native-web/dist/exports/RefreshControl\";import TextInput from\"react-native-web/dist/exports/TextInput\";import{SearchBar,Avatar,ThemeContext,Button,Icon}from\"react-native-elements\";import _ from\"lodash\";import\"moment/locale/fr\";import moment from\"moment\";import{fetchUsers}from\"../../actions/usersActions\";import{fetchConversations}from\"../../actions/chatActions\";import{apiConfig}from\"../../config\";import{showOverlay}from\"../../actions/overlayAction\";var SearchResultItem=function SearchResultItem(_ref){var _item$avatar;var item=_ref.item,theme=_ref.theme,navigation=_ref.navigation,chat=_ref.chat,dispatch=_ref.dispatch;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showMessageForm=_useState2[0],setShowMessageForm=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),newMessage=_useState4[0],setNewMessage=_useState4[1];var fullName=_.capitalize(item.firstname)+\" \"+_.capitalize(item.lastname);return React.createElement(TouchableOpacity,{onPress:chat.interlocutorsIds.includes(item._id)?function(){return navigation.navigate(\"Room\",{title:fullName,conversation:chat.convIdsWithPartsIds.filter(function(element){return element.participants.includes(item._id)===true;}).filter(function(conv){return conv.participants.length===2;})[0]});}:function(){return dispatch(showOverlay({form:{action:sendMessage,inputName:\"text\",actionParams:{recipients:[item._id]},message:\"Demarrer une conversation avec \"+fullName}}));}},React.createElement(View,{style:{flexDirection:\"row\",alignItems:\"center\",paddingVertical:4,paddingHorizontal:8,borderBottomColor:theme.colors.grey5,borderBottomWidth:1}},React.createElement(View,{style:{alignContent:\"center\",justifyContent:\"center\",alignItems:\"center\",marginRight:12}},item.avatar?React.createElement(Avatar,{source:{uri:\"https://siee-gate.herokuapp.com/api/files/avatar/\"+((_item$avatar=item.avatar)==null?void 0:_item$avatar.filename)},size:\"small\"}):React.createElement(Avatar,{size:\"small\",title:item.firstname[0].concat(item.lastname[0]).toUpperCase()})),!showMessageForm?React.createElement(Text,{style:{paddingLeft:12}},fullName):React.createElement(View,{style:{flexDirection:\"row\",backgroundColor:\"white\",alignItems:\"center\",justifyContent:\"center\",alignContent:\"center\",marginTop:8}},React.createElement(TextInput,{value:newMessage,multiline:true,placeholder:\"Ecrivez ici.\",placeholderTextColor:\"grey\",onChangeText:function onChangeText(text){return setNewMessage(text);},style:{backgroundColor:theme.colors.grey5,borderColor:theme.colors.grey4,borderWidth:1,borderRadius:5,paddingVertical:2,paddingHorizontal:4,maxHeight:80}}),React.createElement(Button,{containerStyle:{height:30},icon:React.createElement(Icon,{name:\"send\",size:20,color:newMessage?theme.colors.primary:theme.colors.grey2}),disabled:!newMessage,type:\"clear\",onPress:function onPress(){onSendMessage(newMessage,item._id);setNewMessage(\"\");setShowMessageForm(false);}}))));};var Item=function Item(_ref2){var _item$participants$3,_item$participants$4,_item$participants$5,_item$participants$6,_item$lastMessage,_item$lastMessage2,_item$lastMessage3;var item=_ref2.item,navigation=_ref2.navigation,auth=_ref2.auth,theme=_ref2.theme,dispatch=_ref2.dispatch;var listParticipants=function listParticipants(){var _item$participants,_item$participants3;_.remove(item.participants,function(participant){return participant._id===(auth==null?void 0:auth.user._id);});if(((_item$participants=item.participants)==null?void 0:_item$participants.length)>1){var _item$participants2;var participantsList=(_item$participants2=item.participants)==null?void 0:_item$participants2.map(function(participant){return _.capitalize(participant.firstname);});return participantsList.toString().replace(\",\",\", \");}else if(((_item$participants3=item.participants)==null?void 0:_item$participants3.length)===1){var _item$participants$,_item$participants$2;return _.capitalize((_item$participants$=item.participants[0])==null?void 0:_item$participants$.firstname).concat(\" \",_.capitalize((_item$participants$2=item.participants[0])==null?void 0:_item$participants$2.lastname));}else{return\"Compte supprimÃ©\";}};var title=listParticipants();var participants=listParticipants(item);if(!item)return null;return React.createElement(TouchableOpacity,{onPress:function onPress(){return navigation.navigate(\"Room\",{title:title,conversation_id:item._id});}},React.createElement(View,{style:{paddingHorizontal:8,paddingVertical:8,borderBottomColor:\"white\",borderBottomWidth:3,backgroundColor:\"white\"}},React.createElement(View,{style:{flexDirection:\"row\"}},React.createElement(View,{style:{alignContent:\"center\",justifyContent:\"center\",paddingRight:8}},((_item$participants$3=item.participants[0])==null?void 0:_item$participants$3.avatar)?React.createElement(Avatar,{source:{uri:apiConfig.baseUrl+\"/files/avatars/\"+((_item$participants$4=item.participants[0])==null?void 0:_item$participants$4.avatar)},size:\"medium\"}):React.createElement(Avatar,{size:\"medium\",title:(_item$participants$5=item.participants[0])==null?void 0:_item$participants$5.firstname[0].concat((_item$participants$6=item.participants[0])==null?void 0:_item$participants$6.lastname[0]).toUpperCase()})),React.createElement(View,{style:{flex:1,justifyContent:\"flex-start\"}},React.createElement(View,{style:{flexDirection:\"row\",justifyContent:\"space-between\"}},React.createElement(Text,{style:{textAlignVertical:\"bottom\",fontSize:16,fontWeight:\"bold\"}},participants),React.createElement(Text,{color:\"grey\",style:{color:\"grey\",fontSize:10,textAlignVertical:\"bottom\"}},_.capitalize(moment((_item$lastMessage=item.lastMessage)==null?void 0:_item$lastMessage.sentAt).locale(\"fr\").fromNow()))),React.createElement(View,{style:{flexDirection:\"row\",alignItems:\"center\"}},React.createElement(View,{style:{alignContent:\"center\",justifyContent:\"center\"}},((_item$lastMessage2=item.lastMessage)==null?void 0:_item$lastMessage2.sender)===(auth==null?void 0:auth.user._id)?React.createElement(Icon,{name:\"arrow-top-right\",color:theme.colors.grey1,size:14}):React.createElement(Icon,{name:\"arrow-bottom-left\",color:theme.colors.grey3,size:14})),React.createElement(Text,{style:{textAlignVertical:\"center\",fontSize:14,flex:1}},(_item$lastMessage3=item.lastMessage)==null?void 0:_item$lastMessage3.text))))));};var ChatLobbyScreen=function ChatLobbyScreen(_ref3){var navigation=_ref3.navigation;var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),refreshing=_useState6[0],setRefreshing=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),search=_useState8[0],setSearch=_useState8[1];var _useContext=useContext(ThemeContext),theme=_useContext.theme;var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state;}),chat=_useSelector.chat,users=_useSelector.users,auth=_useSelector.auth;useEffect(function(){function fetchData(){dispatch(fetchConversations());dispatch(fetchUsers());}fetchData();},[]);var onRefresh=useCallback(function(){setRefreshing(true);dispatch(fetchConversations());setRefreshing(false);},[refreshing]);var searchProcess=function searchProcess(){var _users$users;var searchResults=[];(_users$users=users.users)==null?void 0:_users$users.forEach(function(user){if(user._id!==(auth==null?void 0:auth.user._id)){if(user.firstname.includes(search.toLowerCase())===true||user.lastname.includes(search.toLowerCase())){searchResults.push(user);}}});return searchResults;};return React.createElement(View,{style:{flex:1}},chat.isLoaded?chat.conversations.length>0?React.createElement(FlatList,{data:chat.conversations,renderItem:function renderItem(_ref4){var item=_ref4.item;return React.createElement(Item,{item:item,auth:auth,navigation:navigation,theme:theme,dispatch:dispatch});},keyExtractor:function keyExtractor(item){return item._id;},refreshControl:React.createElement(RefreshControl,{refreshing:refreshing,onRefresh:onRefresh})}):React.createElement(View,{style:{flex:1,alignContent:\"center\",justifyContent:\"center\"}},React.createElement(Text,{style:{textAlign:\"center\",color:theme.colors.grey3}},\"Aucune conversation\"),React.createElement(Button,{title:\"Rafraichir\",type:\"clear\",onPress:function onPress(){return dispatch(fetchConversations());}})):React.createElement(View,{style:{flex:1,alignContent:\"center\",justifyContent:\"center\"}},React.createElement(ActivityIndicator,{size:\"large\"})));};export default ChatLobbyScreen;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/Messages/MessagesLobbyScreen.js"],"names":["React","useState","useEffect","useCallback","useContext","useDispatch","useSelector","SearchBar","Avatar","ThemeContext","Button","Icon","_","moment","fetchUsers","fetchConversations","apiConfig","showOverlay","SearchResultItem","item","theme","navigation","chat","dispatch","showMessageForm","setShowMessageForm","newMessage","setNewMessage","fullName","capitalize","firstname","lastname","interlocutorsIds","includes","_id","navigate","title","conversation","convIdsWithPartsIds","filter","element","participants","conv","length","form","action","sendMessage","inputName","actionParams","recipients","message","flexDirection","alignItems","paddingVertical","paddingHorizontal","borderBottomColor","colors","grey5","borderBottomWidth","alignContent","justifyContent","marginRight","avatar","uri","filename","concat","toUpperCase","paddingLeft","backgroundColor","marginTop","text","borderColor","grey4","borderWidth","borderRadius","maxHeight","height","primary","grey2","onSendMessage","Item","auth","listParticipants","remove","participant","user","participantsList","map","toString","replace","conversation_id","paddingRight","baseUrl","flex","textAlignVertical","fontSize","fontWeight","color","lastMessage","sentAt","locale","fromNow","sender","grey1","grey3","ChatLobbyScreen","refreshing","setRefreshing","search","setSearch","state","users","fetchData","onRefresh","searchProcess","searchResults","forEach","toLowerCase","push","isLoaded","conversations","textAlign"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,WAArC,CAAkDC,UAAlD,KAAoE,OAApE,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,C,2cAUA,OACEC,SADF,CAEEC,MAFF,CAGEC,YAHF,CAIEC,MAJF,CAKEC,IALF,KAMO,uBANP,CAOA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,MAAO,kBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,OAASC,UAAT,kCACA,OAASC,kBAAT,iCACA,OAASC,SAAT,oBACA,OAASC,WAAT,mCAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAiD,qBAA9CC,CAAAA,IAA8C,MAA9CA,IAA8C,CAAxCC,KAAwC,MAAxCA,KAAwC,CAAjCC,UAAiC,MAAjCA,UAAiC,CAArBC,IAAqB,MAArBA,IAAqB,CAAfC,QAAe,MAAfA,QAAe,eAC1BtB,QAAQ,CAAC,KAAD,CADkB,wCACjEuB,eADiE,eAChDC,kBADgD,8BAEpCxB,QAAQ,CAAC,EAAD,CAF4B,yCAEjEyB,UAFiE,eAErDC,aAFqD,eAGxE,GAAMC,CAAAA,QAAQ,CACZhB,CAAC,CAACiB,UAAF,CAAaV,IAAI,CAACW,SAAlB,EAA+B,GAA/B,CAAqClB,CAAC,CAACiB,UAAF,CAAaV,IAAI,CAACY,QAAlB,CADvC,CAGA,MACE,qBAAC,gBAAD,EACE,OAAO,CACLT,IAAI,CAACU,gBAAL,CAAsBC,QAAtB,CAA+Bd,IAAI,CAACe,GAApC,EACI,iBACEb,CAAAA,UAAU,CAACc,QAAX,CAAoB,MAApB,CAA4B,CAC1BC,KAAK,CAAER,QADmB,CAE1BS,YAAY,CAAEf,IAAI,CAACgB,mBAAL,CACXC,MADW,CAEV,SAACC,OAAD,QACEA,CAAAA,OAAO,CAACC,YAAR,CAAqBR,QAArB,CAA8Bd,IAAI,CAACe,GAAnC,IAA4C,IAD9C,EAFU,EAKXK,MALW,CAKJ,SAACG,IAAD,QAAUA,CAAAA,IAAI,CAACD,YAAL,CAAkBE,MAAlB,GAA6B,CAAvC,EALI,EAKsC,CALtC,CAFY,CAA5B,CADF,EADJ,CAWI,iBACEpB,CAAAA,QAAQ,CACNN,WAAW,CAAC,CACV2B,IAAI,CAAE,CACJC,MAAM,CAAEC,WADJ,CAEJC,SAAS,CAAE,MAFP,CAGJC,YAAY,CAAE,CAAEC,UAAU,CAAE,CAAC9B,IAAI,CAACe,GAAN,CAAd,CAHV,CAIJgB,OAAO,CAAE,kCAAoCtB,QAJzC,CADI,CAAD,CADL,CADV,EAbR,EA0BE,oBAAC,IAAD,EACE,KAAK,CAAE,CACLuB,aAAa,CAAE,KADV,CAELC,UAAU,CAAE,QAFP,CAGLC,eAAe,CAAE,CAHZ,CAILC,iBAAiB,CAAE,CAJd,CAKLC,iBAAiB,CAAEnC,KAAK,CAACoC,MAAN,CAAaC,KAL3B,CAMLC,iBAAiB,CAAE,CANd,CADT,EAUE,oBAAC,IAAD,EACE,KAAK,CAAE,CACLC,YAAY,CAAE,QADT,CAELC,cAAc,CAAE,QAFX,CAGLR,UAAU,CAAE,QAHP,CAILS,WAAW,CAAE,EAJR,CADT,EAQG1C,IAAI,CAAC2C,MAAL,CACC,oBAAC,MAAD,EACE,MAAM,CAAE,CACNC,GAAG,oEAAsD5C,IAAI,CAAC2C,MAA3D,eAAsD,aAAaE,QAAnE,CADG,CADV,CAIE,IAAI,CAAC,OAJP,EADD,CAQC,oBAAC,MAAD,EACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAE7C,IAAI,CAACW,SAAL,CAAe,CAAf,EAAkBmC,MAAlB,CAAyB9C,IAAI,CAACY,QAAL,CAAc,CAAd,CAAzB,EAA2CmC,WAA3C,EAFT,EAhBJ,CAVF,CAgCG,CAAC1C,eAAD,CACC,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAE2C,WAAW,CAAE,EAAf,CAAb,EAAmCvC,QAAnC,CADD,CAGC,oBAAC,IAAD,EACE,KAAK,CAAE,CACLuB,aAAa,CAAE,KADV,CAELiB,eAAe,CAAE,OAFZ,CAGLhB,UAAU,CAAE,QAHP,CAILQ,cAAc,CAAE,QAJX,CAKLD,YAAY,CAAE,QALT,CAMLU,SAAS,CAAE,CANN,CADT,EAUE,oBAAC,SAAD,EACE,KAAK,CAAE3C,UADT,CAEE,SAAS,KAFX,CAGE,WAAW,CAAC,cAHd,CAIE,oBAAoB,CAAC,MAJvB,CAKE,YAAY,CAAE,sBAAC4C,IAAD,QAAU3C,CAAAA,aAAa,CAAC2C,IAAD,CAAvB,EALhB,CAME,KAAK,CAAE,CACLF,eAAe,CAAEhD,KAAK,CAACoC,MAAN,CAAaC,KADzB,CAELc,WAAW,CAAEnD,KAAK,CAACoC,MAAN,CAAagB,KAFrB,CAGLC,WAAW,CAAE,CAHR,CAILC,YAAY,CAAE,CAJT,CAKLrB,eAAe,CAAE,CALZ,CAMLC,iBAAiB,CAAE,CANd,CAOLqB,SAAS,CAAE,EAPN,CANT,EAVF,CA0BE,oBAAC,MAAD,EACE,cAAc,CAAE,CAAEC,MAAM,CAAE,EAAV,CADlB,CAEE,IAAI,CACF,oBAAC,IAAD,EACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAE,EAFR,CAGE,KAAK,CAAElD,UAAU,CAAGN,KAAK,CAACoC,MAAN,CAAaqB,OAAhB,CAA0BzD,KAAK,CAACoC,MAAN,CAAasB,KAH1D,EAHJ,CASE,QAAQ,CAAE,CAACpD,UATb,CAUE,IAAI,CAAC,OAVP,CAWE,OAAO,CAAE,kBAAM,CACbqD,aAAa,CAACrD,UAAD,CAAaP,IAAI,CAACe,GAAlB,CAAb,CACAP,aAAa,CAAC,EAAD,CAAb,CACAF,kBAAkB,CAAC,KAAD,CAAlB,CACD,CAfH,EA1BF,CAnCJ,CA1BF,CADF,CA8GD,CApHD,CAsHA,GAAMuD,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,OAAiD,oJAA9C7D,CAAAA,IAA8C,OAA9CA,IAA8C,CAAxCE,UAAwC,OAAxCA,UAAwC,CAA5B4D,IAA4B,OAA5BA,IAA4B,CAAtB7D,KAAsB,OAAtBA,KAAsB,CAAfG,QAAe,OAAfA,QAAe,CAC5D,GAAM2D,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,4CAC7BtE,CAAC,CAACuE,MAAF,CACEhE,IAAI,CAACsB,YADP,CAEE,SAAC2C,WAAD,QAAiBA,CAAAA,WAAW,CAAClD,GAAZ,IAAoB+C,IAApB,cAAoBA,IAAI,CAAEI,IAAN,CAAWnD,GAA/B,CAAjB,EAFF,EAKA,GAAI,qBAAAf,IAAI,CAACsB,YAAL,kCAAmBE,MAAnB,EAA4B,CAAhC,CAAmC,yBACjC,GAAM2C,CAAAA,gBAAgB,sBAAGnE,IAAI,CAACsB,YAAR,eAAG,oBAAmB8C,GAAnB,CAAuB,SAACH,WAAD,QAC9CxE,CAAAA,CAAC,CAACiB,UAAF,CAAauD,WAAW,CAACtD,SAAzB,CAD8C,EAAvB,CAAzB,CAGA,MAAOwD,CAAAA,gBAAgB,CAACE,QAAjB,GAA4BC,OAA5B,CAAoC,GAApC,CAAyC,IAAzC,CAAP,CACD,CALD,IAKO,IAAI,sBAAAtE,IAAI,CAACsB,YAAL,mCAAmBE,MAAnB,IAA8B,CAAlC,CAAqC,8CAC1C,MAAO/B,CAAAA,CAAC,CAACiB,UAAF,sBAAaV,IAAI,CAACsB,YAAL,CAAkB,CAAlB,CAAb,eAAa,oBAAsBX,SAAnC,EAA8CmC,MAA9C,CACL,GADK,CAELrD,CAAC,CAACiB,UAAF,uBAAaV,IAAI,CAACsB,YAAL,CAAkB,CAAlB,CAAb,eAAa,qBAAsBV,QAAnC,CAFK,CAAP,CAID,CALM,IAKA,CACL,MAAO,iBAAP,CACD,CACF,CAnBD,CAqBA,GAAMK,CAAAA,KAAK,CAAG8C,gBAAgB,EAA9B,CACA,GAAMzC,CAAAA,YAAY,CAAGyC,gBAAgB,CAAC/D,IAAD,CAArC,CAEA,GAAI,CAACA,IAAL,CAAW,MAAO,KAAP,CAEX,MACE,qBAAC,gBAAD,EACE,OAAO,CAAE,yBACPE,CAAAA,UAAU,CAACc,QAAX,CAAoB,MAApB,CAA4B,CAC1BC,KAAK,CAALA,KAD0B,CAE1BsD,eAAe,CAAEvE,IAAI,CAACe,GAFI,CAA5B,CADO,EADX,EAQE,oBAAC,IAAD,EACE,KAAK,CAAE,CACLoB,iBAAiB,CAAE,CADd,CAELD,eAAe,CAAE,CAFZ,CAGLE,iBAAiB,CAAE,OAHd,CAILG,iBAAiB,CAAE,CAJd,CAKLU,eAAe,CAAE,OALZ,CADT,EASE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEjB,aAAa,CAAE,KAAjB,CAAb,EACE,oBAAC,IAAD,EACE,KAAK,CAAE,CACLQ,YAAY,CAAE,QADT,CAELC,cAAc,CAAE,QAFX,CAGL+B,YAAY,CAAE,CAHT,CADT,EAOG,uBAAAxE,IAAI,CAACsB,YAAL,CAAkB,CAAlB,qCAAsBqB,MAAtB,EACC,oBAAC,MAAD,EACE,MAAM,CAAE,CACNC,GAAG,CAAK/C,SAAS,CAAC4E,OAAf,0CAAwCzE,IAAI,CAACsB,YAAL,CAAkB,CAAlB,CAAxC,eAAwC,qBAAsBqB,MAA9D,CADG,CADV,CAIE,IAAI,CAAC,QAJP,EADD,CAQC,oBAAC,MAAD,EACE,IAAI,CAAC,QADP,CAEE,KAAK,uBAAE3C,IAAI,CAACsB,YAAL,CAAkB,CAAlB,CAAF,eAAE,qBAAsBX,SAAtB,CAAgC,CAAhC,EACJmC,MADI,uBACG9C,IAAI,CAACsB,YAAL,CAAkB,CAAlB,CADH,eACG,qBAAsBV,QAAtB,CAA+B,CAA/B,CADH,EAEJmC,WAFI,EAFT,EAfJ,CADF,CAwBE,oBAAC,IAAD,EACE,KAAK,CAAE,CACL2B,IAAI,CAAE,CADD,CAELjC,cAAc,CAAE,YAFX,CADT,EAME,oBAAC,IAAD,EACE,KAAK,CAAE,CACLT,aAAa,CAAE,KADV,CAELS,cAAc,CAAE,eAFX,CADT,EAME,oBAAC,IAAD,EACE,KAAK,CAAE,CACLkC,iBAAiB,CAAE,QADd,CAELC,QAAQ,CAAE,EAFL,CAGLC,UAAU,CAAE,MAHP,CADT,EAOGvD,YAPH,CANF,CAeE,oBAAC,IAAD,EACE,KAAK,CAAC,MADR,CAEE,KAAK,CAAE,CACLwD,KAAK,CAAE,MADF,CAELF,QAAQ,CAAE,EAFL,CAGLD,iBAAiB,CAAE,QAHd,CAFT,EAQGlF,CAAC,CAACiB,UAAF,CACChB,MAAM,oBAACM,IAAI,CAAC+E,WAAN,eAAC,kBAAkBC,MAAnB,CAAN,CAAiCC,MAAjC,CAAwC,IAAxC,EAA8CC,OAA9C,EADD,CARH,CAfF,CANF,CAkCE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAElD,aAAa,CAAE,KAAjB,CAAwBC,UAAU,CAAE,QAApC,CAAb,EACE,oBAAC,IAAD,EACE,KAAK,CAAE,CAAEO,YAAY,CAAE,QAAhB,CAA0BC,cAAc,CAAE,QAA1C,CADT,EAGG,qBAAAzC,IAAI,CAAC+E,WAAL,kCAAkBI,MAAlB,KAA6BrB,IAA7B,cAA6BA,IAAI,CAAEI,IAAN,CAAWnD,GAAxC,EACC,oBAAC,IAAD,EACE,IAAI,CAAC,iBADP,CAEE,KAAK,CAAEd,KAAK,CAACoC,MAAN,CAAa+C,KAFtB,CAGE,IAAI,CAAE,EAHR,EADD,CAOC,oBAAC,IAAD,EACE,IAAI,CAAC,mBADP,CAEE,KAAK,CAAEnF,KAAK,CAACoC,MAAN,CAAagD,KAFtB,CAGE,IAAI,CAAE,EAHR,EAVJ,CADF,CAkBE,oBAAC,IAAD,EACE,KAAK,CAAE,CACLV,iBAAiB,CAAE,QADd,CAELC,QAAQ,CAAE,EAFL,CAGLF,IAAI,CAAE,CAHD,CADT,sBAOG1E,IAAI,CAAC+E,WAPR,eAOG,mBAAkB5B,IAPrB,CAlBF,CAlCF,CAxBF,CATF,CARF,CADF,CA6GD,CAxID,CA0IA,GAAMmC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,OAAoB,IAAjBpF,CAAAA,UAAiB,OAAjBA,UAAiB,gBACNpB,QAAQ,CAAC,KAAD,CADF,yCACnCyG,UADmC,eACvBC,aADuB,8BAEd1G,QAAQ,CAAC,EAAD,CAFM,yCAEnC2G,MAFmC,eAE3BC,SAF2B,+BAGxBzG,UAAU,CAACK,YAAD,CAHc,CAGlCW,KAHkC,aAGlCA,KAHkC,CAI1C,GAAMG,CAAAA,QAAQ,CAAGlB,WAAW,EAA5B,CAJ0C,iBAKZC,WAAW,CAAC,SAACwG,KAAD,QAAWA,CAAAA,KAAX,EAAD,CALC,CAKlCxF,IALkC,cAKlCA,IALkC,CAK5ByF,KAL4B,cAK5BA,KAL4B,CAKrB9B,IALqB,cAKrBA,IALqB,CAO1C/E,SAAS,CAAC,UAAM,CACd,QAAS8G,CAAAA,SAAT,EAAqB,CACnBzF,QAAQ,CAACR,kBAAkB,EAAnB,CAAR,CACAQ,QAAQ,CAACT,UAAU,EAAX,CAAR,CACD,CACDkG,SAAS,GACV,CANQ,CAMN,EANM,CAAT,CAQA,GAAMC,CAAAA,SAAS,CAAG9G,WAAW,CAAC,UAAM,CAClCwG,aAAa,CAAC,IAAD,CAAb,CACApF,QAAQ,CAACR,kBAAkB,EAAnB,CAAR,CACA4F,aAAa,CAAC,KAAD,CAAb,CACD,CAJ4B,CAI1B,CAACD,UAAD,CAJ0B,CAA7B,CAMA,GAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,kBAC1B,GAAMC,CAAAA,aAAa,CAAG,EAAtB,CACA,cAAAJ,KAAK,CAACA,KAAN,4BAAaK,OAAb,CAAqB,SAAC/B,IAAD,CAAU,CAC7B,GAAIA,IAAI,CAACnD,GAAL,IAAa+C,IAAb,cAAaA,IAAI,CAAEI,IAAN,CAAWnD,GAAxB,CAAJ,CAAiC,CAC/B,GACEmD,IAAI,CAACvD,SAAL,CAAeG,QAAf,CAAwB2E,MAAM,CAACS,WAAP,EAAxB,IAAkD,IAAlD,EACAhC,IAAI,CAACtD,QAAL,CAAcE,QAAd,CAAuB2E,MAAM,CAACS,WAAP,EAAvB,CAFF,CAGE,CACAF,aAAa,CAACG,IAAd,CAAmBjC,IAAnB,EACD,CACF,CACF,CATD,EAUA,MAAO8B,CAAAA,aAAP,CACD,CAbD,CAeA,MACE,qBAAC,IAAD,EAAM,KAAK,CAAE,CAAEtB,IAAI,CAAE,CAAR,CAAb,EAuCGvE,IAAI,CAACiG,QAAL,CACCjG,IAAI,CAACkG,aAAL,CAAmB7E,MAAnB,CAA4B,CAA5B,CACE,oBAAC,QAAD,EACE,IAAI,CAAErB,IAAI,CAACkG,aADb,CAEE,UAAU,CAAE,8BAAGrG,CAAAA,IAAH,OAAGA,IAAH,OACV,qBAAC,IAAD,EACE,IAAI,CAAEA,IADR,CAEE,IAAI,CAAE8D,IAFR,CAGE,UAAU,CAAE5D,UAHd,CAIE,KAAK,CAAED,KAJT,CAKE,QAAQ,CAAEG,QALZ,EADU,EAFd,CAWE,YAAY,CAAE,sBAACJ,IAAD,QAAUA,CAAAA,IAAI,CAACe,GAAf,EAXhB,CAYE,cAAc,CACZ,oBAAC,cAAD,EAAgB,UAAU,CAAEwE,UAA5B,CAAwC,SAAS,CAAEO,SAAnD,EAbJ,EADF,CAkBE,oBAAC,IAAD,EACE,KAAK,CAAE,CACLpB,IAAI,CAAE,CADD,CAELlC,YAAY,CAAE,QAFT,CAGLC,cAAc,CAAE,QAHX,CADT,EAOE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAE6D,SAAS,CAAE,QAAb,CAAuBxB,KAAK,CAAE7E,KAAK,CAACoC,MAAN,CAAagD,KAA3C,CAAb,wBAPF,CAUE,oBAAC,MAAD,EACE,KAAK,CAAC,YADR,CAEE,IAAI,CAAC,OAFP,CAGE,OAAO,CAAE,yBAAMjF,CAAAA,QAAQ,CAACR,kBAAkB,EAAnB,CAAd,EAHX,EAVF,CAnBH,CAqCC,oBAAC,IAAD,EACE,KAAK,CAAE,CACL8E,IAAI,CAAE,CADD,CAELlC,YAAY,CAAE,QAFT,CAGLC,cAAc,CAAE,QAHX,CADT,EAOE,oBAAC,iBAAD,EAAmB,IAAI,CAAC,OAAxB,EAPF,CA5EJ,CADF,CAyFD,CA7HD,CA+HA,cAAe6C,CAAAA,eAAf","sourcesContent":["import React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  View,\n  Text,\n  ActivityIndicator,\n  FlatList,\n  TouchableOpacity,\n  RefreshControl,\n  TextInput,\n} from \"react-native\";\nimport {\n  SearchBar,\n  Avatar,\n  ThemeContext,\n  Button,\n  Icon,\n} from \"react-native-elements\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport { fetchConversations } from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\nimport { showOverlay } from \"../../actions/overlayAction\";\n\nconst SearchResultItem = ({ item, theme, navigation, chat, dispatch }) => {\n  const [showMessageForm, setShowMessageForm] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const fullName =\n    _.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname);\n\n  return (\n    <TouchableOpacity\n      onPress={\n        chat.interlocutorsIds.includes(item._id)\n          ? () =>\n              navigation.navigate(\"Room\", {\n                title: fullName,\n                conversation: chat.convIdsWithPartsIds\n                  .filter(\n                    (element) =>\n                      element.participants.includes(item._id) === true\n                  )\n                  .filter((conv) => conv.participants.length === 2)[0],\n              })\n          : () =>\n              dispatch(\n                showOverlay({\n                  form: {\n                    action: sendMessage,\n                    inputName: \"text\",\n                    actionParams: { recipients: [item._id] },\n                    message: \"Demarrer une conversation avec \" + fullName,\n                  },\n                })\n              )\n      }\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          paddingVertical: 4,\n          paddingHorizontal: 8,\n          borderBottomColor: theme.colors.grey5,\n          borderBottomWidth: 1,\n        }}\n      >\n        <View\n          style={{\n            alignContent: \"center\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginRight: 12,\n          }}\n        >\n          {item.avatar ? (\n            <Avatar\n              source={{\n                uri: `https://siee-gate.herokuapp.com/api/files/avatar/${item.avatar?.filename}`,\n              }}\n              size=\"small\"\n            />\n          ) : (\n            <Avatar\n              size=\"small\"\n              title={item.firstname[0].concat(item.lastname[0]).toUpperCase()}\n            />\n          )}\n        </View>\n        {!showMessageForm ? (\n          <Text style={{ paddingLeft: 12 }}>{fullName}</Text>\n        ) : (\n          <View\n            style={{\n              flexDirection: \"row\",\n              backgroundColor: \"white\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              marginTop: 8,\n            }}\n          >\n            <TextInput\n              value={newMessage}\n              multiline\n              placeholder=\"Ecrivez ici.\"\n              placeholderTextColor=\"grey\"\n              onChangeText={(text) => setNewMessage(text)}\n              style={{\n                backgroundColor: theme.colors.grey5,\n                borderColor: theme.colors.grey4,\n                borderWidth: 1,\n                borderRadius: 5,\n                paddingVertical: 2,\n                paddingHorizontal: 4,\n                maxHeight: 80,\n              }}\n            />\n            <Button\n              containerStyle={{ height: 30 }}\n              icon={\n                <Icon\n                  name=\"send\"\n                  size={20}\n                  color={newMessage ? theme.colors.primary : theme.colors.grey2}\n                />\n              }\n              disabled={!newMessage}\n              type=\"clear\"\n              onPress={() => {\n                onSendMessage(newMessage, item._id);\n                setNewMessage(\"\");\n                setShowMessageForm(false);\n              }}\n            />\n          </View>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst Item = ({ item, navigation, auth, theme, dispatch }) => {\n  const listParticipants = () => {\n    _.remove(\n      item.participants,\n      (participant) => participant._id === auth?.user._id\n    );\n\n    if (item.participants?.length > 1) {\n      const participantsList = item.participants?.map((participant) =>\n        _.capitalize(participant.firstname)\n      );\n      return participantsList.toString().replace(\",\", \", \");\n    } else if (item.participants?.length === 1) {\n      return _.capitalize(item.participants[0]?.firstname).concat(\n        \" \",\n        _.capitalize(item.participants[0]?.lastname)\n      );\n    } else {\n      return \"Compte supprimÃ©\";\n    }\n  };\n\n  const title = listParticipants();\n  const participants = listParticipants(item);\n\n  if (!item) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={() =>\n        navigation.navigate(\"Room\", {\n          title,\n          conversation_id: item._id,\n        })\n      }\n    >\n      <View\n        style={{\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          borderBottomColor: \"white\",\n          borderBottomWidth: 3,\n          backgroundColor: \"white\",\n        }}\n      >\n        <View style={{ flexDirection: \"row\" }}>\n          <View\n            style={{\n              alignContent: \"center\",\n              justifyContent: \"center\",\n              paddingRight: 8,\n            }}\n          >\n            {item.participants[0]?.avatar ? (\n              <Avatar\n                source={{\n                  uri: `${apiConfig.baseUrl}/files/avatars/${item.participants[0]?.avatar}`,\n                }}\n                size=\"medium\"\n              />\n            ) : (\n              <Avatar\n                size=\"medium\"\n                title={item.participants[0]?.firstname[0]\n                  .concat(item.participants[0]?.lastname[0])\n                  .toUpperCase()}\n              />\n            )}\n          </View>\n          <View\n            style={{\n              flex: 1,\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  fontSize: 16,\n                  fontWeight: \"bold\",\n                }}\n              >\n                {participants}\n              </Text>\n              <Text\n                color=\"grey\"\n                style={{\n                  color: \"grey\",\n                  fontSize: 10,\n                  textAlignVertical: \"bottom\",\n                }}\n              >\n                {_.capitalize(\n                  moment(item.lastMessage?.sentAt).locale(\"fr\").fromNow()\n                )}\n              </Text>\n            </View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <View\n                style={{ alignContent: \"center\", justifyContent: \"center\" }}\n              >\n                {item.lastMessage?.sender === auth?.user._id ? (\n                  <Icon\n                    name=\"arrow-top-right\"\n                    color={theme.colors.grey1}\n                    size={14}\n                  />\n                ) : (\n                  <Icon\n                    name=\"arrow-bottom-left\"\n                    color={theme.colors.grey3}\n                    size={14}\n                  />\n                )}\n              </View>\n              <Text\n                style={{\n                  textAlignVertical: \"center\",\n                  fontSize: 14,\n                  flex: 1,\n                }}\n              >\n                {item.lastMessage?.text}\n              </Text>\n            </View>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst ChatLobbyScreen = ({ navigation }) => {\n  const [refreshing, setRefreshing] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const { chat, users, auth } = useSelector((state) => state);\n\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchConversations());\n      dispatch(fetchUsers());\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    dispatch(fetchConversations());\n    setRefreshing(false);\n  }, [refreshing]);\n\n  const searchProcess = () => {\n    const searchResults = [];\n    users.users?.forEach((user) => {\n      if (user._id !== auth?.user._id) {\n        if (\n          user.firstname.includes(search.toLowerCase()) === true ||\n          user.lastname.includes(search.toLowerCase())\n        ) {\n          searchResults.push(user);\n        }\n      }\n    });\n    return searchResults;\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      {/* <View style={{ backgroundColor: \"white\", paddingVertical: 4 }}>\n        <SearchBar\n          placeholder=\"Chercher un alumni ici...\"\n          onChangeText={setSearch}\n          value={search}\n          platform=\"android\"\n          containerStyle={{\n            paddingTop: 0,\n            height: 40,\n          }}\n        />\n        {users.isLoaded && (\n          <FlatList\n            data={search && searchProcess()}\n            renderItem={({ item }) => (\n              <SearchResultItem\n                item={item}\n                theme={theme}\n                chat={chat}\n                navigation={navigation}\n                dispatch={dispatch}\n              />\n            )}\n            keyExtractor={(item) => item._id}\n          />\n        )}\n        {!users.isLoaded && (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <ActivityIndicator size=\"small\" />\n          </View>\n        )}\n      </View> */}\n      {chat.isLoaded ? (\n        chat.conversations.length > 0 ? (\n          <FlatList\n            data={chat.conversations}\n            renderItem={({ item }) => (\n              <Item\n                item={item}\n                auth={auth}\n                navigation={navigation}\n                theme={theme}\n                dispatch={dispatch}\n              />\n            )}\n            keyExtractor={(item) => item._id}\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n          />\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text style={{ textAlign: \"center\", color: theme.colors.grey3 }}>\n              Aucune conversation\n            </Text>\n            <Button\n              title=\"Rafraichir\"\n              type=\"clear\"\n              onPress={() => dispatch(fetchConversations())}\n            />\n          </View>\n        )\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default ChatLobbyScreen;\n"]},"metadata":{},"sourceType":"module"}