{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from\"react\";import{apiConfig}from\"../../config\";import View from\"react-native-web/dist/exports/View\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import axios from\"axios\";import{ScrollView}from\"react-native-gesture-handler\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";var SearchBar=function SearchBar(_ref){var _searchBar$selectFrom;var searchBar=_ref.searchBar,dispatchRedirectReset=_ref.dispatchRedirectReset,theme=_ref.theme;var _useState=useState(searchBar.initialValue),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),suggestions=_useState4[0],setSuggestions=_useState4[1];var search=\"cities\";var searchIn={firstname:[\"bonjour\"],lastname:[\"ldskfjs\"]};var handleChangeText=function handleChangeText(text){var _await$axios$get,data;return _regeneratorRuntime.async(function handleChangeText$(_context){while(1){switch(_context.prev=_context.next){case 0:setValue(text);if(!(text===\"\")){_context.next=3;break;}return _context.abrupt(\"return\",setSuggestions([]));case 3:_context.next=5;return _regeneratorRuntime.awrap(axios.get(apiConfig.baseUrl+\"/api/complete/\"+searchBar.searchFor+\"/\"+text));case 5:_await$axios$get=_context.sent;data=_await$axios$get.data;setSuggestions(data);case 8:case\"end\":return _context.stop();}}},null,null,null,Promise);};var SuggestionItem=function SuggestionItem(_ref2){var _item$other;var item=_ref2.item;return React.createElement(TouchableOpacity,{onPress:function onPress(){searchBar.onPressSuggestion([item.value,item.title]);dispatchRedirectReset();},style:styles.suggestion},React.createElement(Text,null,item.title,(_item$other=item.other)==null?void 0:_item$other.map(function(o){return\" - \"+o;})));};return React.createElement(View,{style:styles.root},searchBar.searchFor&&React.createElement(TextInput,{autoFocus:true,value:value,placeholder:searchBar.placeholder,placeholderTextColor:\"grey\",onChangeText:function onChangeText(text){return handleChangeText(text);},style:[theme.TextInput,{height:40,width:Dimensions.get(\"window\").width-100}]}),React.createElement(ScrollView,{style:styles.suggestionsContainer},suggestions.map(function(s,i){return React.createElement(SuggestionItem,{item:s,key:i});}),(_searchBar$selectFrom=searchBar.selectFrom)==null?void 0:_searchBar$selectFrom.map(function(s,i){return React.createElement(SuggestionItem,{item:s,key:i});})));};export default SearchBar;var styles=StyleSheet.create({root:{backgroundColor:\"white\",borderRadius:10,paddingHorizontal:12,paddingVertical:8,elevation:1,shadowColor:\"black\",shadowOffset:{width:0,height:0},shadowOpacity:0.5,shadowRadius:20},suggestionsContainer:{height:200},suggestion:{paddingHorizontal:2,paddingVertical:4}});","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/CustomOverlay/SearchBar.js"],"names":["React","useState","apiConfig","axios","ScrollView","SearchBar","searchBar","dispatchRedirectReset","theme","initialValue","value","setValue","suggestions","setSuggestions","search","searchIn","firstname","lastname","handleChangeText","text","get","baseUrl","searchFor","data","SuggestionItem","item","onPressSuggestion","title","styles","suggestion","other","map","o","root","placeholder","TextInput","height","width","Dimensions","suggestionsContainer","s","i","selectFrom","StyleSheet","create","backgroundColor","borderRadius","paddingHorizontal","paddingVertical","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { apiConfig } from \"../../config\";\nimport {\n  View,\n  TextInput,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n} from \"react-native\";\nimport axios from \"axios\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { Dimensions } from \"react-native\";\n\nconst SearchBar = ({ searchBar, dispatchRedirectReset, theme }) => {\n  const [value, setValue] = useState(searchBar.initialValue);\n  const [suggestions, setSuggestions] = useState([]);\n\n  const search = \"cities\";\n  const searchIn = { firstname: [\"bonjour\"], lastname: [\"ldskfjs\"] };\n\n  const handleChangeText = async (text) => {\n    setValue(text);\n    if (text === \"\") {\n      return setSuggestions([]);\n    }\n\n    const { data } = await axios.get(\n      `${apiConfig.baseUrl}/api/complete/${searchBar.searchFor}/${text}`\n    );\n    setSuggestions(data);\n  };\n\n  const SuggestionItem = ({ item }) => {\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          searchBar.onPressSuggestion([item.value, item.title]);\n          dispatchRedirectReset();\n        }}\n        style={styles.suggestion}\n      >\n        <Text>\n          {item.title}\n          {item.other?.map((o) => \" - \" + o)}\n        </Text>\n      </TouchableOpacity>\n    );\n  };\n  return (\n    <View style={styles.root}>\n      {searchBar.searchFor && (\n        <TextInput\n          autoFocus={true}\n          value={value}\n          placeholder={searchBar.placeholder}\n          placeholderTextColor=\"grey\"\n          onChangeText={(text) => handleChangeText(text)}\n          style={[\n            theme.TextInput,\n            { height: 40, width: Dimensions.get(\"window\").width - 100 },\n          ]}\n        />\n      )}\n      <ScrollView style={styles.suggestionsContainer}>\n        {suggestions.map((s, i) => (\n          <SuggestionItem item={s} key={i} />\n        ))}\n        {searchBar.selectFrom?.map((s, i) => (\n          <SuggestionItem item={s} key={i} />\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default SearchBar;\n\nconst styles = StyleSheet.create({\n  root: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    elevation: 1,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.5,\n    shadowRadius: 20,\n  },\n  suggestionsContainer: {\n    height: 200,\n  },\n  suggestion: {\n    paddingHorizontal: 2,\n    paddingVertical: 4,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}