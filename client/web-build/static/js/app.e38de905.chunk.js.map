{"version":3,"sources":["src/store/reducers/authReducer.js","src/store/reducers/usersReducer.js","src/store/reducers/overlayReducer.js","src/store/reducers/jobsReducer.js","src/store/reducers/chatReducer.js","src/store/reducers/index.js","src/config.js","src/actions/overlayAction.js","src/store/reduxMiddlewares.js","src/store/index.js","src/RootNavigation.js","src/components/AppNavbar.js","src/actions/authActions.js","src/components/MyJobs/MyJobsReadScreen.js","src/actions/jobsActions.js","src/components/MyJobs/MyJobsEditScreen.js","src/components/MyJobs/index.js","src/components/Jobs/JobsListScreen.js","src/components/Jobs/JobsReadScreen.js","src/components/Jobs/JobsPostScreen.js","src/components/Jobs/index.js","src/actions/filesActions.js","src/components/Profile/ProfileReadScreen.js","src/components/Profile/ProfileEditScreen.js","src/components/Profile/index.js","src/components/CustomInput.js","src/components/People/PeopleListScreen.js","src/actions/usersActions.js","src/actions/chatActions.js","src/components/People/PeopleReadScreen.js","src/components/People/index.js","src/components/Messages/MessagesLobbyScreen.js","src/components/Messages/MessagesRoomScreen.js","src/components/Messages/index.js","src/components/Auth/LogInScreen.js","src/components/Auth/SignUpScreen.js","src/components/Auth/index.js","src/components/CustomOverlay/SearchBar.js","src/components/CustomOverlay/DateInput.js","src/components/CustomOverlay/Notification.js","src/components/CustomOverlay/Menu.js","src/components/CustomOverlay/index.js","src/App.js","src/useLinking.js","web-build/register-service-worker.js","node_modules/moment/locale sync /^/.//.*$","src/assets/images/logo.png"],"names":["initialState","isLoggingIn","isLoggingOut","isSigningUp","isLoggedIn","isDeletingAccount","loggedInAt","user","userInfoUpdatedAt","token","errors","users","isFetching","lastUpdatedAt","isLoaded","notification","form","show","timeout","jobs","conversations","conversationsIds","interlocutorsIds","isFetchingConversations","isFetchingConversation","copyAndUpdate","array","i","update","copy","concat","slice","index","combineReducers","auth","state","action","type","payload","isloggingOut","isUpdatingUser","isUpdatingPassword","isUpdatingJob","privateConversations","conversation_id","conversation","_id","interlocutor_id","message","sender","recipient","tokenVerifiedAt","receivedAt","job","updatedUser","overlay","isDeleting","chat","_","findIndex","readAck","reacAck","writing","lastMessage","messages","Array","isArray","apiConfig","showOverlay","menu","callbacks","redirect","persistConfig","key","storage","AsyncStorage","blacklist","persistedReducer","persistReducer","rootReducer","middlewares","thunk","store","next","console","log","https","substring","includes","axios","create","baseURL","headers","accept","Authorization","getState","Promise","resolve","reject","method","get","route","post","delete","patch","then","res","successNotification","dispatch","variant","data","Date","catch","err","errorNotification","response","forceReconnect","error","socket","io","forceNode","transportOptions","polling","extraHeaders","authorization","on","emit","event","disconnect","socketMiddleware","Platform","OS","push","logger","createStore","applyMiddleware","persistor","persistStore","isMountedRef","React","navigationRef","navigate","name","params","current","connect","logOut","navigation","leftButton","title","noRightButton","theme","useContext","ThemeContext","style","flexDirection","justifyContent","alignItems","paddingTop","Constants","statusBarHeight","paddingHorizontal","paddingBottom","backgroundColor","borderBottomColor","borderBottomWidth","onPress","openDrawer","color","colors","primary","Text","fontSize","textAlign","grey0","containerStyle","marginHorizontal","Item","item","TouchableOpacity","id","marginVertical","grey4","paddingVertical","flex","textAlignVertical","fontWeight","jobTitle","employmentType","size","marginStart","organisation","capitalize","city","moment","publishedAt","locale","fromNow","fetchMyJobs","useEffect","FlatList","renderItem","keyExtractor","updateJob","deleteJob","useState","deleting","setDeleting","updating","setUpdating","setEmploymentType","asap","setAsap","setOrganisation","setCity","salary","setSalary","setJobTitle","jobDesc","setJobDesc","minExp","setMinExp","contact","setContact","setErrors","onEditJob","alignContent","ScrollView","label","placeholder","value","onChangeText","errorMessage","multiline","inputStyle","height","keyboardType","showSoftInputOnFocus","marginBottom","display","grey3","paddingLeft","Switch","trackColor","false","true","primarySoft","thumbColor","grey2","onValueChange","loading","buttonStyle","a","async","Stack","createStackNavigator","MyJobsScreen","Navigator","initialRouteName","headerMode","Screen","component","Read","options","headerShown","Edit","fetchJobs","refreshing","setRefreshing","onRefresh","useCallback","borderRadius","shadowOffset","width","shadowColor","shadowOpacity","elevation","refreshControl","RefreshControl","ActivityIndicator","position","bottom","left","icon","marginTop","PostScreen","useDispatch","uploading","setUploading","filled","disabled","JobsScreen","JobsListScreen","JobsReadScreen","headerStatusBarHeight","JobsPostScreen","dataURLtoBlob","dataurl","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","Blob","uploadFile","blob","bucketName","formData","FormData","append","ReadProfileScreen","showAvatarForm","setShowAvatarForm","useSelector","LinearGradient","secondary","start","end","grey5","firstname","lastname","professor","administration","avatar","borderColor","borderWidth","source","uri","charAt","toUpperCase","marginLeft","ImagePicker","allowsEditing","file","cancelled","fetch","selectPicture","primaryLight","fileId","promo","marginEnd","description","email","updateUser","deleteAccount","password","updateUserPassword","newPassword","desc","setDesc","setEmail","setPromo","alumni","setAlumni","setProfessor","setAdministration","setPassword","confirmation","setConfirmation","passwordError","setPasswordError","setNewPassword","showEditPasswordForm","setShowEditPasswordForm","showDeleteAccountForm","setShowDeleteAccountForm","showEditAccountInfoForm","setShowEditAccountInfoForm","onEditProfile","text","leftIcon","numberOfLines","secureTextEntry","leftIconContainerStyle","marginRight","ProfileScreen","EditProfileScreen","CustomInput","searchBar","select","clear","date","setError","format","handleChangeText","styles","root","content","labelContainer","inputContainer","iconContainer","TextInput","dateInput","initialValue","searchFor","selectFrom","onPressSuggestion","placeholderTextColor","StyleSheet","alignSelf","sides","PeopleScreen","search","setSearch","searchableKeys","filter","u","every","sk","toLowerCase","Dimensions","padding","margin","startConversation","sentAt","fullname","c","screen","inputName","actionParams","PeopleListScreen","PeopleReadScreen","headerStyle","remove","participants","participant","map","toString","replace","listParticipants","incoming","paddingRight","message_id","timestamp","ChatLobbyScreen","Message","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","maxWidth","selectable","RoomScreen","newMessage","setNewMessage","conv","fetchConversation","read","sendReadAck","onSendMessage","interlocutors","p","inverted","MessagesScreen","Lobby","Room","logIn","credentials","Image","require","errorStyle","signUp","setFirstname","setLastname","code","mail","AuthNavigator","LogInScreen","SignUpScreen","SearchBar","dispatchRedirectReset","setValue","suggestions","setSuggestions","SuggestionItem","suggestion","other","o","autoFocus","suggestionsContainer","s","shadowRadius","DateInput","getDate","day","setDay","getMonth","month","setMonth","getYear","year","setYear","dayInputRef","useRef","monthInputRef","yearInputRef","focus","ref","input","Notification","grey1","Menu","View","buttons","button","Button","CustomOverlay","forEach","d","RootNavigation","redirectOpts","setTimeout","InputForm","minHeight","BottomTab","createBottomTabNavigator","Drawer","createDrawerNavigator","MainStack","screenOptions","tabBarIcon","focused","iconName","tabBarOptions","activeTintColor","inactiveTintColor","People","Jobs","Messages","DrawerStack","Profile","MyJobs","AppStack","props","containerRef","isLoadingComplete","setLoadingComplete","initialNavigationState","setInitialNavigationState","getInitialState","useLinking","prefixes","Linking","makeUrl","config","Auth","path","screens","LogIn","SignUp","Root","Main","List","Post","userToken","SplashScreen","preventAutoHide","warn","hide","skipLoadingScreen","NavigationContainer","App","SafeAreaView","StatusBar","barStyle","navigator","window","addEventListener","serviceWorker","register","scope","info","webpackContext","req","webpackContextResolve","__webpack_require__","e","Error","keys","Object","module","exports"],"mappings":"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","file":"static/js/app.e38de905.chunk.js","sourcesContent":["const initialState = {\n  isLoggingIn: false,\n  isLoggingOut: false,\n  isSigningUp: false,\n  isLoggedIn: false,\n  isDeletingAccount: false,\n  loggedInAt: null,\n  user: null,\n  userInfoUpdatedAt: null,\n  token: null,\n  errors: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_AUTH_TOKEN\":\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case \"REQUEST_SIGN_UP\":\n      return {\n        ...state,\n        isSigningUp: true,\n      };\n    case \"REQUEST_SIGN_UP\":\n      return {\n        ...state,\n        isSigningUp: true,\n      };\n    case \"REQUEST_LOG_IN\":\n      return {\n        ...state,\n        isLoggingIn: true,\n      };\n    case \"REQUEST_LOG_OUT\":\n      return {\n        ...state,\n        isloggingOut: true,\n      };\n    case \"REQUEST_UPDATE_USER\":\n      return {\n        ...state,\n        isUpdatingUser: true,\n      };\n    case \"REQUEST_DELETE_ACCOUNT\":\n      return {\n        ...state,\n        isDeletingAccount: true,\n      };\n    case \"REQUEST_UPDATE_PASSWORD\":\n      return {\n        ...state,\n        isUpdatingPassword: true,\n      };\n    case \"REQUEST_MY_JOBS\":\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case \"REQUEST_UPDATE_JOB\":\n      return {\n        ...state,\n        isUpdatingJob: true,\n      };\n    case \"REQUEST_CREATE_JOB\":\n      return state;\n    case \"RECEIVE_CONVERSATION\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          privateConversations: [\n            ...state.user.conversations,\n            {\n              conversation_id: action.conversation._id,\n              interlocutor_id: action.message.sender,\n            },\n          ],\n        },\n      };\n    case \"PRIVATE_CONVERSATION_ACK\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          privateConversations: [\n            ...state.user.conversations,\n            {\n              conversation_id: action.conversation._id,\n              interlocutor_id: action.message.recipient,\n            },\n          ],\n        },\n      };\n\n    // SUCCESS\n    case \"REQUEST_UPDATE_PASSWORD:SUCCESS\":\n      return state;\n    case \"REQUEST_DELETE_ACCOUNT:SUCCESS\":\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    case \"REQUEST_VERIFY_TOKEN:SUCCESS\":\n      return {\n        ...state,\n        tokenVerifiedAt: action.receivedAt,\n      };\n    case \"REQUEST_LOG_IN:SUCCESS\":\n      return {\n        ...state,\n        isLoggingIn: false,\n        isLoggedIn: true,\n        loggedInAt: action.receivedAt,\n        userInfoUpdatedAt: action.receivedAt,\n        ...action.payload,\n      };\n    case \"REQUEST_SIGN_UP:SUCCESS\":\n      return {\n        ...state,\n        isSigningUp: false,\n        user: action.user,\n        token: action.token,\n        loggedInAt: action.receivedAt,\n        isLoggedIn: true,\n        userInfoUpdatedAt: action.receivedAt,\n        ...action.payload,\n      };\n    case \"REQUEST_UPDATE_USER:SUCCESS\":\n      return {\n        ...state,\n        isUpdatingUser: false,\n        userInfoUpdatedAt: action.receivedAt,\n        ...action.payload,\n      };\n    case \"REQUEST_MY_JOBS:SUCCESS\":\n      return {\n        ...state,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        ...action.payload,\n      };\n    case \"REQUEST_UPDATE_JOB:SUCCESS\":\n      return {\n        ...state,\n        user: { ...state.user, jobs: action.payload.jobs },\n        isUpdatingJob: false,\n      };\n    case \"REQUEST_CREATE_JOB:SUCCESS\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          jobs: [action.payload.job, ...state.user.jobs],\n        },\n      };\n    case \"REQUEST_DELETE_FILE:SUCCESS\":\n    case \"REQUEST_UPLOAD_FILE:SUCCESS\":\n      return {\n        ...state,\n        user: action.payload.updatedUser,\n      };\n\n    // ERRORS\n\n    case \"REQUEST_VERIFY_TOKEN:ERROR\":\n      return initialState;\n    case \"REQUEST_MY_JOBS:ERROR\":\n    case \"REQUEST_UPDATE_USER:ERROR\":\n    case \"REQUEST_UPDATE_PASSWORD:ERROR\":\n    case \"REQUEST_LOG_IN:ERROR\":\n    case \"REQUEST_SIGN_UP:ERROR\":\n    case \"REQUEST_UPDATE_JOB:ERROR\":\n    case \"REQUEST_CREATE_JOB:ERROR\":\n      return {\n        ...state,\n        errors: [...state.errors, action],\n      };\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  users: [],\n  isFetching: false,\n  lastUpdatedAt: null,\n  isLoaded: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_USERS\":\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case \"REQUEST_USERS:SUCCESS\":\n      return {\n        ...action.payload,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n      };\n    case \"REQUEST_USERS:ERROR\":\n      return {\n        ...action.payload,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n      };\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  notification: null,\n  form: null,\n  show: false,\n  timeout: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"SHOW_OVERLAY\":\n      return {\n        ...action.payload,\n        show: true,\n      };\n    case \"ASK_USER_INPUT\":\n      return {\n        form: action.form,\n        show: true,\n      };\n    case \"RESET_OVERLAY\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  jobs: [],\n  isFetching: false,\n  lastUpdatedAt: null,\n  isLoaded: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_JOBS\":\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case \"REQUEST_JOBS:SUCCESS\":\n      return {\n        ...state,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        ...action.payload,\n      };\n    case \"REQUEST_JOBS:ERROR\":\n      return {\n        ...state,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n      };\n    case \"REQUEST_DELETE_JOB\":\n      return {\n        ...state,\n        isDeleting: true,\n      };\n    case \"REQUEST_DELETE_JOB:SUCCESS\":\n      return {\n        ...state,\n        isDeleting: false,\n        lastUpdatedAt: action.receivedAt,\n      };\n    case \"REQUEST_CREATE_JOB:SUCCESS\":\n      return {\n        ...state,\n        jobs: [action.payload.job, ...state.jobs],\n      };\n    case \"REQUEST_DELETE_JOB:ERROR\":\n      return {\n        ...state,\n        isFetchingConversations: false,\n      };\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  conversations: [],\n  conversationsIds: [],\n  interlocutorsIds: [],\n  lastUpdatedAt: null,\n  isLoaded: false,\n  isFetchingConversations: false,\n  isFetchingConversation: false,\n};\n\nimport _ from \"lodash\";\n\nconst copyAndUpdate = (array, i, update) => {\n  let copy = [];\n\n  if (i > 0) copy.concat(array.slice(0, index));\n  copy.concat({ ...array[index], ...update });\n  copy.concat(index + 1);\n\n  return copy;\n};\n\nexport default function (state = initialState, action) {\n  let i = _.findIndex(state.conversations, {\n    _id: action.payload?.conversation_id,\n  });\n\n  switch (action.type) {\n    case \"REQUEST_CONVERSATIONS:SUCCESS\":\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        conversations: action.payload.conversations,\n        isLoaded: true,\n      };\n    case \"REQUEST_CONVERSATION:SUCCESS\":\n      return {\n        ...state,\n        conversations: copyAndUpdate(\n          state.conversations,\n          i,\n          action.payload.conversation\n        ),\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n      };\n    case \"RECEIVE_READ_ACK\":\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        conversations: copyAndUpdate(state.conversations, i, {\n          readAck: action.payload.reacAck,\n        }),\n        isLoaded: true,\n      };\n    case \"RECEIVE_WRITING_ACK\":\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        conversations: copyAndUpdate(state.conversations, i, {\n          writing: action.payload.writing,\n        }),\n      };\n    case \"RECEIVE_NEW_CONVERSATION\":\n      return {\n        ...state,\n        conversations: [action.payload.conversation, ...state.conversations],\n        lastUpdatedAt: action.receivedAt,\n      };\n    case \"RECEIVE_NEW_MESSAGE\":\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        conversations: copyAndUpdate(state.conversations, i, {\n          lastMessage: action.message,\n          messages: Array.isArray(state.conversations[i].messages)\n            ? [action.message, ...state.conversations[i].messages]\n            : [action.message],\n        }),\n      };\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport usersReducer from \"./usersReducer\";\nimport overlayReducer from \"./overlayReducer\";\nimport jobsReducer from \"./jobsReducer\";\nimport chatReducer from \"./chatReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  overlay: overlayReducer,\n  jobs: jobsReducer,\n  users: usersReducer,\n  chat: chatReducer,\n});\n","export const apiConfig = {\n  baseUrl: \"https://siee-gate-test.herokuapp.com\",\n};\n","export const showOverlay = ({\n  notification,\n  form,\n  menu,\n  timeout,\n  callbacks,\n  redirect,\n}) => {\n  return {\n    type: \"SHOW_OVERLAY\",\n    payload: {\n      notification,\n      form,\n      menu,\n      timeout,\n      callbacks,\n      redirect,\n    },\n  };\n};\n\nexport const showNotification = (\n  notification,\n  timeout,\n  callbacks,\n  redirect\n) => {\n  return {\n    type: \"SHOW_OVERLAY\",\n    payload: {\n      notification,\n      timeout,\n      callbacks,\n      redirect,\n    },\n  };\n};\n\nexport const showDateInput = (dateInput, timeout, callbacks, redirect) => {\n  return {\n    type: \"SHOW_OVERLAY\",\n    payload: {\n      dateInput,\n      timeout,\n      callbacks,\n      redirect,\n    },\n  };\n};\n\nexport const resetOverlay = () => {\n  return {\n    type: \"RESET_OVERLAY\",\n  };\n};\n","import io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { apiConfig } from \"../config\";\nimport { showOverlay } from \"../actions/overlayAction\";\n\nexport const devMiddleware = (store) => (next) => (action) => {\n  console.log(action.type);\n  return next(action);\n};\n\nexport const socketMiddleware = () => {\n  let socket;\n  return (store) => (next) => (action) => {\n    if (!socket && store.getState().auth.isLoggedIn) {\n      console.log(\"socket somehow disconnected\");\n    }\n    if (\n      action.type === \"REQUEST_LOG_IN:SUCCESS\" ||\n      action.type === \"REQUEST_SIGN_UP:SUCCESS\" ||\n      action.type === \"REQUEST_VERIFY_TOKEN:SUCCESS\"\n    ) {\n      const { token } = action.payload;\n      socket = io(apiConfig.baseUrl, {\n        forceNode: true,\n        transportOptions: {\n          polling: {\n            extraHeaders: {\n              \"Access-Control-Allow-Origin\": \"*\",\n              authorization: token,\n            },\n          },\n        },\n      });\n      socket.on(\"connected\", (data) => {\n        console.log(\"Socket connected\");\n      });\n      socket.on(\"unauthorized\", (data) => {\n        console.log(\"Socket disconnected\");\n      });\n      socket.on(\"authenticated\", (data) => {\n        console.log(\"Socket authenticated\");\n      });\n      socket.on(\"default\", (data) => {\n        // {\n        //   type: \"SOMETHING\",\n        //   data: { conversation_id, message },\n        //   receivedAt,\n        // };\n        store.dispatch({\n          ...data,\n          receivedAt: new Date(),\n        });\n      });\n    }\n    if (action.type?.substring(0, 6) === \"SOCKET\") {\n      socket.emit(action.event, action.payload);\n    }\n    if (action.type === \"REQUEST_LOG_OUT:SUCCESS\") {\n      socket.disconnect();\n      console.log(\"socket disconnected\");\n    }\n\n    return next(action);\n  };\n};\n\nexport const axiosMiddleware = (store) => (next) => (action) => {\n  if (\n    action.type?.substring(0, 7) === \"REQUEST\" &&\n    action.type?.includes(\":\") === false\n  ) {\n    let https;\n    if (action.type.substring(0, 14) === \"REQUEST_UPLOAD\") {\n      https = axios.create({\n        baseURL: apiConfig.baseUrl + \"/api/\",\n        timeout: 3000,\n        headers: {\n          accept: \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${store.getState().auth.token}`,\n        },\n      });\n    } else {\n      https = axios.create({\n        baseURL: apiConfig.baseUrl + \"/api/\",\n        timeout: 3000,\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${store.getState().auth.token}`,\n        },\n      });\n    }\n    const request = new Promise(function (resolve, reject) {\n      let res;\n\n      switch (action.method) {\n        case \"GET\":\n          res = https.get(action.route);\n          return resolve(res);\n        case \"POST\":\n          res = https.post(action.route, action.payload);\n          return resolve(res);\n        case \"DELETE\":\n          res = https.delete(action.route, action.payload);\n          return resolve(res);\n        case \"PATCH\":\n          res = https.patch(action.route, action.payload);\n          return resolve(res);\n        default:\n          return;\n      }\n    });\n    request\n      .then((res) => {\n        if (action.successNotification) {\n          store.dispatch(\n            showOverlay({\n              timeout: 3000,\n              redirect: action.successNotification.redirect,\n              callbacks: action.successNotification.callbacks,\n              notification: {\n                variant: \"success\",\n                message: action.successNotification.message,\n              },\n            })\n          );\n        }\n        return store.dispatch({\n          type: `${action.type}:SUCCESS`,\n          payload: res.data,\n          receivedAt: new Date(),\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        if (\n          action.errorNotification ||\n          err.response?.data.forceReconnect === true\n        ) {\n          store.dispatch(\n            showOverlay({\n              timeout: 3000,\n              redirect: err.response?.data.forceReconnect && \"Auth\",\n              callbacks: err.response?.data.forceReconnect && [\n                \"REQUEST_LOG_OUT:SUCCESS\",\n              ],\n              notification: {\n                variant: \"error\",\n                message: err.response?.data.message || \"Cela n'a pas marché...\",\n              },\n            })\n          );\n        }\n        return store.dispatch({\n          type: `${action.type}:ERROR`,\n          error: err,\n          receivedAt: new Date(),\n        });\n      });\n\n    return next(action);\n  } else {\n    return next(action);\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\nimport { Platform } from \"react-native\";\nimport {\n  socketMiddleware,\n  axiosMiddleware,\n  devMiddleware,\n} from \"./reduxMiddlewares\";\nimport { AsyncStorage } from \"react-native\";\nimport logger from \"redux-logger\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: AsyncStorage,\n  blacklist: [\"overlay\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middlewares = [thunk, devMiddleware, axiosMiddleware, socketMiddleware()];\n\nif (Platform.OS === \"web\") {\n  middlewares.push(logger);\n}\n\nconst store = createStore(persistedReducer, applyMiddleware(...middlewares));\n\nlet persistor = persistStore(store);\n\nexport { store, persistor };\n","import * as React from \"react\";\nexport const isMountedRef = React.createRef();\n\nexport const navigationRef = React.createRef();\n\nexport function navigate(name, params) {\n  if (isMountedRef.current && navigationRef.current) {\n    navigationRef.current.navigate(name, params);\n  } else {\n  }\n}\nexport function openDrawer() {\n  navigationRef.current?.openDrawer();\n}\n","import React, { useContext } from \"react\";\nimport { Icon, ThemeContext } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport { logOut } from \"../actions/authActions\";\nimport { View, Text, Platform } from \"react-native\";\nimport Constants from \"expo-constants\";\nimport { navigate } from \"../RootNavigation\";\n\nconst AppNavbar = ({\n  navigation,\n  leftButton,\n  title,\n  logOut,\n  noRightButton,\n}) => {\n  const { theme } = useContext(ThemeContext);\n\n  const LeftButtonComponent = () => {\n    switch (leftButton) {\n      case \"profile\":\n        return (\n          <Icon\n            name=\"menu\"\n            onPress={() => navigation.openDrawer()}\n            color={theme.colors.primary}\n          />\n        );\n      case \"back\":\n        return (\n          <Icon\n            name=\"arrow-left\"\n            color={theme.colors.primary}\n            onPress={() => navigate(\"Main\")}\n          />\n        );\n      default:\n        return (\n          <Icon\n            name=\"menu\"\n            onPress={() => navigation.openDrawer()}\n            color={theme.colors.primary}\n          />\n        );\n    }\n  };\n\n  const CenterComponent = () => {\n    return (\n      <View>\n        <Text\n          style={{\n            color: theme.colors.primary,\n            fontSize: 20,\n            textAlign: \"center\",\n          }}\n        >\n          {title}\n        </Text>\n      </View>\n    );\n  };\n\n  const RightComponent = () => {\n    if (noRightButton) {\n      return <View></View>;\n    } else {\n      return (\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon\n            name=\"logout\"\n            color={theme.colors.grey0}\n            containerStyle={{ marginHorizontal: 8 }}\n            onPress={() => logOut()}\n          />\n        </View>\n      );\n    }\n  };\n\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        paddingTop: Platform.OS === \"web\" ? 10 : Constants.statusBarHeight,\n        paddingHorizontal: 10,\n        paddingBottom: 8,\n        backgroundColor: \"white\",\n        borderBottomColor: \"lightgrey\",\n        borderBottomWidth: 1,\n      }}\n    >\n      <LeftButtonComponent />\n      <CenterComponent />\n      <RightComponent />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logOut: () => dispatch(logOut()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavbar);\n","export const logIn = (credentials) => {\n  return {\n    type: \"REQUEST_LOG_IN\",\n    route: \"/auth/login\",\n    payload: credentials,\n    method: \"POST\",\n    errorNotification: true,\n  };\n};\n\nexport const verifyToken = () => {\n  return {\n    type: \"REQUEST_VERIFY_TOKEN\",\n    route: \"auth/token/verify\",\n    method: \"GET\",\n    errorNotification: true,\n  };\n};\n\nexport const signUp = (credentials) => {\n  return {\n    type: \"REQUEST_SIGN_UP\",\n    route: \"/auth/signup\",\n    payload: credentials,\n    method: \"POST\",\n    successNotification: {\n      message: `Bienvenue ! Rendez-vous à l'onglet \"Mon profil\" pour éditer vos informations.`,\n      variant: \"success\",\n    },\n    errorNotification: true,\n  };\n};\n\nexport const logOut = () => {\n  return {\n    type: \"REQUEST_LOG_OUT\",\n    route: \"/auth/logout\",\n    method: \"GET\",\n    errorNotification: true,\n    successNotification: {\n      message: \"Au revoir !\",\n      variant: \"success\",\n      redirect: \"Auth\",\n    },\n  };\n};\n\nexport const updateUser = (user) => {\n  return {\n    type: \"REQUEST_UPDATE_USER\",\n    method: \"PATCH\",\n    route: \"auth\",\n    payload: user,\n    successNotification: {\n      message: \"Vos informations ont été mises à jour.\",\n      variant: \"success\",\n      redirect: \"Read\",\n    },\n    errorNotification: true,\n  };\n};\n\nexport const updateUserPassword = (password, newPassword) => {\n  return {\n    type: \"REQUEST_UPDATE_USER\",\n    method: \"PATCH\",\n    route: \"auth/password\",\n    payload: { password, newPassword },\n    successNotification: {\n      message: \"Votre mot de passe à été mis à jour.\",\n      variant: \"success\",\n      redirect: \"Read\",\n    },\n    errorNotification: true,\n  };\n};\n\nexport const deleteAccount = () => {\n  return {\n    type: \"REQUEST_DELETE_ACCOUNT\",\n    method: \"DELETE\",\n    route: \"auth\",\n    successNotification: {\n      message: \"Votre compte a bien été supprimé.\",\n      redirect: \"Auth\",\n    },\n    errorNotification: true,\n  };\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { View, Text, FlatList, TouchableOpacity } from \"react-native\";\nimport { Icon, ThemeContext } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport AppNavbar from \"../AppNavbar\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchMyJobs } from \"../../actions/jobsActions\";\n\nconst Item = ({ item, navigation }) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <TouchableOpacity\n      onPress={() => navigation.navigate(\"Edit\", { job: item, id: item._id })}\n    >\n      <View\n        style={{\n          paddingTop: 8,\n          paddingHorizontal: 20,\n          marginVertical: 4,\n          marginHorizontal: 0,\n          borderBottomWidth: 1,\n          borderBottomColor: theme.colors.grey4,\n          paddingVertical: 12,\n          flexDirection: \"row\",\n        }}\n      >\n        <View style={{ flex: 1 }}>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16,\n            }}\n          >\n            {item?.jobTitle} en {item?.employmentType}\n          </Text>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              {item?.organisation}\n            </Text>\n          </View>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\", flex: 1 }}>\n            <Icon name=\"map-marker\" size={20} />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {_.capitalize(item?.city)}\n            </Text>\n            <Text\n              color=\"grey\"\n              style={{\n                color: \"grey\",\n                fontSize: 10,\n                textAlignVertical: \"bottom\",\n              }}\n            >\n              {_.capitalize(moment(item?.publishedAt).locale(\"fr\").fromNow())}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst MyJobsScreen = ({ auth, navigation, fetchMyJobs }) => {\n  useEffect(() => {\n    function fetchData() {\n      fetchMyJobs();\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <View style={{ flex: 1, backgroundColor: \"white\" }}>\n      <AppNavbar\n        title=\"Mes offres d'emploi\"\n        navigation={navigation}\n        noRightButton={true}\n        leftButton=\"back\"\n      />\n      <FlatList\n        data={auth?.user.jobs}\n        renderItem={({ item }) => <Item item={item} navigation={navigation} />}\n        keyExtractor={(item) => item?._id}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    jobs: state.jobs,\n    auth: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchMyJobs: () => dispatch(fetchMyJobs()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyJobsScreen);\n","export const createJob = (job) => {\n  return {\n    type: \"REQUEST_CREATE_JOB\",\n    route: \"jobs\",\n    payload: job,\n    method: \"POST\",\n    successNotification: {\n      message: \"Votre offre d'emploi a été créée\",\n      redirect: \"MyJobs\",\n    },\n    errorNotification: true,\n  };\n};\n\nexport const fetchJobs = () => {\n  return {\n    type: \"REQUEST_JOBS\",\n    route: \"jobs\",\n    method: \"GET\",\n  };\n};\n\nexport const fetchMyJobs = () => {\n  return {\n    type: \"REQUEST_MY_JOBS\",\n    route: \"jobs/me\",\n    method: \"GET\",\n  };\n};\n\nexport const updateJob = (job) => {\n  return {\n    type: \"REQUEST_UPDATE_JOB\",\n    method: \"PATCH\",\n    route: `jobs/${job._id}`,\n    payload: job,\n    successNotification: {\n      message: \"Votre offre d'emploi a été mise à jour.\",\n      variant: \"success\",\n      redirect: \"MyJobs\",\n      timeout: 1000,\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000,\n    },\n  };\n};\n\nexport const deleteJob = (id) => {\n  return {\n    type: \"REQUEST_DELETE_JOB\",\n    method: \"DELETE\",\n    route: `jobs/${id}`,\n    successNotification: {\n      message: \"Offre d'emploi supprimée.\",\n      variant: \"success\",\n      redirect: \"MyJobs\",\n      timeout: 1000,\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000,\n    },\n  };\n};\n","import React, { useContext, useState } from \"react\";\nimport { View, Text, Switch, ScrollView } from \"react-native\";\nimport { Input, Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport { updateJob, deleteJob, fetchMyJobs } from \"../../actions/jobsActions\";\n\nconst MyJobsEditScreen = ({\n  updateJob,\n  deleteJob,\n  route,\n  fetchMyJobs,\n  navigation\n}) => {\n  const [deleting, setDeleting] = useState(false);\n  const [updating, setUpdating] = useState(false);\n  const { job } = route.params;\n  const { theme } = useContext(ThemeContext);\n  const [employmentType, setEmploymentType] = useState(job.employmentType);\n  const [asap, setAsap] = useState(job.asap);\n  const [organisation, setOrganisation] = useState(job.organisation);\n  const [city, setCity] = useState(job.city);\n  const [salary, setSalary] = useState(job.salary);\n  const [jobTitle, setJobTitle] = useState(job.jobTitle);\n  const [jobDesc, setJobDesc] = useState(job.jobDesc);\n  const [minExp, setMinExp] = useState(`${job.minExp}`);\n  const [contact, setContact] = useState(job.contact);\n  const [errors, setErrors] = useState({});\n\n  const onEditJob = () => {\n    {\n      if (!employmentType) {\n        return setErrors({\n          employmentType: \"Ce champs est obligatoire.\"\n        });\n      } else if (!organisation) {\n        return setErrors({\n          organisation: \"Ce champs est obligatoire.\"\n        });\n      } else if (!city) {\n        return setErrors({\n          city: \"Ce champs est obligatoire.\"\n        });\n      } else if (!jobDesc) {\n        return setErrors({\n          jobDesc: \"Ce champs est obligatoire.\"\n        });\n      } else if (!jobTitle) {\n        return setErrors({\n          jobTitle: \"Ce champs est obligatoire.\"\n        });\n      } else if (!minExp) {\n        return setErrors({\n          minExp: \"Ce champs est obligatoire.\"\n        });\n      }\n    }\n\n    updateJob({\n      ...job,\n      employmentType,\n      asap,\n      organisation,\n      city,\n      salary,\n      jobDesc,\n      jobTitle,\n      minExp,\n      contact\n    });\n\n    {\n      setAsap(false);\n      setCity();\n      setSalary();\n      setContact();\n      setErrors({});\n      setEmploymentType();\n      setOrganisation();\n      setJobDesc();\n      setJobTitle();\n    }\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\"\n      }}\n    >\n      <ScrollView>\n        <Input\n          label=\"Type de contrat*\"\n          placeholder=\"CDI, CDD, Apprentissage...\"\n          value={employmentType}\n          onChangeText={value => setEmploymentType(value)}\n          errorMessage={errors.employmentType}\n        />\n        <Input\n          label=\"Organisation*\"\n          placeholder=\"Deloitte, Engie, EY...\"\n          value={organisation}\n          onChangeText={value => setOrganisation(value)}\n          errorMessage={errors.organisation}\n        />\n        <Input\n          placeholder=\"Paris, Shanghai, Lyon...\"\n          label=\"Ville*\"\n          value={city}\n          onChangeText={value => setCity(value)}\n          errorMessage={errors.city}\n        />\n        <Input\n          placeholder=\"Auditeur des SI, Pentester junior...\"\n          label=\"Intitulé du poste*\"\n          value={jobTitle}\n          onChangeText={value => setJobTitle(value)}\n          errorMessage={errors.jobTitle}\n        />\n        <Input\n          label=\"Description du poste*\"\n          multiline\n          inputStyle={{ height: 200, textAlignVertical: \"top\" }}\n          placeholder=\"Les missions, les compétences requises, l'employeur...\"\n          value={jobDesc}\n          onChangeText={value => setJobDesc(value)}\n          errorMessage={errors.jobDesc}\n        />\n        <Input\n          label=\"Expérience*\"\n          placeholder=\"Années passées dans un poste similaire\"\n          value={minExp}\n          keyboardType=\"number-pad\"\n          onChangeText={value => setMinExp(value)}\n          errorMessage={errors.minExp}\n        />\n        <Input\n          label=\"Rémunération\"\n          placeholder=\"En €\"\n          keyboardType=\"decimal-pad\"\n          value={salary}\n          onChangeText={value => setSalary(value)}\n          showSoftInputOnFocus={false}\n          errorMessage={errors.salary}\n        />\n        <View\n          style={{\n            marginBottom: 12,\n            flexDirection: \"row\",\n            display: \"flex\",\n            height: 40\n          }}\n        >\n          <Text\n            style={{\n              color: theme.colors.grey3,\n              fontWeight: \"bold\",\n              paddingLeft: 10,\n              fontSize: 16,\n              flex: 1,\n              textAlignVertical: \"center\"\n            }}\n          >\n            Poste à pourvoir dès que possible\n          </Text>\n          <Switch\n            trackColor={{\n              false: theme.colors.grey4,\n              true: theme.colors.primarySoft\n            }}\n            thumbColor={asap ? theme.colors.primary : theme.colors.grey2}\n            value={asap}\n            onValueChange={value => setAsap(value)}\n          />\n        </View>\n        <Input\n          label=\"Contact\"\n          placeholder=\"Email\"\n          value={contact}\n          onChangeText={value => setContact(value)}\n          errorMessage={errors.contact}\n        />\n      </ScrollView>\n      <View style={{ paddingTop: 8 }}>\n        <Button\n          title=\"Valider les changements\"\n          loading={updating}\n          onPress={() => {\n            setUpdating(true);\n            onEditJob();\n            setUpdating(false);\n            fetchMyJobs();\n            navigation.navigate(\"Read\");\n          }}\n          buttonStyle={{ backgroundColor: theme.colors.primary }}\n        />\n        <Button\n          title=\"Supprimer l'offre\"\n          loading={deleting}\n          onPress={async () => {\n            setDeleting(true);\n            await deleteJob(job._id);\n            setDeleting(false);\n            fetchMyJobs();\n            navigation.navigate(\"Read\");\n          }}\n          buttonStyle={{ backgroundColor: theme.colors.error }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { jobs: state.jobs, auth: state.auth };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateJob: job => dispatch(updateJob(job)),\n    deleteJob: id => dispatch(deleteJob(id)),\n    fetchMyJobs: () => dispatch(fetchMyJobs())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyJobsEditScreen);\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Read from \"./MyJobsReadScreen\";\nimport Edit from \"./MyJobsEditScreen\";\n\nconst Stack = createStackNavigator();\n\nconst MyJobsScreen = () => {\n  return (\n    <View style={{ flex: 1 }}>\n      <Stack.Navigator initialRouteName=\"Read\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"Read\"\n          component={Read}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Edit\"\n          component={Edit}\n          options={{ title: \"Modifier\" }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default MyJobsScreen;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport {\n  View,\n  FlatList,\n  Text,\n  RefreshControl,\n  ActivityIndicator,\n} from \"react-native\";\nimport { Icon, Button } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { fetchJobs } from \"../../actions/jobsActions\";\n\nconst Item = ({ item, navigation }) => {\n  return (\n    <TouchableOpacity\n      onPress={() =>\n        navigation.navigate(\"Read\", {\n          job: item,\n          id: item._id,\n        })\n      }\n    >\n      <View\n        style={{\n          paddingTop: 8,\n          paddingHorizontal: 20,\n          marginVertical: 4,\n          marginHorizontal: 0,\n          borderBottomWidth: 1,\n          borderBottomColor: theme.colors.grey4,\n          paddingVertical: 12,\n          flexDirection: \"row\",\n        }}\n      >\n        <View style={{ flex: 1 }}>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16,\n            }}\n          >\n            {item?.jobTitle} en {item?.employmentType}\n          </Text>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              {item?.organisation}\n            </Text>\n          </View>\n          <View style={{ flexDirection: \"row\", flex: 1, alignItems: \"center\" }}>\n            <Icon name=\"map-marker\" size={20} />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {_.capitalize(item?.city)}\n            </Text>\n            <Text\n              color=\"grey\"\n              style={{\n                color: \"grey\",\n                fontSize: 10,\n                textAlignVertical: \"bottom\",\n              }}\n            >\n              {_.capitalize(moment(item?.publishedAt).locale(\"fr\").fromNow())}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst JobsListScreen = ({ navigation, fetchJobs, jobs }) => {\n  const [refreshing, setRefreshing] = useState(false);\n\n  useEffect(() => {\n    function fetchData() {\n      fetchJobs();\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    fetchJobs();\n    setRefreshing(false);\n  }, [refreshing]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {jobs.isLoaded ? (\n        <FlatList\n          style={{\n            borderRadius: 0,\n            shadowOffset: { width: 10, height: 10 },\n            shadowColor: \"black\",\n            shadowOpacity: 0.3,\n            elevation: 2,\n            backgroundColor: \"white\",\n          }}\n          data={jobs.jobs}\n          renderItem={({ item }) => (\n            <Item item={item} navigation={navigation} />\n          )}\n          keyExtractor={(item) => item?._id}\n          refreshControl={\n            <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n          }\n        />\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n      <Button\n        containerStyle={{\n          position: \"absolute\",\n          bottom: 0,\n          left: 10,\n        }}\n        buttonStyle={{\n          borderRadius: 50,\n        }}\n        icon={<Icon name=\"plus\" size={30} color=\"white\" />}\n        onPress={() => navigation.navigate(\"Post\")}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  jobs: state.jobs,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchJobs: () => dispatch(fetchJobs()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobsListScreen);\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { View, Text, ScrollView } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { fetchJobs } from \"../../actions/jobsActions\";\n\nconst JobsReadScreen = ({ route }) => {\n  const { job } = route.params;\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\",\n      }}\n    >\n      <ScrollView\n        style={{\n          flex: 1,\n          paddingHorizontal: 12,\n        }}\n      >\n        <View style={{ alignItems: \"flex-end\" }}>\n          <Text\n            style={{\n              color: \"grey\",\n              fontSize: 12,\n              textAlignVertical: \"bottom\",\n            }}\n          >\n            {_.capitalize(moment(job.publishedAt).locale(\"fr\").fromNow())}\n          </Text>\n        </View>\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Icon name=\"briefcase\" size={25} color=\"grey\" />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginStart: 8,\n              fontSize: 20,\n            }}\n          >\n            {job.organisation}\n          </Text>\n        </View>\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Icon name=\"map-marker\" size={25} color={theme.colors.grey2} />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginStart: 8,\n              fontSize: 20,\n            }}\n          >\n            {_.capitalize(job.city)}\n          </Text>\n        </View>\n        <Text\n          style={{\n            color: theme.colors.grey3,\n            fontWeight: \"bold\",\n            fontSize: 16,\n            marginTop: 8,\n          }}\n        >\n          Description\n        </Text>\n        <Text style={{ marginBottom: 4, textAlign: \"justify\", fontSize: 16 }}>\n          {job.jobDesc}\n        </Text>\n        {job.salary && (\n          <Text>Rémunération à hauteur de {job.salary} brut.</Text>\n        )}\n        {job.asap && (\n          <Text style={{ color: theme.colors.primary }}>\n            Poste à pourvoir dès que possible.\n          </Text>\n        )}\n        <Text\n          style={{\n            color: theme.colors.grey3,\n            fontWeight: \"bold\",\n            fontSize: 16,\n            marginTop: 8,\n          }}\n        >\n          Contact\n        </Text>\n        <Text>{job.contact}</Text>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  jobs: state.jobs,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchJobs: () => dispatch(fetchJobs()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobsReadScreen);\n","import React, { useState, useContext } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { View, Switch, Text, ScrollView } from \"react-native\";\nimport { Input, Button, ThemeContext } from \"react-native-elements\";\nimport AppNavbar from \"../AppNavbar\";\nimport { createJob } from \"../../actions/jobsActions\";\n\nconst PostScreen = ({}) => {\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const [uploading, setUploading] = useState(false);\n\n  const [errors, setErrors] = useState({});\n\n  // Job\n  const [employmentType, setEmploymentType] = useState(\"\");\n  const [asap, setAsap] = useState(false);\n  const [organisation, setOrganisation] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [salary, setSalary] = useState();\n  const [minExp, setMinExp] = useState();\n  const [contact, setContact] = useState(\"\");\n\n  const filled =\n    !city ||\n    !organisation ||\n    !employmentType ||\n    !jobDesc ||\n    !jobTitle ||\n    !contact\n      ? false\n      : true;\n\n  const uploadJobOffer = () => {\n    setUploading(true);\n\n    const jobOffer = {\n      employmentType,\n      asap,\n      organisation,\n      city,\n      salary,\n      jobDesc,\n      jobTitle,\n      minExp,\n      contact,\n    };\n\n    dispatch(createJob(jobOffer));\n    setUploading(false);\n\n    setAsap(false);\n    setCity();\n    setSalary();\n    setContact();\n    setErrors({});\n    setEmploymentType();\n    setOrganisation();\n    setJobDesc();\n    setJobTitle();\n    setUploading(false);\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flex: 1, backgroundColor: \"white\" }}>\n        <ScrollView\n          style={{\n            paddingHorizontal: 12,\n            paddingTop: 20,\n            paddingBottom: 100,\n          }}\n        >\n          <Input\n            label=\"Type de contrat*\"\n            placeholder=\"CDI, CDD, Apprentissage...\"\n            value={employmentType}\n            onChangeText={(value) => setEmploymentType(value)}\n            errorMessage={errors.employmentType}\n          />\n          <Input\n            label=\"Organisation*\"\n            placeholder=\"Deloitte, Engie, EY...\"\n            value={organisation}\n            onChangeText={(value) => setOrganisation(value)}\n            errorMessage={errors.organisation}\n          />\n          <Input\n            placeholder=\"Paris, Shanghai, Lyon...\"\n            label=\"Ville*\"\n            value={city}\n            onChangeText={(value) => setCity(value)}\n            errorMessage={errors.city}\n          />\n          <Input\n            placeholder=\"Auditeur des SI, Pentester junior...\"\n            label=\"Intitulé du poste*\"\n            value={jobTitle}\n            onChangeText={(value) => setJobTitle(value)}\n            errorMessage={errors.jobTitle}\n          />\n          <Input\n            label=\"Description du poste*\"\n            multiline\n            inputStyle={{ height: 200, textAlignVertical: \"top\" }}\n            placeholder=\"Les missions, les compétences requises, l'employeur...\"\n            value={jobDesc}\n            onChangeText={(value) => setJobDesc(value)}\n            errorMessage={errors.jobDesc}\n          />\n          <Input\n            label=\"Expérience\"\n            placeholder=\"Années passées dans un poste similaire\"\n            value={minExp}\n            keyboardType=\"numeric\"\n            onChangeText={(value) => setMinExp(value)}\n            errorMessage={errors.minExp}\n          />\n          <Input\n            label=\"Rémunération\"\n            placeholder=\"En €\"\n            value={salary}\n            onChangeText={(value) => setSalary(value)}\n            showSoftInputOnFocus={false}\n            errorMessage={errors.salary}\n          />\n          <View\n            style={{\n              marginBottom: 12,\n              flexDirection: \"row\",\n              display: \"flex\",\n              height: 40,\n            }}\n          >\n            <Text\n              style={{\n                color: theme.colors.grey3,\n                fontWeight: \"bold\",\n                paddingLeft: 10,\n                fontSize: 16,\n                flex: 1,\n                textAlignVertical: \"center\",\n              }}\n            >\n              Poste à pourvoir dès que possible\n            </Text>\n            <Switch value={asap} onValueChange={(value) => setAsap(value)} />\n          </View>\n          <Input\n            label=\"Contact*\"\n            placeholder=\"Email\"\n            value={contact}\n            onChangeText={(value) => setContact(value)}\n            errorMessage={errors.contact}\n          />\n          <Button\n            title={\n              filled\n                ? \"Poster l'offre d'emploi\"\n                : \"Veuillez remplir tous les champs obligatoires\"\n            }\n            loading={uploading}\n            disabled={!filled}\n            buttonStyle={{ height: 50, marginBottom: 12 }}\n            onPress={() => uploadJobOffer()}\n          />\n          <View style={{ height: 20 }}></View>\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default PostScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport AppNavbar from \"../AppNavbar\";\nimport JobsListScreen from \"./JobsListScreen\";\nimport JobsReadScreen from \"./JobsReadScreen\";\nimport JobsPostScreen from \"./JobsPostScreen\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nconst Stack = createStackNavigator();\n\nconst JobsScreen = ({ navigation }) => {\n  return (\n    <View style={{ flex: 1 }}>\n      <AppNavbar title=\"Emplois\" navigation={navigation} />\n      <Stack.Navigator initialRouteName=\"List\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"List\"\n          component={JobsListScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Read\"\n          component={JobsReadScreen}\n          options={({ route }) => ({\n            title:\n              route.params.job.jobTitle +\n              \" - \" +\n              route.params.job.employmentType,\n            headerStatusBarHeight: 0\n          })}\n        />\n        <Stack.Screen\n          name=\"Post\"\n          component={JobsPostScreen}\n          options={{\n            title: \"Poster une offre d'emploi\",\n            headerStatusBarHeight: 0\n          }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default JobsScreen;\n","export const dataURLtoBlob = (dataurl) => {\n  var arr = dataurl.split(\",\"),\n    mime = arr[0].match(/:(.*?);/)[1],\n    bstr = atob(arr[1]),\n    n = bstr.length,\n    u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new Blob([u8arr], { type: mime });\n};\n\nexport const fetchFile = (bucketName, fileId) => {\n  return {\n    type: \"REQUEST_FILE\",\n    route: `files/${bucketName}/${fileId}`,\n    method: \"GET\",\n  };\n};\n\nexport const deleteFile = (bucketName, fileId) => {\n  return {\n    type: \"REQUEST_DELETE_FILE\",\n    route: `files/${bucketName}/${fileId}`,\n    method: \"DELETE\",\n    successNotification: {\n      message: \"Votre document a bien été supprimé de la base de données.\",\n      variant: \"success\",\n      timeout: 2000,\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000,\n    },\n  };\n};\n\nexport const uploadFile = (blob, bucketName, name) => {\n  let formData = new FormData();\n\n  // if (Platform.OS === \"web\") {\n  formData.append(\"file\", blob);\n  // } else {\n  //   formData.append(\"file\", new File(file.uri));\n  //   //\n  // }\n\n  name && formData.append(\"name\", name);\n\n  return {\n    type: \"REQUEST_UPLOAD_FILE\",\n    route: `files/${bucketName}`,\n    payload: formData,\n    method: \"POST\",\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000,\n    },\n  };\n};\n","import React, { useState, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Avatar,\n  Divider,\n  Icon,\n  Button,\n  ThemeContext,\n} from \"react-native-elements\";\nimport {\n  View,\n  Text,\n  ScrollView,\n  ActivityIndicator,\n  Platform,\n} from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport {\n  uploadFile,\n  deleteFile,\n  dataURLtoBlob,\n} from \"../../actions/filesActions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport _ from \"lodash\";\nimport AppNavbar from \"../AppNavbar\";\nimport { apiConfig } from \"../../config\";\n\nconst ReadProfileScreen = ({ navigation }) => {\n  const [showAvatarForm, setShowAvatarForm] = useState(false);\n  const { theme } = useContext(ThemeContext);\n  const { user } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const editAvatar = () => {\n    const selectPicture = async () => {\n      await ImagePicker.requestCameraRollPermissionsAsync();\n\n      const file = await ImagePicker.launchImageLibraryAsync({\n        allowsEditing: true,\n      });\n\n      if (file.cancelled) return;\n\n      if (Platform.OS === \"web\") {\n        let blob = dataURLtoBlob(file.uri);\n        console.log(\"selectPicture -> blob\", blob);\n        dispatch(uploadFile(blob, \"avatars\"));\n      } else {\n        let res = await fetch(file.uri);\n        console.log(\"selectPicture -> res\", res);\n        let blob = await res.blob();\n        console.log(\"selectPicture -> blob\", blob);\n        dispatch(uploadFile(blob, \"avatars\"));\n      }\n    };\n    selectPicture();\n    setShowAvatarForm(false);\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n      }}\n    >\n      <AppNavbar\n        navigation={navigation}\n        title=\"Mon profil\"\n        leftButton=\"back\"\n        noRightButton={true}\n      />\n      {user ? (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"space-between\",\n            backgroundColor: \"white\",\n          }}\n        >\n          <ScrollView\n            style={{\n              paddingTop: 40,\n              flex: 1,\n              paddingHorizontal: 12,\n            }}\n          >\n            <LinearGradient\n              colors={[theme.colors.primary, theme.colors.secondary]}\n              start={[0.25, 1]}\n              end={[0, 0]}\n              style={{\n                flexDirection: \"row\",\n                marginBottom: 20,\n                paddingVertical: 8,\n                paddingHorizontal: 16,\n                borderRadius: 5,\n              }}\n            >\n              <View\n                style={{\n                  flex: 1,\n                  alignContent: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Text style={{ fontSize: 20, color: theme.colors.grey5 }}>\n                  {_.capitalize(user.firstname)}\n                </Text>\n                <Text\n                  style={{ fontSize: 30, color: \"white\", fontWeight: \"bold\" }}\n                >\n                  {_.capitalize(user.lastname)}\n                </Text>\n                {user.professor && (\n                  <Text style={{ color: theme.colors.grey4, paddingLeft: 4 }}>\n                    Professeur\n                  </Text>\n                )}\n                {user.administration && (\n                  <Text style={{ color: theme.colors.grey4, paddingLeft: 4 }}>\n                    Membre du corps administratif\n                  </Text>\n                )}\n              </View>\n              {user.avatar ? (\n                <Avatar\n                  size=\"xlarge\"\n                  containerStyle={{\n                    borderColor: \"white\",\n                    borderWidth: 3,\n                  }}\n                  source={{\n                    uri: `${apiConfig.baseUrl}/api/files/avatars/${user.avatar}`,\n                  }}\n                  onPress={() => setShowAvatarForm(!showAvatarForm)}\n                />\n              ) : (\n                <Avatar\n                  size=\"xlarge\"\n                  containerStyle={{\n                    borderColor: \"white\",\n                    borderWidth: 3,\n                  }}\n                  title={user.firstname\n                    .charAt(0)\n                    .concat(user.lastname.charAt(0))\n                    .toUpperCase()}\n                  onPress={() => setShowAvatarForm(!showAvatarForm)}\n                />\n              )}\n              <View\n                style={{\n                  marginLeft: -40,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Button\n                  icon={<Icon name=\"pencil\" color={theme.colors.secondary} />}\n                  onPress={() => editAvatar()}\n                  buttonStyle={{\n                    elevation: 10,\n                    backgroundColor: theme.colors.primaryLight,\n                    width: 40,\n                    height: 40,\n                    borderRadius: 40,\n                  }}\n                />\n                {user.avatar && (\n                  <Button\n                    icon={<Icon name=\"delete\" color={theme.colors.grey4} />}\n                    buttonStyle={{\n                      backgroundColor: theme.colors.grey0,\n                      width: 40,\n                      height: 40,\n                      borderRadius: 40,\n                    }}\n                    onPress={() => dispatch(deleteFile(\"avatars\", user.avatar))}\n                  />\n                )}\n              </View>\n            </LinearGradient>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Icon name=\"briefcase\" size={20} color=\"grey\" />\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  marginHorizontal: 8,\n                  flex: 1,\n                }}\n              >\n                {user.jobTitle} chez {user.organisation}\n              </Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <Icon name=\"school\" size={20} color=\"grey\" />\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  marginHorizontal: 8,\n                  flex: 1,\n                }}\n              >\n                Promotion {user.promo}\n              </Text>\n            </View>\n            <Divider\n              style={{\n                marginVertical: 20,\n                backgroundColor: \"grey\",\n                borderWidth: 1,\n                width: 20,\n              }}\n            />\n            <View style={{ flexDirection: \"row\" }}>\n              <Text style={{ textAlign: \"justify\", flex: 1, marginEnd: 8 }}>\n                {user.description}\n              </Text>\n            </View>\n            <Divider\n              style={{\n                marginVertical: 20,\n                backgroundColor: \"grey\",\n                borderWidth: 1,\n                width: 20,\n              }}\n            />\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Icon name=\"at\" size={20} color=\"grey\" />\n              <Text\n                style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n              >\n                {user.email}\n              </Text>\n            </View>\n          </ScrollView>\n          <View style={{ paddingHorizontal: 20 }}>\n            <Button\n              title=\"Editer\"\n              onPress={() => navigation.navigate(\"Edit\")}\n            />\n          </View>\n        </View>\n      ) : (\n        <View\n          style={{ flex: 1, alignContent: \"center\", justifyContent: \"center\" }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default ReadProfileScreen;\n","import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Button, Input, ThemeContext } from \"react-native-elements\";\nimport { View, ScrollView, Text, TouchableOpacity, Switch } from \"react-native\";\nimport {\n  updateUser,\n  deleteAccount,\n  updateUserPassword,\n} from \"../../actions/authActions\";\n\nconst ProfileEditScreen = ({\n  updateUser,\n  deleteAccount,\n  auth,\n  updateUserPassword,\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const [desc, setDesc] = useState(auth?.user.description);\n  const [email, setEmail] = useState(auth?.user.email);\n  const [jobTitle, setJobTitle] = useState(auth?.user.jobTitle);\n  const [organisation, setOrganisation] = useState(auth?.user.organisation);\n  const [promo, setPromo] = useState(`${auth?.user.promo || \"\"}`);\n  const [alumni, setAlumni] = useState(auth?.user.alumni);\n  const [professor, setProfessor] = useState(auth?.user.professor);\n  const [administration, setAdministration] = useState(\n    auth?.user.administration\n  );\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [showEditPasswordForm, setShowEditPasswordForm] = useState(false);\n  const [showDeleteAccountForm, setShowDeleteAccountForm] = useState(false);\n  const [showEditAccountInfoForm, setShowEditAccountInfoForm] = useState(false);\n\n  const onEditProfile = () => {\n    updateUser({\n      ...auth?.user,\n      description: desc,\n      email,\n      jobTitle,\n      organisation,\n      promo,\n      alumni,\n      professor,\n      administration,\n    });\n  };\n\n  const onChangePassword = () => {\n    if (newPassword.length < 8) {\n      return setPasswordError(\n        \"Choisissez un mot de passe d'au moins 8 caractères.\"\n      );\n    } else if (newPassword !== confirmation) {\n      return setPasswordError(\"Les mots de passe ne correspondent pas.\");\n    }\n    updateUserPassword(password, newPassword);\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\",\n      }}\n    >\n      <ScrollView>\n        <View\n          style={{\n            borderBottomColor: theme.colors.grey4,\n            borderBottomWidth: 1,\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              paddingVertical: 12,\n              paddingHorizontal: 12,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignContent: \"center\",\n            }}\n            onPress={() => setShowEditAccountInfoForm(!showEditAccountInfoForm)}\n          >\n            <Text style={{ fontSize: 16 }}>Editer mes informations</Text>\n            <Icon\n              name={!showEditAccountInfoForm ? \"chevron-down\" : \"chevron-up\"}\n            />\n          </TouchableOpacity>\n          {showEditAccountInfoForm && (\n            <View style={{ marginBottom: 12 }}>\n              <View\n                style={{\n                  marginBottom: 12,\n                  flexDirection: \"row\",\n                  display: \"flex\",\n                  height: 40,\n                }}\n              >\n                <Text\n                  style={{\n                    color: theme.colors.grey3,\n                    fontWeight: \"bold\",\n                    paddingLeft: 10,\n                    fontSize: 16,\n                    flex: 1,\n                    textAlignVertical: \"center\",\n                  }}\n                >\n                  Diplomé\n                </Text>\n                <Switch\n                  value={alumni}\n                  onValueChange={(value) => setAlumni(value)}\n                />\n              </View>\n              {alumni && (\n                <Input\n                  label=\"Promotion\"\n                  value={promo}\n                  onChangeText={(text) => setPromo(text)}\n                  leftIcon={<Icon name=\"school\" />}\n                />\n              )}\n              <View\n                style={{\n                  marginBottom: 12,\n                  flexDirection: \"row\",\n                  display: \"flex\",\n                  height: 40,\n                }}\n              >\n                <Text\n                  style={{\n                    color: theme.colors.grey3,\n                    fontWeight: \"bold\",\n                    paddingLeft: 10,\n                    fontSize: 16,\n                    flex: 1,\n                    textAlignVertical: \"center\",\n                  }}\n                >\n                  Membre du corps professoral\n                </Text>\n                <Switch\n                  value={professor}\n                  onValueChange={(value) => setProfessor(value)}\n                />\n              </View>\n              <View\n                style={{\n                  marginBottom: 12,\n                  flexDirection: \"row\",\n                  display: \"flex\",\n                  height: 40,\n                }}\n              >\n                <Text\n                  style={{\n                    color: theme.colors.grey3,\n                    fontWeight: \"bold\",\n                    paddingLeft: 10,\n                    fontSize: 16,\n                    flex: 1,\n                    textAlignVertical: \"center\",\n                  }}\n                >\n                  Membre du corps administratif\n                </Text>\n                <Switch\n                  value={administration}\n                  onValueChange={(value) => setAdministration(value)}\n                />\n              </View>\n              <Input\n                value={organisation}\n                label=\"Organisation\"\n                onChangeText={(text) => setOrganisation(text)}\n                leftIcon={<Icon name=\"domain\" />}\n              />\n              <Input\n                value={jobTitle}\n                onChangeText={(text) => setJobTitle(text)}\n                label=\"Profession\"\n                leftIcon={<Icon name=\"briefcase\" />}\n              />\n              <Input\n                label=\"Description\"\n                value={desc}\n                multiline\n                numberOfLines={8}\n                onChangeText={(text) => setDesc(text)}\n              />\n              <Input\n                label=\"email\"\n                value={email}\n                leftIcon={<Icon name=\"email\" />}\n                onChangeText={(text) => setEmail(text)}\n              />\n              <Button\n                title=\"Valider les changements\"\n                onPress={() => onEditProfile()}\n                buttonStyle={{ backgroundColor: theme.colors.primary }}\n              />\n            </View>\n          )}\n        </View>\n        <View\n          style={{\n            borderBottomColor: theme.colors.grey4,\n            borderBottomWidth: 1,\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              paddingVertical: 12,\n              paddingHorizontal: 12,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n            onPress={() => setShowEditPasswordForm(!showEditPasswordForm)}\n          >\n            <Text style={{ fontSize: 16 }}>Changer mon mot de passe</Text>\n            <Icon\n              name={!showEditPasswordForm ? \"chevron-down\" : \"chevron-up\"}\n            />\n          </TouchableOpacity>\n          {showEditPasswordForm && (\n            <View style={{ marginBottom: 12 }}>\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Ancien mot de passe\"\n                secureTextEntry\n                value={password}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={(value) => setPassword(value)}\n              />\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Nouveau mot de passe\"\n                secureTextEntry\n                value={newPassword}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={(value) => {\n                  setPasswordError(\"\");\n                  setNewPassword(value);\n                }}\n                errorMessage={passwordError}\n              />\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={\n                  <Icon\n                    name={confirmation === newPassword ? \"check\" : \"close\"}\n                    color={confirmation === newPassword ? \"green\" : \"red\"}\n                  />\n                }\n                label=\"Confirmation\"\n                secureTextEntry\n                value={confirmation}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 40, marginTop: 8 }}\n                onChangeText={(value) => setConfirmation(value)}\n              />\n              <Button\n                title=\"Valider\"\n                onPress={() => onChangePassword()}\n                buttonStyle={{ backgroundColor: theme.colors.primary }}\n                loading={auth.isUpdatingPassword}\n              />\n            </View>\n          )}\n        </View>\n        <View>\n          <TouchableOpacity\n            style={{\n              paddingVertical: 12,\n              paddingHorizontal: 12,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n            onPress={() => setShowDeleteAccountForm(!showDeleteAccountForm)}\n          >\n            <Text style={{ fontSize: 16 }}>Supprimer mon compte</Text>\n            <Icon\n              name={!showDeleteAccountForm ? \"chevron-down\" : \"chevron-up\"}\n            />\n          </TouchableOpacity>\n          {showDeleteAccountForm && (\n            <View style={{ marginBottom: 12 }}>\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Mot de passe\"\n                secureTextEntry\n                value={password}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={(value) => setPassword(value)}\n              />\n              <Button\n                title=\"Valider\"\n                disabled={!password}\n                onPress={(password) => deleteAccount(password)}\n                buttonStyle={{ backgroundColor: theme.colors.error }}\n              />\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateUser: (user) => dispatch(updateUser(user)),\n    deleteAccount: (password) => dispatch(deleteAccount(password)),\n    updateUserPassword: (password, newPassword) =>\n      dispatch(updateUserPassword(password, newPassword)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEditScreen);\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport ReadProfileScreen from \"./ProfileReadScreen\";\nimport EditProfileScreen from \"./ProfileEditScreen\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nconst Stack = createStackNavigator();\n\nconst ProfileScreen = () => {\n  return (\n    <View style={{ flex: 1 }}>\n      <Stack.Navigator initialRouteName=\"Lobby\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"Read\"\n          component={ReadProfileScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Edit\"\n          component={EditProfileScreen}\n          options={{ title: \"Modifier mon compte\" }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default ProfileScreen;\n","import React, { useContext, useState } from \"react\";\nimport { View, TextInput, Text, StyleSheet } from \"react-native\";\nimport { ThemeContext, Icon } from \"react-native-elements\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { useDispatch } from \"react-redux\";\nimport { showOverlay } from \"../actions/overlayAction\";\n\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\n\nconst CustomInput = ({\n  value,\n  placeholder,\n  onChangeText,\n  searchBar,\n  select,\n  clear,\n  leftIcon,\n  label,\n  accept,\n  date,\n  secureTextEntry = false,\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const [error, setError] = useState(false);\n\n  if (date && value) value = moment(value).format(\"Do MMMM YYYY\");\n\n  const handleChangeText = async (text) => {\n    if (accept && !accept?.includes(value)) {\n      setError(true);\n    } else {\n      setError(false);\n    }\n\n    onChangeText(text);\n  };\n\n  return (\n    <View style={[styles.root]}>\n      <View style={styles.content}>\n        <View style={styles.labelContainer}>\n          <Text style={styles.label}>{label}</Text>\n        </View>\n        <View style={styles.inputContainer}>\n          {leftIcon && (\n            <Icon name={leftIcon} containerStyle={styles.iconContainer} />\n          )}\n          {searchBar || select || date ? (\n            <TouchableOpacity\n              containerStyle={[styles.TextInput, { height: 60 }]}\n              style={[\n                styles.TextInput,\n                { alignItems: \"flex-start\", justifyContent: \"center\" },\n              ]}\n              onPress={() => {\n                if (date)\n                  return dispatch(\n                    showOverlay({\n                      dateInput: { onChangeText },\n                    })\n                  );\n                dispatch(\n                  showOverlay({\n                    searchBar: {\n                      initialValue: value,\n                      searchFor: searchBar,\n                      selectFrom: select,\n                      onPressSuggestion: onChangeText,\n                      placeholder,\n                    },\n                  })\n                );\n              }}\n            >\n              <Text style={{ color: value ? \"black\" : \"grey\" }}>\n                {value || placeholder}\n              </Text>\n            </TouchableOpacity>\n          ) : (\n            <TextInput\n              style={styles.TextInput}\n              value={value}\n              placeholder={placeholder}\n              placeholderTextColor=\"grey\"\n              onChangeText={(text) => {\n                handleChangeText(text);\n              }}\n              secureTextEntry={secureTextEntry}\n            />\n          )}\n          {select && (\n            <Icon\n              name=\"chevron-down\"\n              containerStyle={styles.iconContainer}\n              size={25}\n              onPress={() =>\n                dispatch(\n                  showOverlay({\n                    searchBar: {\n                      initialValue: value,\n                      searchFor: searchBar,\n                      selectFrom: select,\n                      onPressSuggestion: onChangeText,\n                      placeholder,\n                    },\n                  })\n                )\n              }\n            />\n          )}\n          {(searchBar || clear) && (\n            <Icon\n              name=\"close\"\n              containerStyle={styles.iconContainer}\n              size={20}\n              onPress={() => onChangeText(\"\")}\n            />\n          )}\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default CustomInput;\n\nconst styles = StyleSheet.create({\n  root: { marginBottom: 12, flexDirection: \"row\", alignSelf: \"stretch\" },\n  iconContainer: { marginHorizontal: 4 },\n  content: { flex: 1, width: 300 },\n  labelContainer: { marginBottom: 4 },\n  sides: { flex: 1, backgroundColor: \"blue\" },\n  label: { color: \"darkgrey\" },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: \"grey\",\n    height: 40,\n    backgroundColor: \"rgba(250,250,250,1)\",\n  },\n  TextInput: { paddingHorizontal: 4, flex: 1 },\n});\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  View,\n  Text,\n  ActivityIndicator,\n  FlatList,\n  TouchableOpacity,\n  Dimensions,\n} from \"react-native\";\nimport { Avatar, Icon } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport _ from \"lodash\";\nimport { apiConfig } from \"../../config\";\nimport CustomInput from \"../CustomInput\";\n\nconst Item = ({ item, navigation }) => {\n  if (!item) return null;\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Read\", { id: item._id, item });\n      }}\n    >\n      <View\n        style={{\n          paddingHorizontal: 20,\n          borderBottomWidth: 1,\n          borderBottomColor: theme.colors.grey4,\n          paddingVertical: 16,\n          flexDirection: \"row\",\n        }}\n      >\n        <View\n          style={{\n            alignContent: \"center\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginRight: 12,\n          }}\n        >\n          {item.avatar ? (\n            <Avatar\n              source={{\n                uri: `${apiConfig.baseUrl}/api/files/avatars/${item.avatar}`,\n              }}\n              size=\"medium\"\n            />\n          ) : (\n            <Avatar\n              size=\"medium\"\n              title={item.firstname[0].concat(item.lastname[0]).toUpperCase()}\n            />\n          )}\n        </View>\n        <View>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16,\n            }}\n          >\n            {_.capitalize(item.firstname)} {_.capitalize(item.lastname)}\n          </Text>\n          {item.jobTitle && (\n            <View\n              style={{ flexDirection: \"row\", flex: 1, alignItems: \"center\" }}\n            >\n              <Icon name=\"account-card-details\" size={20} />\n              <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n                {item.jobTitle} - {item.organisation}\n              </Text>\n            </View>\n          )}\n          {item.promo && (\n            <View\n              style={{ flexDirection: \"row\", flex: 1, alignItems: \"center\" }}\n            >\n              <Icon name=\"school\" size={20} />\n              <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n                SIEE promotion {item.promo}\n              </Text>\n            </View>\n          )}\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst PeopleScreen = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const { users } = useSelector((state) => state);\n\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchUsers());\n    }\n    fetchData();\n  }, []);\n  const [search, setSearch] = useState(\"\");\n\n  const searchableKeys = [\n    \"firstname\",\n    \"lastname\",\n    \"organisation\",\n    \"city\",\n    \"country\",\n    \"jobTitle\",\n    \"promo\",\n  ];\n\n  const data = users?.users?.filter((u) => {\n    let a = false;\n    searchableKeys.every((sk, i) => {\n      if (`${u[sk]}`.toLowerCase().search(search.toLowerCase()) > -1) a = true;\n      if (a === true) return false;\n      else return true;\n    });\n    return a;\n  });\n\n  return (\n    <View style={{ flex: 1, flexDirection: \"row\" }}>\n      <View style={{ flex: 1 }} />\n      <View\n        style={{\n          width:\n            Dimensions.get(\"window\").width < 500\n              ? Dimensions.get(\"window\").width\n              : 500,\n        }}\n      >\n        <View\n          style={{\n            padding: 8,\n            backgroundColor: \"white\",\n            borderColor: \"lightgrey\",\n            margin: 12,\n            borderRadius: 4,\n            borderWidth: 1,\n          }}\n        >\n          <CustomInput\n            onChangeText={setSearch}\n            placeholder=\"John, Doe, Paris, KPMG...\"\n            value={search}\n            leftIcon=\"magnify\"\n          />\n        </View>\n        {useSelector((state) => state.users.isLoaded) ? (\n          <FlatList\n            style={{\n              backgroundColor: \"white\",\n              borderColor: \"lightgrey\",\n              borderWidth: 1,\n              margin: 12,\n              borderRadius: 4,\n            }}\n            data={data}\n            renderItem={({ item }) => (\n              <Item item={item} navigation={navigation} />\n            )}\n            keyExtractor={(item) => item._id}\n          />\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <ActivityIndicator size=\"large\" />\n          </View>\n        )}\n      </View>\n      <View style={{ flex: 1 }} />\n    </View>\n  );\n};\n\nexport default PeopleScreen;\n","export const fetchUsers = () => {\n  return {\n    type: \"REQUEST_USERS\",\n    method: \"GET\",\n    route: \"users\"\n  };\n};\n","export const sendPrivateMessage = (message) => {\n  return {\n    type: \"SOCKET\",\n    event: \"private-message\",\n    payload: {\n      ...message,\n      sentAt: new Date(),\n    },\n  };\n};\n\nexport const sendReadAck = (conversation_id) => {\n  return {\n    type: \"SOCKET\",\n    event: \"read-ack\",\n    payload: {\n      conversation_id,\n      sentAt: new Date(),\n    },\n  };\n};\n\nexport const startConversation = (message) => {\n  return {\n    type: \"SOCKET\",\n    event: \"new-conversation\",\n    payload: {\n      ...message,\n      sentAt: new Date(),\n    },\n  };\n};\n\nexport const fetchConversation = (conversation_id) => {\n  return {\n    type: \"REQUEST_CONVERSATION\",\n    method: \"GET\",\n    route: `conversations/single/${conversation_id}`,\n  };\n};\n\nexport const fetchConversations = () => {\n  return {\n    type: \"REQUEST_CONVERSATIONS\",\n    method: \"GET\",\n    route: `conversations`,\n  };\n};\n\nexport const deleteConversation = (conversation_id) => {\n  return {\n    type: \"REQUEST_DELETE_CONVERSATION\",\n    method: \"DELETE\",\n    route: `conversations/${conversation_id}`,\n    errorNotification: true,\n  };\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { View, Text, ScrollView } from \"react-native\";\nimport { Avatar, Divider, Icon, Button } from \"react-native-elements\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport theme from \"../../Theme.json\";\nimport _ from \"lodash\";\nimport { showOverlay } from \"../../actions/overlayAction\";\nimport { startConversation } from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\n\nconst PeopleScreen = ({ route, navigation }) => {\n  const { auth } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const { item } = route.params;\n  const fullname =\n    _.capitalize(item.firstname) + \" \" + _.capitalize(item.lastname);\n\n  if (!item) return null;\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 8,\n      }}\n    >\n      <ScrollView\n        style={{\n          flex: 1,\n        }}\n      >\n        <LinearGradient\n          colors={[theme.colors.primary, theme.colors.secondary]}\n          start={[0.25, 1]}\n          end={[0, 0]}\n          style={{\n            flexDirection: \"row\",\n            marginBottom: 20,\n            paddingVertical: 8,\n            paddingHorizontal: 16,\n            borderRadius: 5,\n          }}\n        >\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text style={{ fontSize: 20, color: theme.colors.grey5 }}>\n              {_.capitalize(item.firstname)}\n            </Text>\n            <Text style={{ fontSize: 30, color: \"white\", fontWeight: \"bold\" }}>\n              {_.capitalize(item.lastname)}\n            </Text>\n            {item.professor && (\n              <Text style={{ color: theme.colors.grey4, paddingLeft: 4 }}>\n                Professeur\n              </Text>\n            )}\n            {item.administration && (\n              <Text style={{ color: theme.colors.grey4, paddingLeft: 4 }}>\n                Membre du corps administratif\n              </Text>\n            )}\n          </View>\n          {item.avatar ? (\n            <Avatar\n              size=\"xlarge\"\n              containerStyle={{\n                borderColor: \"white\",\n                borderWidth: 3,\n              }}\n              source={{\n                uri: `${apiConfig.baseUrl}/api/files/avatars/${item.avatar}`,\n              }}\n            />\n          ) : (\n            <Avatar\n              size=\"xlarge\"\n              containerStyle={{\n                borderColor: \"white\",\n                borderWidth: 3,\n              }}\n              title={item.firstname\n                .charAt(0)\n                .concat(item.lastname.charAt(0))\n                .toUpperCase()}\n            />\n          )}\n        </LinearGradient>\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Icon name=\"briefcase\" size={20} color=\"grey\" />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginHorizontal: 8,\n              flex: 1,\n            }}\n          >\n            {item.jobTitle} chez {item.organisation}\n          </Text>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <Icon name=\"school\" size={20} color=\"grey\" />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginHorizontal: 8,\n              flex: 1,\n            }}\n          >\n            Promotion {item.promo}\n          </Text>\n        </View>\n        <Divider\n          style={{\n            marginVertical: 20,\n            backgroundColor: \"grey\",\n            borderWidth: 1,\n            width: 20,\n          }}\n        />\n        <View style={{ flexDirection: \"row\" }}>\n          <Text style={{ textAlign: \"justify\", flex: 1, marginEnd: 8 }}>\n            {item.description}\n          </Text>\n        </View>\n        <Divider\n          style={{\n            marginVertical: 20,\n            backgroundColor: \"grey\",\n            borderWidth: 1,\n            width: 20,\n          }}\n        />\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon name=\"at\" size={20} color=\"grey\" />\n          <Text\n            style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n          >\n            {item.email}\n          </Text>\n        </View>\n      </ScrollView>\n      {item._id !== auth.user._id && (\n        <View>\n          <Button\n            title=\"Contacter\"\n            onPress={() => {\n              let a = auth?.user.conversations.filter(\n                (c) => c.interlocutor_id == item._id\n              );\n              if (a.length > 0) {\n                navigation.navigate(\"Messages\", {\n                  screen: \"Room\",\n                  params: {\n                    title: fullname,\n                    conversation_id: a[0].conversation_id,\n                  },\n                });\n              } else\n                dispatch(\n                  showOverlay({\n                    form: {\n                      action: startConversation,\n                      inputName: \"text\",\n                      actionParams: { recipient: item._id },\n                      message:\n                        \"Demarrer une conversation avec \" +\n                        _.capitalize(item.firstname) +\n                        \" \" +\n                        _.capitalize(item.lastname),\n                    },\n                    redirect: \"Messages\",\n                  })\n                );\n            }}\n          />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default PeopleScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AppNavbar from \"../AppNavbar\";\nimport PeopleListScreen from \"./PeopleListScreen\";\nimport PeopleReadScreen from \"./PeopleReadScreen\";\nconst Stack = createStackNavigator();\n\nconst PeopleScreen = ({ navigation }) => {\n  return (\n    <View style={{ flex: 1 }}>\n      <AppNavbar title=\"Annuaire\" navigation={navigation} />\n      <Stack.Navigator initialRouteName=\"List\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"List\"\n          component={PeopleListScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Read\"\n          component={PeopleReadScreen}\n          options={{\n            headerStatusBarHeight: 0,\n            title: \"\",\n            headerStyle: { height: 40 },\n          }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default PeopleScreen;\n","import React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  View,\n  Text,\n  ActivityIndicator,\n  FlatList,\n  TouchableOpacity,\n  RefreshControl,\n  TextInput,\n} from \"react-native\";\nimport { Avatar, ThemeContext, Button, Icon } from \"react-native-elements\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport { fetchConversations } from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\n\nconst Item = ({ item, navigation, auth }) => {\n  const listParticipants = () => {\n    _.remove(\n      item.participants,\n      (participant) => participant._id === auth?.user._id\n    );\n\n    if (item.participants?.length > 1) {\n      const participantsList = item.participants?.map((participant) =>\n        _.capitalize(participant.firstname)\n      );\n      return participantsList.toString().replace(\",\", \", \");\n    } else if (item.participants?.length === 1) {\n      return _.capitalize(item.participants[0]?.firstname).concat(\n        \" \",\n        _.capitalize(item.participants[0]?.lastname)\n      );\n    } else {\n      return \"Compte supprimé\";\n    }\n  };\n\n  const title = listParticipants();\n\n  const incoming = item.lastMessage?.sender !== auth?.user._id;\n\n  if (!item) return null;\n\n  return (\n    <TouchableOpacity\n      onPress={() =>\n        navigation.navigate(\"Room\", {\n          title,\n          conversation_id: item._id,\n        })\n      }\n    >\n      <View\n        style={{\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          borderBottomColor: \"white\",\n          borderBottomWidth: 3,\n          backgroundColor: \"white\",\n        }}\n      >\n        <View style={{ flexDirection: \"row\" }}>\n          <View\n            style={{\n              alignContent: \"center\",\n              justifyContent: \"center\",\n              paddingRight: 8,\n            }}\n          >\n            {item.participants[0]?.avatar ? (\n              <Avatar\n                source={{\n                  uri: `${apiConfig.baseUrl}/api/files/avatars/${item.participants[0]?.avatar}`,\n                }}\n                size=\"medium\"\n              />\n            ) : (\n              <Avatar\n                size=\"medium\"\n                title={item.participants[0]?.firstname[0]\n                  .concat(item.participants[0]?.lastname[0])\n                  .toUpperCase()}\n              />\n            )}\n          </View>\n          <View\n            style={{\n              flex: 1,\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  fontSize: 16,\n                  fontWeight: \"bold\",\n                }}\n              >\n                {title}\n              </Text>\n              <Text\n                color=\"grey\"\n                style={{\n                  color: \"grey\",\n                  fontSize: 10,\n                  textAlignVertical: \"bottom\",\n                }}\n              >\n                {_.capitalize(\n                  moment(item.messages[0].sentAt).locale(\"fr\").fromNow()\n                )}\n              </Text>\n            </View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Text\n                style={{\n                  textAlignVertical: \"center\",\n                  fontSize: 14,\n                  flex: 1,\n                  fontWeight: item.messages[0] && incoming ? 100 : 800,\n                }}\n              >\n                {item.messages[0].sender === auth?.user._id && \"Vous: \"}\n                {item.messages[0].text}\n                {item.readAck.message_id === messages[0]._id &&\n                  !incoming &&\n                  `Lu il y a ${moment(item.readAck.timestamp)\n                    .locale(\"fr\")\n                    .fromNow()}`}\n              </Text>\n            </View>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst ChatLobbyScreen = ({ navigation }) => {\n  const [refreshing, setRefreshing] = useState(false);\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const { chat, auth } = useSelector((state) => state);\n\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchConversations());\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    dispatch(fetchConversations());\n    setRefreshing(false);\n  }, [refreshing]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {chat.isLoaded ? (\n        chat.conversations.length > 0 ? (\n          <FlatList\n            data={chat.conversations}\n            renderItem={({ item }) => (\n              <Item\n                item={item}\n                auth={auth}\n                navigation={navigation}\n                theme={theme}\n                dispatch={dispatch}\n              />\n            )}\n            keyExtractor={(item) => item._id}\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n          />\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text style={{ textAlign: \"center\", color: theme.colors.grey3 }}>\n              Aucune conversation\n            </Text>\n            <Button\n              title=\"Rafraichir\"\n              type=\"clear\"\n              onPress={() => dispatch(fetchConversations())}\n            />\n          </View>\n        )\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default ChatLobbyScreen;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  FlatList,\n  ActivityIndicator,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ThemeContext, Button, Icon } from \"react-native-elements\";\nimport {\n  sendPrivateMessage,\n  fetchConversation,\n  sendReadAck,\n} from \"../../actions/chatActions\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\n\nconst Message = ({ message, incoming, theme, i, readAck }) => {\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n      }}\n    >\n      {!incoming && <View style={{ flex: 1 }}></View>}\n      <View\n        style={{\n          backgroundColor: incoming ? \"white\" : theme.colors.primary,\n          borderTopLeftRadius: !incoming ? 10 : 0,\n          borderTopRightRadius: 10,\n          borderBottomLeftRadius: 10,\n          borderBottomRightRadius: incoming ? 10 : 0,\n          maxWidth: \"80%\",\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          marginBottom: 8,\n          marginHorizontal: 8,\n        }}\n      >\n        <Text\n          selectable\n          style={{\n            color: !incoming ? \"white\" : \"black\",\n            textAlign: incoming ? \"left\" : \"right\",\n          }}\n        >\n          {message.text}\n        </Text>\n        {readAck.message_id === item._id && (\n          <Text>\n            Lu il y a {moment(readAck.timestamp).locale(\"fr\").fromNow()}\n          </Text>\n        )}\n      </View>\n      {incoming && <View style={{ flex: 1 }}></View>}\n    </View>\n  );\n};\n\nconst RoomScreen = ({ route }) => {\n  const { conversation_id } = route.params;\n  const [newMessage, setNewMessage] = useState(\"\");\n  const { theme } = useContext(ThemeContext);\n\n  const { user } = useSelector((state) => state.auth);\n  const conversation = useSelector(\n    (state) =>\n      state.chat.conversations.filter((conv) => conv._id === conversation_id)[0]\n  );\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchConversation(conversation_id));\n      if (conversation.lastMessage.read === false)\n        dispatch(sendReadAck(conversation_id));\n    }\n    fetchData();\n  }, []);\n\n  const onSendMessage = () => {\n    const interlocutors = conversation?.participants.filter(\n      (p) => p._id != user._id\n    );\n    dispatch(\n      sendPrivateMessage({\n        text: newMessage,\n        conversation_id,\n        recipient: interlocutors[0],\n      })\n    );\n    setNewMessage(\"\");\n  };\n\n  // is something triggered from here when reveiving a message that isn't triggered outside of this screen\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      {conversation?.messages ? (\n        <FlatList\n          data={conversation.messages}\n          renderItem={({ item }, i) => (\n            <Message\n              i={i}\n              message={item}\n              incoming={item?.sender !== user._id}\n              theme={theme}\n              readAck={conversation.readAck}\n            />\n          )}\n          keyExtractor={(item) => item?._id}\n          inverted={true}\n        />\n      ) : (\n        <ActivityIndicator />\n      )}\n      <View>\n        {conversation.read && conversation.lastMessage.sender !== user._id && (\n          <Text style={{ flex: 1, textAlign: \"right\" }}>\n            Vu à {conversation.read.sentAt}\n          </Text>\n        )}\n        <View\n          style={{\n            flexDirection: \"row\",\n            backgroundColor: \"white\",\n            paddingVertical: 8,\n            paddingHorizontal: 16,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            alignContent: \"center\",\n          }}\n        >\n          <TextInput\n            style={{\n              height: 40,\n              flex: 1,\n            }}\n            onChangeText={(text) => setNewMessage(text)}\n            value={newMessage}\n            multiline\n            placeholder=\"Ecrivez votre message ici.\"\n          />\n          <Button\n            icon={\n              <Icon\n                name=\"send\"\n                size={20}\n                color={newMessage ? theme.colors.primary : theme.colors.grey2}\n              />\n            }\n            disabled={!newMessage}\n            type=\"clear\"\n            onPress={() => onSendMessage()}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default RoomScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport AppNavbar from \"../AppNavbar\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Lobby from \"./MessagesLobbyScreen\";\nimport Room from \"./MessagesRoomScreen\";\nimport _ from \"lodash\";\n\nconst Stack = createStackNavigator();\n\nconst MessagesScreen = ({ navigation }) => {\n  return (\n    <View style={{ flex: 1 }}>\n      <AppNavbar title=\"Messagerie\" navigation={navigation} />\n      <Stack.Navigator initialRouteName=\"Lobby\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"Lobby\"\n          component={Lobby}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Room\"\n          component={Room}\n          options={({ route }) => {\n            const { title } = route.params;\n            if (!title) {\n              return {\n                title: \"Compte supprimé\",\n                headerStatusBarHeight: 0,\n              };\n            } else {\n              return {\n                title: title,\n                headerStatusBarHeight: 0,\n              };\n            }\n          }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default MessagesScreen;\n","import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { View, Image } from \"react-native\";\nimport { Input, Button, Icon, ThemeContext } from \"react-native-elements\";\nimport { logIn } from \"../../actions/authActions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst logInScreen = ({ auth, logIn, navigation }) => {\n  const { theme } = useContext(ThemeContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const handleLogIn = async () => {\n    if (!email) {\n      return setErrors({ email: \"Mél invalide.\" });\n    } else if (!password) {\n      return setErrors({ password: \"Mot de passe invalide.\" });\n    }\n\n    setErrors({});\n    logIn({ email, password });\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        backgroundColor: \"white\",\n      }}\n    >\n      <LinearGradient\n        colors={[theme.colors.primary, theme.colors.secondary]}\n        start={[0.25, 1]}\n        end={[0, 0]}\n        style={{\n          flexDirection: \"row\",\n          marginBottom: 20,\n          height: 150,\n          width: 150,\n          borderRadius: 100,\n        }}\n      >\n        <Image\n          source={require(\"../../assets/images/logo.png\")}\n          style={{\n            height: 150,\n            width: 150,\n            borderRadius: 100,\n          }}\n        />\n      </LinearGradient>\n      <Input\n        placeholder=\"Email\"\n        leftIcon={<Icon name=\"email\" type=\"material-community\" />}\n        value={email}\n        onChangeText={(value) => setEmail(value)}\n        label=\"Email\"\n        errorStyle={{ color: \"red\" }}\n        errorMessage={errors.email}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={<Icon name=\"lock\" />}\n        label=\"Mot de passe\"\n        secureTextEntry\n        value={password}\n        containerStyle={{ marginBottom: 30, marginTop: 8 }}\n        onChangeText={(value) => setPassword(value)}\n        errorStyle={{ color: \"red\" }}\n        errorMessage={errors.password}\n      />\n      <Button\n        title=\"Se connecter\"\n        onPress={handleLogIn}\n        containerStyle={{ marginBottom: 20, marginTop: 8 }}\n      />\n      <Button\n        title=\"Nouveau? Je m'enregistre.\"\n        type=\"clear\"\n        onPress={() => navigation.navigate(\"SignUp\")}\n        containerStyle={{ marginBottom: 30 }}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logIn: (credentials) => dispatch(logIn(credentials)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(logInScreen);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ScrollView } from \"react-native\";\nimport { Input, Button, Icon } from \"react-native-elements\";\nimport { signUp } from \"../../actions/authActions\";\n\nconst SignUpScreen = ({ signUp, auth }) => {\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const handleSignUp = async () => {\n    if (!firstname) {\n      return setErrors({ firstname: \"Prénom manquant.\" });\n    } else if (!lastname) {\n      return setErrors({ lastname: \"Nom manquant.\" });\n    } else if (!email) {\n      return setErrors({ mail: \"Mél manquant.\" });\n    } else if (password.length < 8 === true) {\n      return setErrors({ password: \"Mot de passe manquant.\" });\n    } else if (password !== confirmation) {\n      return setErrors({\n        confirmation: \"Veuillez retaper la confirmation de votre mot de passe.\",\n      });\n    }\n    setErrors({});\n    signUp({ email, password, firstname, lastname, code });\n  };\n\n  return (\n    <ScrollView\n      containerStyle={{\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n      style={{\n        backgroundColor: \"white\",\n        paddingHorizontal: 12,\n        paddingVertical: 20,\n        flex: 1,\n      }}\n    >\n      <Input\n        placeholder=\"Prénom\"\n        value={firstname}\n        onChangeText={(value) => setFirstname(value)}\n        label=\"Prénom\"\n        errorMessage={errors.firstname}\n      />\n      <Input\n        placeholder=\"Nom\"\n        value={lastname}\n        onChangeText={(value) => setLastname(value)}\n        label=\"Nom\"\n        errorMessage={errors.lastname}\n      />\n      <Input\n        placeholder=\"Email\"\n        leftIcon={<Icon name=\"email\" type=\"material-community\" />}\n        value={email}\n        onChangeText={(value) => setEmail(value)}\n        label=\"Email\"\n        errorMessage={errors.email}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={<Icon name=\"lock\" />}\n        label=\"Mot de passe\"\n        secureTextEntry\n        value={password}\n        onChangeText={(value) => setPassword(value)}\n        errorMessage={errors.password}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={\n          <Icon\n            name={\n              confirmation !== password || password.length < 8\n                ? \"close\"\n                : \"check\"\n            }\n            color={\n              confirmation !== password || password.length < 8 ? \"red\" : \"green\"\n            }\n          />\n        }\n        label=\"Confirmation\"\n        secureTextEntry\n        value={confirmation}\n        leftIconContainerStyle={{ marginRight: 12 }}\n        onChangeText={(value) => setConfirmation(value)}\n        errorMessage={errors.confirmation}\n      />\n      <Button\n        title=\"S'inscrire\"\n        onPress={handleSignUp}\n        loading={auth.isSigningUp}\n        containerStyle={{ marginBottom: 20, marginTop: 40 }}\n      />\n    </ScrollView>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (credentials) => dispatch(signUp(credentials)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpScreen);\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport LogInScreen from \"./LogInScreen\";\nimport SignUpScreen from \"./SignUpScreen\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nconst Stack = createStackNavigator();\n\nconst AuthNavigator = () => {\n  return (\n    <View style={{ flex: 1 }}>\n      <Stack.Navigator initialRouteName=\"LogIn\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"LogIn\"\n          component={LogInScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"SignUp\"\n          component={SignUpScreen}\n          options={{\n            title: \"S'inscrire\",\n          }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default AuthNavigator;\n","import React, { useState } from \"react\";\nimport { apiConfig } from \"../../config\";\nimport {\n  View,\n  TextInput,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n} from \"react-native\";\nimport axios from \"axios\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { Dimensions } from \"react-native\";\n\nconst SearchBar = ({ searchBar, dispatchRedirectReset, theme }) => {\n  const [value, setValue] = useState(searchBar.initialValue);\n  const [suggestions, setSuggestions] = useState([]);\n\n  const search = \"cities\";\n  const searchIn = { firstname: [\"bonjour\"], lastname: [\"ldskfjs\"] };\n\n  const handleChangeText = async (text) => {\n    setValue(text);\n    if (text === \"\") {\n      return setSuggestions([]);\n    }\n\n    const { data } = await axios.get(\n      `${apiConfig.baseUrl}/api/complete/${searchBar.searchFor}/${text}`\n    );\n    setSuggestions(data);\n  };\n\n  const SuggestionItem = ({ item }) => {\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          searchBar.onPressSuggestion([item.value, item.title]);\n          dispatchRedirectReset();\n        }}\n        style={styles.suggestion}\n      >\n        <Text>\n          {item.title}\n          {item.other?.map((o) => \" - \" + o)}\n        </Text>\n      </TouchableOpacity>\n    );\n  };\n  return (\n    <View style={styles.root}>\n      {searchBar.searchFor && (\n        <TextInput\n          autoFocus={true}\n          value={value}\n          placeholder={searchBar.placeholder}\n          placeholderTextColor=\"grey\"\n          onChangeText={(text) => handleChangeText(text)}\n          style={[\n            theme.TextInput,\n            { height: 40, width: Dimensions.get(\"window\").width - 100 },\n          ]}\n        />\n      )}\n      <ScrollView style={styles.suggestionsContainer}>\n        {suggestions.map((s, i) => (\n          <SuggestionItem item={s} key={i} />\n        ))}\n        {searchBar.selectFrom?.map((s, i) => (\n          <SuggestionItem item={s} key={i} />\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default SearchBar;\n\nconst styles = StyleSheet.create({\n  root: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    elevation: 1,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.5,\n    shadowRadius: 20,\n  },\n  suggestionsContainer: {\n    height: 200,\n  },\n  suggestion: {\n    paddingHorizontal: 2,\n    paddingVertical: 4,\n  },\n});\n","import React, { useState, useRef } from \"react\";\nimport { View, TextInput, Text, StyleSheet } from \"react-native\";\n\nconst DateInput = ({ dateInput, dispatchRedirectReset, theme }) => {\n  const [day, setDay] = useState(dateInput.initialValue?.getDate() || \"\");\n  const [month, setMonth] = useState(\n    dateInput.initialValue?.getMonth() + 1 || \"\"\n  );\n  const [year, setYear] = useState(dateInput.initialValue?.getYear() || \"\");\n\n  const dayInputRef = useRef();\n  const monthInputRef = useRef();\n  const yearInputRef = useRef();\n\n  if (day.length === 2) {\n    monthInputRef.current.focus();\n  }\n  if (month.length === 2) {\n    if (day.length < 2) {\n      dayInputRef.current.focus();\n    } else {\n      yearInputRef.current.focus();\n    }\n  }\n  if (year.length === 4) {\n    if (day.length < 2) {\n      dayInputRef.current.focus();\n    } else if (month.length < 2) {\n      month.current.focus();\n    } else {\n      dateInput.onChangeText(new Date(year, month - 1, day));\n      dispatchRedirectReset();\n    }\n  }\n\n  return (\n    <View style={styles.root}>\n      <TextInput\n        autoFocus={true}\n        ref={dayInputRef}\n        value={day}\n        style={[theme.TextInput, styles.input, { width: 40 }]}\n        placeholder=\"DD\"\n        placeholderTextColor=\"grey\"\n        onChangeText={(text) => setDay(text)}\n      />\n      <Text>/</Text>\n      <TextInput\n        value={month}\n        ref={monthInputRef}\n        placeholder=\"MM\"\n        placeholderTextColor=\"grey\"\n        onChangeText={(text) => setMonth(text)}\n        style={[theme.TextInput, styles.input, { width: 40 }]}\n      />\n      <Text>/</Text>\n      <TextInput\n        value={year}\n        ref={yearInputRef}\n        placeholder=\"YYYY\"\n        placeholderTextColor=\"grey\"\n        onChangeText={(text) => setYear(text)}\n        style={[theme.TextInput, styles.input, { width: 80 }]}\n      />\n    </View>\n  );\n};\n\nexport default DateInput;\n\nconst styles = StyleSheet.create({\n  root: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    elevation: 1,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.5,\n    shadowRadius: 20,\n  },\n  input: {\n    height: 40,\n    textAlign: \"center\",\n    marginHorizontal: 8,\n  },\n});\n","import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\n\nconst Notification = ({ notification, theme }) => {\n  return (\n    <View style={styles.root}>\n      <Icon\n        containerStyle={{ marginBottom: 8 }}\n        size={30}\n        name={\n          notification.variant === \"success\"\n            ? \"check-circle-outline\"\n            : notification.variant === \"warning\"\n            ? \"alert-circle-outline\"\n            : notification.variant === \"error\"\n            ? \"close-circle-outline\"\n            : notification.icon\n        }\n        color={\n          notification.variant === \"success\"\n            ? \"green\"\n            : notification.variant === \"warning\"\n            ? \"yellow\"\n            : notification.variant === \"error\"\n            ? \"red\"\n            : notification.variant === \"info\"\n            ? \"blue\"\n            : theme.colors.grey1\n        }\n      />\n      {notification.message && (\n        <Text style={{ fontSize: 14 }}>{notification.message}</Text>\n      )}\n    </View>\n  );\n};\n\nexport default Notification;\n\nconst styles = StyleSheet.create({\n  root: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    elevation: 1,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.5,\n    shadowRadius: 20,\n  },\n});\n","const Menu = ({ menu, dispatchRedirectReset, dispatch }) => {\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      {menu.buttons?.map((button, i) => {\n        return (\n          <Button\n            title={button.title}\n            key={i}\n            containerStyle={{ height: 30 }}\n            onPress={() => {\n              dispatch(button.action(...button.actionParams));\n              dispatchRedirectReset();\n            }}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Menu;\n","import React, { useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { View, Dimensions, StyleSheet } from \"react-native\";\nimport { ThemeContext } from \"react-native-elements\";\nimport { resetOverlay } from \"../../actions/overlayAction\";\nimport * as RootNavigation from \"../../RootNavigation.js\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nimport SearchBar from \"./SearchBar\";\nimport DateInput from \"./DateInput\";\nimport Notification from \"./Notification\";\nimport Menu from \"./Menu\";\n\nconst CustomOverlay = () => {\n  const overlay = useSelector((state) => state.overlay);\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  if (overlay.show === false) return null;\n\n  const dispatchRedirectReset = () => {\n    dispatch(resetOverlay());\n    Array.isArray(overlay.callbacks) &&\n      overlay.callbacks.forEach((d) => {\n        dispatch(d());\n      });\n    overlay.redirect &&\n      RootNavigation.navigate(overlay.redirect, overlay.redirectOpts);\n  };\n\n  overlay.timeout &&\n    setTimeout(() => {\n      dispatchRedirectReset();\n    }, overlay.timeout);\n\n  return (\n    <View style={[styles.root]}>\n      <TouchableOpacity\n        containerStyle={styles.sides}\n        style={styles.sides}\n        onPress={() => {\n          overlay.notification\n            ? dispatchRedirectReset()\n            : dispatch(resetOverlay());\n        }}\n      />\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TouchableOpacity\n          containerStyle={styles.sides}\n          style={styles.sides}\n          onPress={() => {\n            overlay.notification\n              ? dispatchRedirectReset()\n              : dispatch(resetOverlay());\n          }}\n        />\n        {overlay.notification && (\n          <Notification\n            notification={overlay.notification}\n            dispatchRedirectReset={dispatchRedirectReset}\n            theme={theme}\n          />\n        )}\n        {overlay.form && (\n          <InputForm\n            form={overlay.form}\n            dispatchRedirectReset={dispatchRedirectReset}\n            dispatch={dispatch}\n            theme={theme}\n          />\n        )}\n        {overlay.menu && (\n          <Menu\n            menu={overlay.menu}\n            dispatchRedirectReset={dispatchRedirectReset}\n            dispatch={dispatch}\n          />\n        )}\n        {overlay.searchBar && (\n          <SearchBar\n            searchBar={overlay.searchBar}\n            dispatchRedirectReset={dispatchRedirectReset}\n            theme={theme}\n          />\n        )}\n        {overlay.dateInput && (\n          <DateInput\n            dateInput={overlay.dateInput}\n            dispatchRedirectReset={dispatchRedirectReset}\n            theme={theme}\n          />\n        )}\n        <TouchableOpacity\n          containerStyle={styles.sides}\n          style={styles.sides}\n          onPress={() => {\n            overlay.notification\n              ? dispatchRedirectReset()\n              : dispatch(resetOverlay());\n          }}\n        />\n      </View>\n      <TouchableOpacity\n        containerStyle={styles.sides}\n        style={styles.sides}\n        onPress={() => {\n          overlay.notification\n            ? dispatchRedirectReset()\n            : dispatch(resetOverlay());\n        }}\n      />\n    </View>\n  );\n};\n\nexport default CustomOverlay;\n\nconst styles = StyleSheet.create({\n  root: {\n    position: \"absolute\",\n    height: Dimensions.get(\"window\").height,\n    width: Dimensions.get(\"window\").width,\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    alignItems: \"stretch\",\n    backgroundColor: \"rgba(200,200,200,0.5)\",\n  },\n  sides: { flex: 1, minHeight: 12 },\n});\n","import React from \"react\";\nimport { Provider, useSelector, shallowEqual, useDispatch } from \"react-redux\";\nimport { SafeAreaView, Platform, StatusBar, View } from \"react-native\";\nimport { store, persistor } from \"./store/index\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { ThemeProvider, Icon } from \"react-native-elements\";\nimport { SplashScreen } from \"expo\";\n\nimport MyJobs from \"./components/MyJobs\";\nimport Jobs from \"./components/Jobs\";\nimport Profile from \"./components/Profile\";\nimport People from \"./components/People\";\nimport Messages from \"./components/Messages\";\nimport Auth from \"./components/Auth\";\nimport CustomOverlay from \"./components/CustomOverlay\";\n\nimport theme from \"./Theme.json\";\nimport useLinking from \"./useLinking\";\n\nimport { navigationRef, isMountedRef } from \"./RootNavigation\";\n\nimport { verifyToken } from \"./actions/authActions\";\nimport { fetchJobs, fetchMyJobs } from \"./actions/jobsActions\";\nimport { fetchUsers } from \"./actions/usersActions\";\nimport { fetchConversations } from \"./actions/chatActions\";\n\nconst BottomTab = createBottomTabNavigator();\nconst Drawer = createDrawerNavigator();\nconst Switch = createStackNavigator();\n\nconst MainStack = () => {\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"People\"\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          switch (route.name) {\n            case \"Home\":\n              iconName = \"home\";\n              break;\n            case \"Jobs\":\n              iconName = \"briefcase\";\n              break;\n            case \"People\":\n              iconName = \"account-group\";\n              break;\n            case \"Messages\":\n              iconName = \"forum\";\n              break;\n            default:\n              break;\n          }\n\n          return <Icon name={iconName} size={size} color={color} />;\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: theme.colors.primary,\n        inactiveTintColor: \"gray\",\n      }}\n    >\n      <BottomTab.Screen\n        name=\"People\"\n        component={People}\n        options={{ title: \"Annuaire\" }}\n      />\n      <BottomTab.Screen\n        name=\"Jobs\"\n        component={Jobs}\n        options={{ title: \"Emplois\" }}\n      />\n      <BottomTab.Screen\n        name=\"Messages\"\n        component={Messages}\n        options={{ title: \"Messages\" }}\n      />\n    </BottomTab.Navigator>\n  );\n};\n\nconst DrawerStack = () => {\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    function fetchData() {\n      dispatch(fetchJobs());\n      dispatch(fetchMyJobs());\n      dispatch(fetchUsers());\n      dispatch(fetchConversations());\n    }\n\n    fetchData();\n  }, []);\n  return (\n    <Drawer.Navigator initialRouteName=\"Main\" headerMode=\"screen\">\n      <Drawer.Screen\n        name=\"Main\"\n        component={MainStack}\n        options={{ title: \"Accueil\" }}\n      />\n      <Drawer.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{ title: \"Mon profil\" }}\n      />\n      <Drawer.Screen\n        name=\"MyJobs\"\n        component={MyJobs}\n        options={{ title: \"Mes offres d'emplois\" }}\n      />\n    </Drawer.Navigator>\n  );\n};\n\nconst AppStack = (props) => {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\n  const { getInitialState } = useLinking(navigationRef);\n  const dispatch = useDispatch();\n\n  const userToken = useSelector((state) => state.auth.token);\n  console.log(\"AppStack -> userToken\", userToken);\n\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      if (userToken !== null) {\n        dispatch(verifyToken());\n      }\n      try {\n        SplashScreen.preventAutoHide();\n\n        setInitialNavigationState(await getInitialState());\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hide();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null;\n  } else {\n    return (\n      <View style={{ flex: 1 }}>\n        <NavigationContainer\n          ref={navigationRef}\n          initialState={initialNavigationState}\n        >\n          <Switch.Navigator headerMode=\"none\">\n            {userToken && <Switch.Screen name=\"Root\" component={DrawerStack} />}\n            {!userToken && <Switch.Screen name=\"Auth\" component={Auth} />}\n          </Switch.Navigator>\n          <CustomOverlay />\n        </NavigationContainer>\n      </View>\n    );\n  }\n};\n\nconst App = () => {\n  React.useEffect(() => {\n    console.log(\"Platform.OS\", Platform.OS);\n    isMountedRef.current = true;\n    return () => (isMountedRef.current = false);\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <SafeAreaView\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            {Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />}\n            <AppStack />\n          </SafeAreaView>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { useLinking } from \"@react-navigation/native\";\nimport { Linking } from \"expo\";\n\nexport default function (containerRef) {\n  return useLinking(containerRef, {\n    prefixes: [Linking.makeUrl(\"/\")],\n    config: {\n      Auth: {\n        path: \"auth\",\n        screens: {\n          LogIn: \"login\",\n          SignUp: \"signup\",\n        },\n      },\n      Root: {\n        path: \"root\",\n        screens: {\n          Main: {\n            path: \"main\",\n            screens: {\n              Jobs: {\n                path: \"emplois\",\n                screens: {\n                  List: \"emplois\",\n                  Read: \"emplois/:id\",\n                  Post: \"emplois/poster\",\n                },\n              },\n              People: {\n                path: \"annuaire\",\n                screens: {\n                  List: \"annuaire\",\n                  Read: \"annuaire/:id\",\n                },\n              },\n              Messages: {\n                path: \"messagerie\",\n                screens: {\n                  Lobby: \"messagerie\",\n                  Room: \"messagerie/:conversation_id\",\n                },\n              },\n            },\n          },\n          Profile: {\n            path: \"mon-profil\",\n            Read: \"mon-profil\",\n            Edit: \"mon-profil/modifier\",\n          },\n          MyJobs: {\n            path: \"mes-offres\",\n            Read: \"mes-offres\",\n            Edit: \"mes-offres/:id\",\n          },\n        },\n      },\n    },\n  });\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var map = {\n\t\"./af\": 282,\n\t\"./af.js\": 282,\n\t\"./ar\": 283,\n\t\"./ar-dz\": 284,\n\t\"./ar-dz.js\": 284,\n\t\"./ar-kw\": 285,\n\t\"./ar-kw.js\": 285,\n\t\"./ar-ly\": 286,\n\t\"./ar-ly.js\": 286,\n\t\"./ar-ma\": 287,\n\t\"./ar-ma.js\": 287,\n\t\"./ar-sa\": 288,\n\t\"./ar-sa.js\": 288,\n\t\"./ar-tn\": 289,\n\t\"./ar-tn.js\": 289,\n\t\"./ar.js\": 283,\n\t\"./az\": 290,\n\t\"./az.js\": 290,\n\t\"./be\": 291,\n\t\"./be.js\": 291,\n\t\"./bg\": 292,\n\t\"./bg.js\": 292,\n\t\"./bm\": 293,\n\t\"./bm.js\": 293,\n\t\"./bn\": 294,\n\t\"./bn.js\": 294,\n\t\"./bo\": 295,\n\t\"./bo.js\": 295,\n\t\"./br\": 296,\n\t\"./br.js\": 296,\n\t\"./bs\": 297,\n\t\"./bs.js\": 297,\n\t\"./ca\": 298,\n\t\"./ca.js\": 298,\n\t\"./cs\": 299,\n\t\"./cs.js\": 299,\n\t\"./cv\": 300,\n\t\"./cv.js\": 300,\n\t\"./cy\": 301,\n\t\"./cy.js\": 301,\n\t\"./da\": 302,\n\t\"./da.js\": 302,\n\t\"./de\": 303,\n\t\"./de-at\": 304,\n\t\"./de-at.js\": 304,\n\t\"./de-ch\": 305,\n\t\"./de-ch.js\": 305,\n\t\"./de.js\": 303,\n\t\"./dv\": 306,\n\t\"./dv.js\": 306,\n\t\"./el\": 307,\n\t\"./el.js\": 307,\n\t\"./en-SG\": 308,\n\t\"./en-SG.js\": 308,\n\t\"./en-au\": 309,\n\t\"./en-au.js\": 309,\n\t\"./en-ca\": 310,\n\t\"./en-ca.js\": 310,\n\t\"./en-gb\": 311,\n\t\"./en-gb.js\": 311,\n\t\"./en-ie\": 312,\n\t\"./en-ie.js\": 312,\n\t\"./en-il\": 313,\n\t\"./en-il.js\": 313,\n\t\"./en-nz\": 314,\n\t\"./en-nz.js\": 314,\n\t\"./eo\": 315,\n\t\"./eo.js\": 315,\n\t\"./es\": 316,\n\t\"./es-do\": 317,\n\t\"./es-do.js\": 317,\n\t\"./es-us\": 318,\n\t\"./es-us.js\": 318,\n\t\"./es.js\": 316,\n\t\"./et\": 319,\n\t\"./et.js\": 319,\n\t\"./eu\": 320,\n\t\"./eu.js\": 320,\n\t\"./fa\": 321,\n\t\"./fa.js\": 321,\n\t\"./fi\": 322,\n\t\"./fi.js\": 322,\n\t\"./fo\": 323,\n\t\"./fo.js\": 323,\n\t\"./fr\": 98,\n\t\"./fr-ca\": 324,\n\t\"./fr-ca.js\": 324,\n\t\"./fr-ch\": 325,\n\t\"./fr-ch.js\": 325,\n\t\"./fr.js\": 98,\n\t\"./fy\": 326,\n\t\"./fy.js\": 326,\n\t\"./ga\": 327,\n\t\"./ga.js\": 327,\n\t\"./gd\": 328,\n\t\"./gd.js\": 328,\n\t\"./gl\": 329,\n\t\"./gl.js\": 329,\n\t\"./gom-latn\": 330,\n\t\"./gom-latn.js\": 330,\n\t\"./gu\": 331,\n\t\"./gu.js\": 331,\n\t\"./he\": 332,\n\t\"./he.js\": 332,\n\t\"./hi\": 333,\n\t\"./hi.js\": 333,\n\t\"./hr\": 334,\n\t\"./hr.js\": 334,\n\t\"./hu\": 335,\n\t\"./hu.js\": 335,\n\t\"./hy-am\": 336,\n\t\"./hy-am.js\": 336,\n\t\"./id\": 337,\n\t\"./id.js\": 337,\n\t\"./is\": 338,\n\t\"./is.js\": 338,\n\t\"./it\": 339,\n\t\"./it-ch\": 340,\n\t\"./it-ch.js\": 340,\n\t\"./it.js\": 339,\n\t\"./ja\": 341,\n\t\"./ja.js\": 341,\n\t\"./jv\": 342,\n\t\"./jv.js\": 342,\n\t\"./ka\": 343,\n\t\"./ka.js\": 343,\n\t\"./kk\": 344,\n\t\"./kk.js\": 344,\n\t\"./km\": 345,\n\t\"./km.js\": 345,\n\t\"./kn\": 346,\n\t\"./kn.js\": 346,\n\t\"./ko\": 347,\n\t\"./ko.js\": 347,\n\t\"./ku\": 348,\n\t\"./ku.js\": 348,\n\t\"./ky\": 349,\n\t\"./ky.js\": 349,\n\t\"./lb\": 350,\n\t\"./lb.js\": 350,\n\t\"./lo\": 351,\n\t\"./lo.js\": 351,\n\t\"./lt\": 352,\n\t\"./lt.js\": 352,\n\t\"./lv\": 353,\n\t\"./lv.js\": 353,\n\t\"./me\": 354,\n\t\"./me.js\": 354,\n\t\"./mi\": 355,\n\t\"./mi.js\": 355,\n\t\"./mk\": 356,\n\t\"./mk.js\": 356,\n\t\"./ml\": 357,\n\t\"./ml.js\": 357,\n\t\"./mn\": 358,\n\t\"./mn.js\": 358,\n\t\"./mr\": 359,\n\t\"./mr.js\": 359,\n\t\"./ms\": 360,\n\t\"./ms-my\": 361,\n\t\"./ms-my.js\": 361,\n\t\"./ms.js\": 360,\n\t\"./mt\": 362,\n\t\"./mt.js\": 362,\n\t\"./my\": 363,\n\t\"./my.js\": 363,\n\t\"./nb\": 364,\n\t\"./nb.js\": 364,\n\t\"./ne\": 365,\n\t\"./ne.js\": 365,\n\t\"./nl\": 366,\n\t\"./nl-be\": 367,\n\t\"./nl-be.js\": 367,\n\t\"./nl.js\": 366,\n\t\"./nn\": 368,\n\t\"./nn.js\": 368,\n\t\"./pa-in\": 369,\n\t\"./pa-in.js\": 369,\n\t\"./pl\": 370,\n\t\"./pl.js\": 370,\n\t\"./pt\": 371,\n\t\"./pt-br\": 372,\n\t\"./pt-br.js\": 372,\n\t\"./pt.js\": 371,\n\t\"./ro\": 373,\n\t\"./ro.js\": 373,\n\t\"./ru\": 374,\n\t\"./ru.js\": 374,\n\t\"./sd\": 375,\n\t\"./sd.js\": 375,\n\t\"./se\": 376,\n\t\"./se.js\": 376,\n\t\"./si\": 377,\n\t\"./si.js\": 377,\n\t\"./sk\": 378,\n\t\"./sk.js\": 378,\n\t\"./sl\": 379,\n\t\"./sl.js\": 379,\n\t\"./sq\": 380,\n\t\"./sq.js\": 380,\n\t\"./sr\": 381,\n\t\"./sr-cyrl\": 382,\n\t\"./sr-cyrl.js\": 382,\n\t\"./sr.js\": 381,\n\t\"./ss\": 383,\n\t\"./ss.js\": 383,\n\t\"./sv\": 384,\n\t\"./sv.js\": 384,\n\t\"./sw\": 385,\n\t\"./sw.js\": 385,\n\t\"./ta\": 386,\n\t\"./ta.js\": 386,\n\t\"./te\": 387,\n\t\"./te.js\": 387,\n\t\"./tet\": 388,\n\t\"./tet.js\": 388,\n\t\"./tg\": 389,\n\t\"./tg.js\": 389,\n\t\"./th\": 390,\n\t\"./th.js\": 390,\n\t\"./tl-ph\": 391,\n\t\"./tl-ph.js\": 391,\n\t\"./tlh\": 392,\n\t\"./tlh.js\": 392,\n\t\"./tr\": 393,\n\t\"./tr.js\": 393,\n\t\"./tzl\": 394,\n\t\"./tzl.js\": 394,\n\t\"./tzm\": 395,\n\t\"./tzm-latn\": 396,\n\t\"./tzm-latn.js\": 396,\n\t\"./tzm.js\": 395,\n\t\"./ug-cn\": 397,\n\t\"./ug-cn.js\": 397,\n\t\"./uk\": 398,\n\t\"./uk.js\": 398,\n\t\"./ur\": 399,\n\t\"./ur.js\": 399,\n\t\"./uz\": 400,\n\t\"./uz-latn\": 401,\n\t\"./uz-latn.js\": 401,\n\t\"./uz.js\": 400,\n\t\"./vi\": 402,\n\t\"./vi.js\": 402,\n\t\"./x-pseudo\": 403,\n\t\"./x-pseudo.js\": 403,\n\t\"./yo\": 404,\n\t\"./yo.js\": 404,\n\t\"./zh-cn\": 405,\n\t\"./zh-cn.js\": 405,\n\t\"./zh-hk\": 406,\n\t\"./zh-hk.js\": 406,\n\t\"./zh-tw\": 407,\n\t\"./zh-tw.js\": 407\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 676;","module.exports = __webpack_public_path__ + \"static/media/logo.ccfb714c.png\";"],"sourceRoot":""}