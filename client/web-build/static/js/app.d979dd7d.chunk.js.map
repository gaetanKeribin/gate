{"version":3,"sources":["web-build/register-service-worker.js","node_modules/moment/locale sync /^/.//.*$","src/assets/logo.png","src/RootNavigation.js","src/store/reducers/authReducer.js","src/store/reducers/usersReducer.js","src/store/reducers/overlayReducer.js","src/store/reducers/jobsReducer.js","src/store/reducers/chatReducer.js","src/store/reducers/index.js","src/config.js","src/actions/overlayAction.js","src/store/index.js","src/store/reduxMiddlewares.js","src/components/AppNavbar.js","src/actions/authActions.js","src/components/MyJobs/MyJobsReadScreen.js","src/actions/jobsActions.js","src/components/MyJobs/MyJobsEditScreen.js","src/components/MyJobs/index.js","src/components/Jobs/JobsListScreen.js","src/components/Jobs/JobsReadScreen.js","src/components/Jobs/JobsPostScreen.js","src/components/Jobs/index.js","src/components/Profile/ProfileReadScreen.js","src/actions/filesActions.js","src/components/Profile/ProfileEditScreen.js","src/components/Profile/index.js","src/components/People/PeopleListScreen.js","src/actions/usersActions.js","src/actions/chatActions.js","src/components/People/PeopleReadScreen.js","src/components/People/index.js","src/components/Messages/MessagesLobbyScreen.js","src/components/Messages/MessagesRoomScreen.js","src/components/Messages/index.js","src/components/Auth/LogInScreen.js","src/components/Auth/SignUpScreen.js","src/components/Auth/index.js","src/components/CustomOverlay.js","src/App.js","index.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","isMountedRef","React","navigationRef","navigate","name","params","current","initialState","isLoggingIn","isLoggingOut","isFetchingUserInfo","isLoggedIn","loggedInAt","user","userInfoUpdatedAt","userInfoError","authError","logOutError","isSigningUp","token","signUpError","isDeletingAccount","users","isFetching","lastUpdatedAt","isLoaded","notification","form","show","timeout","jobs","conversations","conversationsIds","interlocutorsIds","isFetchingConversations","isFetchingConversation","combineReducers","auth","state","action","type","data","isloggingOut","isUpdatingUser","isUpdatingPassword","isUpdatingJob","tokenVerifiedAt","receivedAt","logInError","updateUserError","fetchMyJobsError","updatePasswordError","job","deleteAccountError","overlay","payload","isDeleting","chat","splice","c","_id","indexOf","newConv","conversation","messages","message","filter","conv","lastMessage","apiConfig","baseUrl","clientId","clientSecret","showOverlay","menu","dispatchCallback","redirect","persistConfig","key","storage","AsyncStorage","blacklist","persistedReducer","persistReducer","rootReducer","middlewares","thunk","store","next","log","https","substring","includes","axios","create","baseURL","headers","accept","Authorization","getState","Promise","reject","method","get","route","post","delete","patch","res","successNotification","dispatch","variant","Date","err","errorNotification","response","forceReconnect","socket","io","replace","forceNode","transportOptions","polling","extraHeaders","authorization","on","emit","event","disconnect","socketMiddleware","createStore","applyMiddleware","persistor","persistStore","subscribe","connect","logOut","navigation","leftButton","title","noRightButton","theme","useContext","ThemeContext","LinearGradient","colors","primary","secondary","start","end","style","flexDirection","justifyContent","alignItems","paddingTop","Platform","OS","Constants","statusBarHeight","paddingHorizontal","paddingBottom","onPress","openDrawer","color","View","Text","fontSize","textAlign","Item","item","TouchableOpacity","marginVertical","marginHorizontal","borderBottomWidth","borderBottomColor","grey4","paddingVertical","flex","textAlignVertical","fontWeight","jobTitle","employmentType","size","marginStart","organisation","_","capitalize","city","moment","publishedAt","locale","fromNow","fetchMyJobs","useEffect","backgroundColor","FlatList","renderItem","keyExtractor","updateJob","deleteJob","useState","deleting","setDeleting","updating","setUpdating","setEmploymentType","asap","setAsap","setOrganisation","setCity","salary","setSalary","setJobTitle","jobDesc","setJobDesc","minExp","setMinExp","contact","setContact","errors","setErrors","onEditJob","alignContent","ScrollView","label","placeholder","value","onChangeText","errorMessage","multiline","inputStyle","height","keyboardType","showSoftInputOnFocus","marginBottom","display","grey3","paddingLeft","Switch","trackColor","false","true","primarySoft","thumbColor","grey2","onValueChange","loading","buttonStyle","a","async","Stack","createStackNavigator","MyJobsScreen","Navigator","initialRouteName","headerMode","Screen","component","Read","options","headerShown","Edit","fetchJobs","refreshing","setRefreshing","onRefresh","useCallback","borderRadius","shadowOffset","width","shadowColor","shadowOpacity","elevation","refreshControl","RefreshControl","containerStyle","position","bottom","left","icon","marginTop","PostScreen","useDispatch","uploading","setUploading","filled","disabled","JobsScreen","JobsListScreen","JobsReadScreen","headerStatusBarHeight","JobsPostScreen","uploadFile","file","bucketName","formData","FormData","temp","uri","split","append","length","deleteFile","fileId","showAvatarForm","setShowAvatarForm","grey5","firstname","lastname","avatar","borderColor","borderWidth","source","filename","charAt","concat","toUpperCase","ImagePicker","allowsEditing","picture","cancelled","selectPicture","primaryLight","grey0","promo","marginEnd","description","email","ActivityIndicator","updateUser","deleteAccount","password","updateUserPassword","newPassword","desc","setDesc","setEmail","setPromo","setPassword","confirmation","setConfirmation","passwordError","setPasswordError","setNewPassword","showEditPasswordForm","setShowEditPasswordForm","showDeleteAccountForm","setShowDeleteAccountForm","showEditAccountInfoForm","setShowEditAccountInfoForm","onEditProfile","text","leftIcon","numberOfLines","secureTextEntry","leftIconContainerStyle","marginRight","ProfileScreen","ReadProfileScreen","EditProfileScreen","PeopleScreen","useSelector","sendMessage","sentAt","fetchConversations","deleteConversation","conversation_id","fullName","convIdsWithPartsIds","element","participants","inputName","actionParams","recipients","PeopleListScreen","PeopleReadScreen","SearchResultItem","showMessageForm","setShowMessageForm","newMessage","setNewMessage","TextInput","placeholderTextColor","maxHeight","onSendMessage","participant","toString","listParticipants","paddingRight","sender","grey1","alignSelf","buttons","ChatLobbyScreen","search","setSearch","platform","searchResults","forEach","toLowerCase","push","searchProcess","Message","incoming","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","maxWidth","fetchConversation","inverted","MessagesScreen","Lobby","Room","logIn","credentials","Image","require","errorStyle","signUp","setFirstname","setLastname","mail","AuthNavigator","LogInScreen","SignUpScreen","Notifier","InputForm","dispatchRedirectReset","inputValue","setInputValue","Menu","button","i","CustomOverlay","RootNavigation","setTimeout","Dimensions","grey6","minHeight","minWidth","BottomTab","createBottomTabNavigator","Drawer","createDrawerNavigator","MainStack","screenOptions","tabBarIcon","focused","iconName","tabBarOptions","activeTintColor","inactiveTintColor","People","Jobs","Messages","AppStack","userToken","shallowEqual","Profile","MyJobs","Auth","App","SafeAreaView","StatusBar","barStyle","NavigationContainer","ref","registerRootComponent"],"mappings":"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","file":"static/js/app.d979dd7d.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/siee-gate-web/expo-service-worker.js', { scope: '/siee-gate-web/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var map = {\n\t\"./af\": 276,\n\t\"./af.js\": 276,\n\t\"./ar\": 277,\n\t\"./ar-dz\": 278,\n\t\"./ar-dz.js\": 278,\n\t\"./ar-kw\": 279,\n\t\"./ar-kw.js\": 279,\n\t\"./ar-ly\": 280,\n\t\"./ar-ly.js\": 280,\n\t\"./ar-ma\": 281,\n\t\"./ar-ma.js\": 281,\n\t\"./ar-sa\": 282,\n\t\"./ar-sa.js\": 282,\n\t\"./ar-tn\": 283,\n\t\"./ar-tn.js\": 283,\n\t\"./ar.js\": 277,\n\t\"./az\": 284,\n\t\"./az.js\": 284,\n\t\"./be\": 285,\n\t\"./be.js\": 285,\n\t\"./bg\": 286,\n\t\"./bg.js\": 286,\n\t\"./bm\": 287,\n\t\"./bm.js\": 287,\n\t\"./bn\": 288,\n\t\"./bn.js\": 288,\n\t\"./bo\": 289,\n\t\"./bo.js\": 289,\n\t\"./br\": 290,\n\t\"./br.js\": 290,\n\t\"./bs\": 291,\n\t\"./bs.js\": 291,\n\t\"./ca\": 292,\n\t\"./ca.js\": 292,\n\t\"./cs\": 293,\n\t\"./cs.js\": 293,\n\t\"./cv\": 294,\n\t\"./cv.js\": 294,\n\t\"./cy\": 295,\n\t\"./cy.js\": 295,\n\t\"./da\": 296,\n\t\"./da.js\": 296,\n\t\"./de\": 297,\n\t\"./de-at\": 298,\n\t\"./de-at.js\": 298,\n\t\"./de-ch\": 299,\n\t\"./de-ch.js\": 299,\n\t\"./de.js\": 297,\n\t\"./dv\": 300,\n\t\"./dv.js\": 300,\n\t\"./el\": 301,\n\t\"./el.js\": 301,\n\t\"./en-SG\": 302,\n\t\"./en-SG.js\": 302,\n\t\"./en-au\": 303,\n\t\"./en-au.js\": 303,\n\t\"./en-ca\": 304,\n\t\"./en-ca.js\": 304,\n\t\"./en-gb\": 305,\n\t\"./en-gb.js\": 305,\n\t\"./en-ie\": 306,\n\t\"./en-ie.js\": 306,\n\t\"./en-il\": 307,\n\t\"./en-il.js\": 307,\n\t\"./en-nz\": 308,\n\t\"./en-nz.js\": 308,\n\t\"./eo\": 309,\n\t\"./eo.js\": 309,\n\t\"./es\": 310,\n\t\"./es-do\": 311,\n\t\"./es-do.js\": 311,\n\t\"./es-us\": 312,\n\t\"./es-us.js\": 312,\n\t\"./es.js\": 310,\n\t\"./et\": 313,\n\t\"./et.js\": 313,\n\t\"./eu\": 314,\n\t\"./eu.js\": 314,\n\t\"./fa\": 315,\n\t\"./fa.js\": 315,\n\t\"./fi\": 316,\n\t\"./fi.js\": 316,\n\t\"./fo\": 317,\n\t\"./fo.js\": 317,\n\t\"./fr\": 112,\n\t\"./fr-ca\": 318,\n\t\"./fr-ca.js\": 318,\n\t\"./fr-ch\": 319,\n\t\"./fr-ch.js\": 319,\n\t\"./fr.js\": 112,\n\t\"./fy\": 320,\n\t\"./fy.js\": 320,\n\t\"./ga\": 321,\n\t\"./ga.js\": 321,\n\t\"./gd\": 322,\n\t\"./gd.js\": 322,\n\t\"./gl\": 323,\n\t\"./gl.js\": 323,\n\t\"./gom-latn\": 324,\n\t\"./gom-latn.js\": 324,\n\t\"./gu\": 325,\n\t\"./gu.js\": 325,\n\t\"./he\": 326,\n\t\"./he.js\": 326,\n\t\"./hi\": 327,\n\t\"./hi.js\": 327,\n\t\"./hr\": 328,\n\t\"./hr.js\": 328,\n\t\"./hu\": 329,\n\t\"./hu.js\": 329,\n\t\"./hy-am\": 330,\n\t\"./hy-am.js\": 330,\n\t\"./id\": 331,\n\t\"./id.js\": 331,\n\t\"./is\": 332,\n\t\"./is.js\": 332,\n\t\"./it\": 333,\n\t\"./it-ch\": 334,\n\t\"./it-ch.js\": 334,\n\t\"./it.js\": 333,\n\t\"./ja\": 335,\n\t\"./ja.js\": 335,\n\t\"./jv\": 336,\n\t\"./jv.js\": 336,\n\t\"./ka\": 337,\n\t\"./ka.js\": 337,\n\t\"./kk\": 338,\n\t\"./kk.js\": 338,\n\t\"./km\": 339,\n\t\"./km.js\": 339,\n\t\"./kn\": 340,\n\t\"./kn.js\": 340,\n\t\"./ko\": 341,\n\t\"./ko.js\": 341,\n\t\"./ku\": 342,\n\t\"./ku.js\": 342,\n\t\"./ky\": 343,\n\t\"./ky.js\": 343,\n\t\"./lb\": 344,\n\t\"./lb.js\": 344,\n\t\"./lo\": 345,\n\t\"./lo.js\": 345,\n\t\"./lt\": 346,\n\t\"./lt.js\": 346,\n\t\"./lv\": 347,\n\t\"./lv.js\": 347,\n\t\"./me\": 348,\n\t\"./me.js\": 348,\n\t\"./mi\": 349,\n\t\"./mi.js\": 349,\n\t\"./mk\": 350,\n\t\"./mk.js\": 350,\n\t\"./ml\": 351,\n\t\"./ml.js\": 351,\n\t\"./mn\": 352,\n\t\"./mn.js\": 352,\n\t\"./mr\": 353,\n\t\"./mr.js\": 353,\n\t\"./ms\": 354,\n\t\"./ms-my\": 355,\n\t\"./ms-my.js\": 355,\n\t\"./ms.js\": 354,\n\t\"./mt\": 356,\n\t\"./mt.js\": 356,\n\t\"./my\": 357,\n\t\"./my.js\": 357,\n\t\"./nb\": 358,\n\t\"./nb.js\": 358,\n\t\"./ne\": 359,\n\t\"./ne.js\": 359,\n\t\"./nl\": 360,\n\t\"./nl-be\": 361,\n\t\"./nl-be.js\": 361,\n\t\"./nl.js\": 360,\n\t\"./nn\": 362,\n\t\"./nn.js\": 362,\n\t\"./pa-in\": 363,\n\t\"./pa-in.js\": 363,\n\t\"./pl\": 364,\n\t\"./pl.js\": 364,\n\t\"./pt\": 365,\n\t\"./pt-br\": 366,\n\t\"./pt-br.js\": 366,\n\t\"./pt.js\": 365,\n\t\"./ro\": 367,\n\t\"./ro.js\": 367,\n\t\"./ru\": 368,\n\t\"./ru.js\": 368,\n\t\"./sd\": 369,\n\t\"./sd.js\": 369,\n\t\"./se\": 370,\n\t\"./se.js\": 370,\n\t\"./si\": 371,\n\t\"./si.js\": 371,\n\t\"./sk\": 372,\n\t\"./sk.js\": 372,\n\t\"./sl\": 373,\n\t\"./sl.js\": 373,\n\t\"./sq\": 374,\n\t\"./sq.js\": 374,\n\t\"./sr\": 375,\n\t\"./sr-cyrl\": 376,\n\t\"./sr-cyrl.js\": 376,\n\t\"./sr.js\": 375,\n\t\"./ss\": 377,\n\t\"./ss.js\": 377,\n\t\"./sv\": 378,\n\t\"./sv.js\": 378,\n\t\"./sw\": 379,\n\t\"./sw.js\": 379,\n\t\"./ta\": 380,\n\t\"./ta.js\": 380,\n\t\"./te\": 381,\n\t\"./te.js\": 381,\n\t\"./tet\": 382,\n\t\"./tet.js\": 382,\n\t\"./tg\": 383,\n\t\"./tg.js\": 383,\n\t\"./th\": 384,\n\t\"./th.js\": 384,\n\t\"./tl-ph\": 385,\n\t\"./tl-ph.js\": 385,\n\t\"./tlh\": 386,\n\t\"./tlh.js\": 386,\n\t\"./tr\": 387,\n\t\"./tr.js\": 387,\n\t\"./tzl\": 388,\n\t\"./tzl.js\": 388,\n\t\"./tzm\": 389,\n\t\"./tzm-latn\": 390,\n\t\"./tzm-latn.js\": 390,\n\t\"./tzm.js\": 389,\n\t\"./ug-cn\": 391,\n\t\"./ug-cn.js\": 391,\n\t\"./uk\": 392,\n\t\"./uk.js\": 392,\n\t\"./ur\": 393,\n\t\"./ur.js\": 393,\n\t\"./uz\": 394,\n\t\"./uz-latn\": 395,\n\t\"./uz-latn.js\": 395,\n\t\"./uz.js\": 394,\n\t\"./vi\": 396,\n\t\"./vi.js\": 396,\n\t\"./x-pseudo\": 397,\n\t\"./x-pseudo.js\": 397,\n\t\"./yo\": 398,\n\t\"./yo.js\": 398,\n\t\"./zh-cn\": 399,\n\t\"./zh-cn.js\": 399,\n\t\"./zh-hk\": 400,\n\t\"./zh-hk.js\": 400,\n\t\"./zh-tw\": 401,\n\t\"./zh-tw.js\": 401\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 661;","module.exports = __webpack_public_path__ + \"static/media/logo.0120364d.png\";","import * as React from \"react\";\nexport const isMountedRef = React.createRef();\n\nexport const navigationRef = React.createRef();\n\nexport function navigate(name, params) {\n  if (isMountedRef.current && navigationRef.current) {\n    navigationRef.current.navigate(name, params);\n  } else {\n  }\n}\nexport function openDrawer() {\n  navigationRef.current?.openDrawer();\n}\n","const initialState = {\n  isLoggingIn: false,\n  isLoggingOut: false,\n  isFetchingUserInfo: false,\n  isLoggedIn: false,\n  loggedInAt: null,\n  user: null,\n  userInfoUpdatedAt: null,\n  userInfoError: null,\n  authError: null,\n  logOutError: null,\n  isSigningUp: false,\n  token: null,\n  userInfoUpdatedAt: null,\n  signUpError: null,\n  isDeletingAccount: false,\n};\n\nimport { navigate } from \"../../RootNavigation\";\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_AUTH_TOKEN\":\n      return {\n        ...state,\n        ...action.data,\n      };\n    case \"REQUEST_SIGN_UP\":\n      return {\n        ...state,\n        isSigningUp: true,\n        signUpError: null,\n      };\n    case \"REQUEST_SIGN_UP\":\n      return {\n        ...state,\n        isSigningUp: true,\n        signUpError: null,\n      };\n    case \"REQUEST_LOG_IN\":\n      return {\n        ...state,\n        isLoggingIn: true,\n      };\n    case \"REQUEST_LOG_OUT\":\n      return {\n        ...state,\n        isloggingOut: true,\n      };\n    case \"REQUEST_UPDATE_USER\":\n      return {\n        ...state,\n        isUpdatingUser: true,\n      };\n    case \"REQUEST_DELETE_ACCOUNT\":\n      return {\n        ...state,\n        isDeletingAccount: true,\n      };\n    case \"REQUEST_UPDATE_PASSWORD\":\n      return {\n        ...state,\n        isUpdatingPassword: true,\n      };\n    case \"REQUEST_MY_JOBS\":\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case \"REQUEST_UPDATE_JOB\":\n      return {\n        ...state,\n        isUpdatingJob: true,\n      };\n    case \"REQUEST_CREATE_JOB\":\n      return state;\n\n    // SUCCESS\n\n    case \"REQUEST_VERIFY_TOKEN:SUCCESS\":\n      return {\n        ...state,\n        tokenVerifiedAt: action.receivedAt,\n      };\n    case \"REQUEST_LOG_IN:SUCCESS\":\n      return {\n        ...state,\n        isLoggingIn: false,\n        isLoggedIn: true,\n        loggedInAt: action.receivedAt,\n        userInfoUpdatedAt: action.receivedAt,\n        logInError: null,\n        ...action.data,\n      };\n    case \"REQUEST_SIGN_UP:SUCCESS\":\n      return {\n        ...state,\n        isSigningUp: false,\n        user: action.user,\n        token: action.token,\n        loggedInAt: action.receivedAt,\n        isLoggedIn: true,\n        userInfoUpdatedAt: action.receivedAt,\n        signUpError: null,\n        ...action.data,\n      };\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    case \"REQUEST_UPDATE_USER:SUCCESS\":\n      return {\n        ...state,\n        updateUserError: null,\n        isUpdatingUser: false,\n        userInfoUpdatedAt: action.receivedAt,\n        ...action.data,\n      };\n    case \"REQUEST_MY_JOBS:SUCCESS\":\n      return {\n        ...state,\n        isFetching: false,\n        fetchMyJobsError: null,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        ...action.data,\n      };\n    case \"REQUEST_UPLOAD_FILE:SUCCESS\":\n      return {\n        ...state,\n        ...action.data,\n      };\n    case \"REQUEST_DELETE_ACCOUNT:SUCCESS\":\n      return initialState;\n    case \"REQUEST_UPDATE_PASSWORD:SUCCESS\":\n      return { ...state, updatePasswordError: null };\n    case \"REQUEST_UPDATE_JOB:SUCCESS\":\n      return {\n        ...state,\n        user: { ...state.user, jobs: action.data.jobs },\n        isUpdatingJob: false,\n      };\n    case \"REQUEST_CREATE_JOB:SUCCESS\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          jobs: [action.data.job, ...state.user.jobs],\n        },\n      };\n\n    // ERRORS\n\n    case \"REQUEST_VERIFY_TOKEN:ERROR\":\n      return initialState;\n    case \"REQUEST_MY_JOBS:ERROR\":\n      return {\n        ...state,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        fetchMyJobsError:\n          \"Vos offres d'emploi n'ont pas pu être récupérées, essayez de nouveau.\",\n      };\n    case \"REQUEST_DELETE_ACCOUNT:ERROR\":\n      return {\n        ...state,\n        isDeletingAccount: false,\n        deleteAccountError:\n          \"Cela n'a pas marché. Peut-être le mot de passe était-il incorrect.\",\n      };\n    case \"REQUEST_UPDATE_USER:ERROR\":\n      return {\n        ...state,\n        isUpdatingUser: false,\n        updateUserError:\n          \"Cela n'a pas marché. Peut-être le mot de passe était-il incorrect.\",\n      };\n    case \"REQUEST_UPDATE_PASSWORD:ERROR\":\n      return {\n        ...state,\n        isUpdatingPassword: false,\n        updatePasswordError:\n          \"Cela n'a pas marché. Peut-être le mot de passe était-il incorrect.\",\n      };\n    case \"REQUEST_LOG_IN:ERROR\":\n      return {\n        ...state,\n        logInError:\n          \"Cela n'a pas marché. Peut-être le mot de passe était-il incorrect.\",\n        isLoggingIn: false,\n      };\n    case \"REQUEST_SIGN_UP:ERROR\":\n      return {\n        ...state,\n        isSigningUp: false,\n        signUpError: \"Cela n'a pas marché, essayez un autre email.\",\n      };\n    case \"REQUEST_UPDATE_JOB:ERROR\":\n      return {\n        ...state,\n        ...action.state,\n        isUpdatingJob: false,\n      };\n    case \"REQUEST_CREATE_JOB:ERROR\":\n      return {\n        ...state,\n        ...action.state,\n      };\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  users: [],\n  isFetching: false,\n  lastUpdatedAt: null,\n  isLoaded: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_USERS\":\n      return {\n        ...state,\n        isFetching: true\n      };\n    case \"REQUEST_USERS:SUCCESS\":\n      return {\n        ...action.data,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true\n      };\n    case \"REQUEST_USERS:ERROR\":\n      return {\n        ...action.data,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true\n      };\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  notification: null,\n  form: null,\n  show: false,\n  timeout: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"SHOW_OVERLAY\":\n      return {\n        ...action.payload,\n        show: true,\n      };\n    case \"ASK_USER_INPUT\":\n      return {\n        form: action.form,\n        show: true,\n      };\n    case \"RESET_OVERLAY\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  jobs: [],\n  isFetching: false,\n  lastUpdatedAt: null,\n  isLoaded: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_JOBS\":\n      return {\n        ...state,\n        isFetching: true\n      };\n    case \"REQUEST_JOBS:SUCCESS\":\n      return {\n        ...state,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        ...action.data\n      };\n    case \"REQUEST_JOBS:ERROR\":\n      return {\n        ...state,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true\n      };\n    case \"REQUEST_DELETE_JOB\":\n      return {\n        ...state,\n        isDeleting: true\n      };\n    case \"REQUEST_DELETE_JOB:SUCCESS\":\n      return {\n        ...state,\n        isDeleting: false,\n        lastUpdatedAt: action.receivedAt\n      };\n    case \"REQUEST_CREATE_JOB:SUCCESS\":\n      return {\n        ...state,\n        jobs: [action.data.job, ...state.jobs]\n      };\n    case \"REQUEST_DELETE_JOB:ERROR\":\n      return {\n        ...state,\n        isFetchingConversations: false\n      };\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { navigate } from \"../../RootNavigation\";\n\nconst initialState = {\n  conversations: [],\n  conversationsIds: [],\n  interlocutorsIds: [],\n  lastUpdatedAt: null,\n  isLoaded: false,\n  isFetchingConversations: false,\n  isFetchingConversation: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_DELETE_CONVERSATION\":\n      return {\n        ...state,\n        isDeleting: true,\n      };\n    case \"REQUEST_DELETE_CONVERSATION:SUCCESS\":\n      return {\n        ...initialState,\n        isDeleting: false,\n      };\n    case \"REQUEST_DELETE_CONVERSATION:ERROR\":\n      return {\n        ...state,\n        isFetchingConversations: false,\n      };\n    case \"REQUEST_CONVERSATIONS\":\n      return {\n        ...state,\n        isFetchingConversations: true,\n      };\n    case \"REQUEST_CONVERSATIONS:SUCCESS\":\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        isFetchingConversations: false,\n        ...action.data,\n      };\n    case \"RECEIVE_CONVERSATIONS:ERROR\":\n      return {\n        ...state,\n        isFetchingConversations: false,\n      };\n    case \"REQUEST_CONVERSATION\":\n      return {\n        ...state,\n        isFetchingConversation: true,\n      };\n    case \"REQUEST_CONVERSATION:SUCCESS\":\n      state.conversations.splice(\n        state.conversations\n          .map(function (c) {\n            return c._id;\n          })\n          .indexOf(action.data._id),\n        1,\n        action.data\n      );\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        isFetchingConversation: false,\n      };\n    case \"RECEIVE_CONVERSATION:ERROR\":\n      return {\n        ...state,\n        isFetchingConversation: false,\n      };\n    case \"RECEIVE_MESSAGE\":\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        conversations: !action.newConv\n          ? [\n              {\n                ...state.conversations.filter(\n                  (conv) => conv._id === action.conversation._id\n                )[0],\n                lastMessage: action.message,\n                messages: [\n                  action.message,\n                  ...state.conversations.filter(\n                    (conv) => conv._id === action.conversation._id\n                  )[0].messages,\n                ],\n              },\n              ...state.conversations.filter(\n                (conv) => conv._id !== action.conversation._id\n              ),\n            ]\n          : [\n              { ...action.conversation, messages: [action.message] },\n              ...state.conversations,\n            ],\n        isLoaded: true,\n      };\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport usersReducer from \"./usersReducer\";\nimport overlayReducer from \"./overlayReducer\";\nimport jobsReducer from \"./jobsReducer\";\nimport chatReducer from \"./chatReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  overlay: overlayReducer,\n  jobs: jobsReducer,\n  users: usersReducer,\n  chat: chatReducer,\n});\n","const apiConfig = {\n  baseUrl: \"https://siee-gate.herokuapp.com/api/\",\n  clientId: \"1\",\n  clientSecret: \"xc34jamesDevV41XwKbWhrsGgHvR3hjwG8\",\n};\n\nif (process.env.NODE_ENV === \"development\") {\n  if (Platform.OS === \"web\") {\n    apiConfig.baseUrl = \"http://localhost:8080/api/\";\n  } else if (Platform.OS === \"android\") {\n    apiConfig.baseUrl = \"http://10.0.2.2:8080/api/\";\n  }\n} else {\n  apiConfig.baseUrl = \"https://siee-gate.herokuapp.com/api/\";\n}\n\nexport { apiConfig };\n","export const showOverlay = ({\n  notification,\n  form,\n  menu,\n  timeout,\n  dispatchCallback,\n  redirect,\n}) => {\n  return {\n    type: \"SHOW_OVERLAY\",\n    payload: {\n      notification,\n      form,\n      menu,\n      timeout,\n      dispatchCallback,\n      redirect,\n    },\n  };\n};\n\nexport const resetOverlay = () => {\n  return {\n    type: \"RESET_OVERLAY\",\n  };\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\nimport {\n  socketMiddleware,\n  axiosMiddleware,\n  devMiddleware,\n} from \"./reduxMiddlewares\";\nimport { AsyncStorage } from \"react-native\";\nimport { persistStore, persistReducer } from \"redux-persist\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: AsyncStorage,\n  // whitelist: [\"authReducer\"],\n  blacklist: [\"overlay\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middlewares = [thunk, devMiddleware, axiosMiddleware, socketMiddleware()];\n\nconst store = createStore(persistedReducer, applyMiddleware(...middlewares));\n\nlet persistor = persistStore(store);\n\nstore.subscribe(() => {});\n\nexport { store, persistor };\n","import io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { apiConfig } from \"../config\";\nimport { showOverlay } from \"../actions/overlayAction\";\n\nexport const devMiddleware = (store) => (next) => (action) => {\n  console.log(action.type);\n  return next(action);\n};\n\nexport const socketMiddleware = () => {\n  let socket;\n  return (store) => (next) => (action) => {\n    if (\n      action.type === \"REQUEST_LOG_IN:SUCCESS\" ||\n      action.type === \"REQUEST_SIGN_UP:SUCCESS\" ||\n      action.type === \"REQUEST_VERIFY_TOKEN:SUCCESS\"\n    ) {\n      const { token } = action.data;\n      socket = io(apiConfig.baseUrl.replace(\"/api/\", \"\"), {\n        forceNode: true,\n        transportOptions: {\n          polling: {\n            extraHeaders: {\n              \"Access-Control-Allow-Origin\": \"*\",\n              authorization: token,\n            },\n          },\n        },\n      });\n      socket.on(\"connected\", (data) => {\n        console.log(\"Socket connected\");\n      });\n      socket.on(\"unauthorized\", (data) => {\n        console.log(\"Socket disconnected\");\n      });\n      socket.on(\"authenticated\", (data) => {\n        console.log(\"Socket authenticated\");\n      });\n      socket.on(\"message\", (data) => {\n        store.dispatch({\n          type: \"RECEIVE_MESSAGE\",\n          message: data.message,\n          conversation: data.conversation,\n          newConv: data.newConv,\n          receivedAt: new Date(),\n        });\n      });\n    }\n    if (socket) {\n      if (action.type.substring(0, 6) === \"SOCKET\") {\n        socket.emit(action.event, action.payload);\n      }\n      if (action.type === \"REQUEST_LOG_OUT:SUCCESS\") {\n        socket.disconnect();\n        console.log(\"socket disconnected\");\n      }\n    }\n    return next(action);\n  };\n};\n\nexport const axiosMiddleware = (store) => (next) => (action) => {\n  if (\n    action.type.substring(0, 7) === \"REQUEST\" &&\n    action.type.includes(\":\") === false\n  ) {\n    let https;\n    if (action.type.substring(0, 14) === \"REQUEST_UPLOAD\") {\n      https = axios.create({\n        baseURL: apiConfig.baseUrl,\n        timeout: 3000,\n        headers: {\n          accept: \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${store.getState().auth.token}`,\n        },\n      });\n    } else {\n      https = axios.create({\n        baseURL: apiConfig.baseUrl,\n        timeout: 3000,\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${store.getState().auth.token}`,\n        },\n      });\n    }\n    const request = new Promise(function (resolve, reject) {\n      let res;\n\n      switch (action.method) {\n        case \"GET\":\n          res = https.get(action.route);\n          return resolve(res);\n        case \"POST\":\n          res = https.post(action.route, action.payload);\n          return resolve(res);\n        case \"DELETE\":\n          res = https.delete(action.route, action.payload);\n          return resolve(res);\n        case \"PATCH\":\n          res = https.patch(action.route, action.payload);\n          return resolve(res);\n        default:\n          return;\n      }\n    });\n    request\n      .then((res) => {\n        if (action.successNotification) {\n          store.dispatch(\n            showOverlay({\n              timeout: 3000,\n              redirect: action.successNotification.redirect,\n              dispatchCallback: action.successNotification.dispatchCallback,\n              notification: {\n                variant: \"success\",\n                message: action.successNotification.message,\n              },\n            })\n          );\n        }\n        return store.dispatch({\n          type: `${action.type}:SUCCESS`,\n          data: res.data,\n          receivedAt: new Date(),\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        if (\n          action.errorNotification ||\n          err.response?.data.forceReconnect === true\n        ) {\n          store.dispatch(\n            showOverlay({\n              timeout: 3000,\n              dispatchCallback:\n                err.response?.data.forceReconnect && \"REQUEST_LOG_OUT:SUCCESS\",\n              notification: {\n                variant: \"error\",\n                message: err.response?.data.message || \"Cela n'a pas marché...\",\n              },\n            })\n          );\n        }\n        return store.dispatch({\n          type: `${action.type}:ERROR`,\n          error: err,\n          receivedAt: new Date(),\n        });\n      });\n\n    return next(action);\n  } else {\n    return next(action);\n  }\n};\n","import React, { useContext } from \"react\";\nimport { Icon, ThemeContext } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport { logOut } from \"../actions/authActions\";\nimport { View, Text, Platform } from \"react-native\";\nimport Constants from \"expo-constants\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { navigate } from \"../RootNavigation\";\n\nconst AppNavbar = ({\n  navigation,\n  leftButton,\n  title,\n  logOut,\n  noRightButton\n}) => {\n  const { theme } = useContext(ThemeContext);\n\n  const LeftButtonComponent = () => {\n    switch (leftButton) {\n      case \"profile\":\n        return (\n          <Icon\n            name=\"menu\"\n            onPress={() => navigation.openDrawer()}\n            color=\"white\"\n          />\n        );\n      case \"back\":\n        return (\n          <Icon\n            name=\"arrow-left\"\n            color=\"white\"\n            onPress={() => navigate(\"Main\")}\n          />\n        );\n      default:\n        return (\n          <Icon\n            name=\"menu\"\n            onPress={() => navigation.openDrawer()}\n            color=\"white\"\n          />\n        );\n    }\n  };\n\n  const CenterComponent = () => {\n    return (\n      <View>\n        <Text\n          style={{\n            color: \"white\",\n            fontSize: 20,\n            textAlign: \"center\"\n          }}\n        >\n          {title}\n        </Text>\n      </View>\n    );\n  };\n\n  const RightComponent = () => {\n    if (noRightButton) {\n      return <View></View>;\n    } else {\n      return (\n        <View>\n          <Icon name=\"logout\" color=\"white\" onPress={() => logOut()} />\n        </View>\n      );\n    }\n  };\n\n  return (\n    <LinearGradient\n      colors={[theme.colors.primary, theme.colors.secondary]}\n      start={[0.25, 1]}\n      end={[0.25, 0]}\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        paddingTop: Platform.OS === \"web\" ? 10 : Constants.statusBarHeight,\n        paddingHorizontal: 10,\n        paddingBottom: 8\n      }}\n    >\n      <LeftButtonComponent />\n      <CenterComponent />\n      <RightComponent />\n    </LinearGradient>\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logOut: () => dispatch(logOut())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavbar);\n","export const logIn = (credentials) => {\n  return {\n    type: \"REQUEST_LOG_IN\",\n    route: \"/auth/login\",\n    payload: credentials,\n    method: \"POST\",\n    errorNotification: true,\n  };\n};\n\nexport const verifyToken = () => {\n  return {\n    type: \"REQUEST_VERIFY_TOKEN\",\n    route: \"auth/token/verify\",\n    method: \"GET\",\n    errorNotification: true,\n  };\n};\n\nexport const signUp = (credentials) => {\n  return {\n    type: \"REQUEST_SIGN_UP\",\n    route: \"/auth/signup\",\n    payload: credentials,\n    method: \"POST\",\n    successNotification: {\n      message: `Bienvenue ! Rendez-vous à l'onglet \"Mon profil\" pour éditer vos informations.`,\n      variant: \"success\",\n      redirect: \"Main\",\n      timeout: 3000,\n    },\n    errorNotification: true,\n  };\n};\n\nexport const logOut = () => {\n  return {\n    type: \"REQUEST_LOG_OUT\",\n    route: \"/auth/logout\",\n    method: \"GET\",\n    errorNotification: true,\n  };\n};\n\nexport const updateUser = (user) => {\n  return {\n    type: \"REQUEST_UPDATE_USER\",\n    method: \"PATCH\",\n    route: \"auth\",\n    payload: user,\n    successNotification: {\n      message: \"Vos informations ont été mises à jour.\",\n      variant: \"success\",\n      redirect: \"Read\",\n      timeout: 1000,\n    },\n    errorNotification: true,\n  };\n};\n\nexport const updateUserPassword = (password, newPassword) => {\n  return {\n    type: \"REQUEST_UPDATE_USER\",\n    method: \"PATCH\",\n    route: \"auth/password\",\n    payload: { password, newPassword },\n    successNotification: {\n      message: \"Votre mot de passe à été mises à jour.\",\n      variant: \"success\",\n      redirect: \"Read\",\n      timeout: 1000,\n    },\n    errorNotification: true,\n  };\n};\n\nexport const deleteAccount = () => {\n  return {\n    type: \"REQUEST_DELETE_ACCOUNT\",\n    method: \"DELETE\",\n    route: \"auth\",\n    successNotification: {\n      message: \"Votre compte a bien été supprimé.\",\n      variant: \"success\",\n      timeout: 1000,\n    },\n    errorNotification: true,\n  };\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { View, Text, FlatList, TouchableOpacity } from \"react-native\";\nimport { Icon, ThemeContext } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport AppNavbar from \"../AppNavbar\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchMyJobs } from \"../../actions/jobsActions\";\n\nconst Item = ({ item, navigation }) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <TouchableOpacity\n      onPress={() => navigation.navigate(\"Edit\", { job: item })}\n    >\n      <View\n        style={{\n          paddingTop: 8,\n          paddingHorizontal: 20,\n          marginVertical: 4,\n          marginHorizontal: 0,\n          borderBottomWidth: 1,\n          borderBottomColor: theme.colors.grey4,\n          paddingVertical: 12,\n          flexDirection: \"row\",\n        }}\n      >\n        <View style={{ flex: 1 }}>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16,\n            }}\n          >\n            {item?.jobTitle} en {item?.employmentType}\n          </Text>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              {item?.organisation}\n            </Text>\n          </View>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\", flex: 1 }}>\n            <Icon name=\"map-marker\" size={20} />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {_.capitalize(item?.city)}\n            </Text>\n            <Text\n              color=\"grey\"\n              style={{\n                color: \"grey\",\n                fontSize: 10,\n                textAlignVertical: \"bottom\",\n              }}\n            >\n              {_.capitalize(moment(item?.publishedAt).locale(\"fr\").fromNow())}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst MyJobsScreen = ({ auth, navigation, fetchMyJobs }) => {\n  useEffect(() => {\n    function fetchData() {\n      fetchMyJobs();\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <View style={{ flex: 1, backgroundColor: \"white\" }}>\n      <AppNavbar\n        title=\"Mes offres d'emploi\"\n        navigation={navigation}\n        noRightButton={true}\n        leftButton=\"back\"\n      />\n      <FlatList\n        data={auth.user.jobs}\n        renderItem={({ item }) => <Item item={item} navigation={navigation} />}\n        keyExtractor={(item) => item?._id}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    jobs: state.jobs,\n    auth: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchMyJobs: () => dispatch(fetchMyJobs()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyJobsScreen);\n","export const createJob = (job) => {\n  return {\n    type: \"REQUEST_CREATE_JOB\",\n    route: \"jobs\",\n    payload: job,\n    method: \"POST\",\n    successNotification: {\n      message: \"Votre offre d'emploi a été créée\",\n      redirect: \"MyJobs\",\n    },\n    errorNotification: true,\n  };\n};\n\nexport const fetchJobs = () => {\n  return {\n    type: \"REQUEST_JOBS\",\n    route: \"jobs\",\n    method: \"GET\",\n  };\n};\n\nexport const fetchMyJobs = () => {\n  return {\n    type: \"REQUEST_MY_JOBS\",\n    route: \"jobs/me\",\n    method: \"GET\",\n  };\n};\n\nexport const updateJob = (job) => {\n  return {\n    type: \"REQUEST_UPDATE_JOB\",\n    method: \"PATCH\",\n    route: `jobs/${job._id}`,\n    payload: job,\n    successNotification: {\n      message: \"Votre offre d'emploi a été mise à jour.\",\n      variant: \"success\",\n      redirect: \"MyJobs\",\n      timeout: 1000,\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000,\n    },\n  };\n};\n\nexport const deleteJob = (id) => {\n  return {\n    type: \"REQUEST_DELETE_JOB\",\n    method: \"DELETE\",\n    route: `jobs/${id}`,\n    successNotification: {\n      message: \"Offre d'emploi supprimée.\",\n      variant: \"success\",\n      redirect: \"MyJobs\",\n      timeout: 1000,\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000,\n    },\n  };\n};\n","import React, { useContext, useState } from \"react\";\nimport { View, Text, Switch, ScrollView } from \"react-native\";\nimport { Input, Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport { updateJob, deleteJob, fetchMyJobs } from \"../../actions/jobsActions\";\n\nconst MyJobsEditScreen = ({\n  updateJob,\n  deleteJob,\n  route,\n  fetchMyJobs,\n  navigation\n}) => {\n  const [deleting, setDeleting] = useState(false);\n  const [updating, setUpdating] = useState(false);\n  const { job } = route.params;\n  const { theme } = useContext(ThemeContext);\n  const [employmentType, setEmploymentType] = useState(job.employmentType);\n  const [asap, setAsap] = useState(job.asap);\n  const [organisation, setOrganisation] = useState(job.organisation);\n  const [city, setCity] = useState(job.city);\n  const [salary, setSalary] = useState(job.salary);\n  const [jobTitle, setJobTitle] = useState(job.jobTitle);\n  const [jobDesc, setJobDesc] = useState(job.jobDesc);\n  const [minExp, setMinExp] = useState(`${job.minExp}`);\n  const [contact, setContact] = useState(job.contact);\n  const [errors, setErrors] = useState({});\n\n  const onEditJob = () => {\n    {\n      if (!employmentType) {\n        return setErrors({\n          employmentType: \"Ce champs est obligatoire.\"\n        });\n      } else if (!organisation) {\n        return setErrors({\n          organisation: \"Ce champs est obligatoire.\"\n        });\n      } else if (!city) {\n        return setErrors({\n          city: \"Ce champs est obligatoire.\"\n        });\n      } else if (!jobDesc) {\n        return setErrors({\n          jobDesc: \"Ce champs est obligatoire.\"\n        });\n      } else if (!jobTitle) {\n        return setErrors({\n          jobTitle: \"Ce champs est obligatoire.\"\n        });\n      } else if (!minExp) {\n        return setErrors({\n          minExp: \"Ce champs est obligatoire.\"\n        });\n      }\n    }\n\n    updateJob({\n      ...job,\n      employmentType,\n      asap,\n      organisation,\n      city,\n      salary,\n      jobDesc,\n      jobTitle,\n      minExp,\n      contact\n    });\n\n    {\n      setAsap(false);\n      setCity();\n      setSalary();\n      setContact();\n      setErrors({});\n      setEmploymentType();\n      setOrganisation();\n      setJobDesc();\n      setJobTitle();\n    }\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\"\n      }}\n    >\n      <ScrollView>\n        <Input\n          label=\"Type de contrat*\"\n          placeholder=\"CDI, CDD, Apprentissage...\"\n          value={employmentType}\n          onChangeText={value => setEmploymentType(value)}\n          errorMessage={errors.employmentType}\n        />\n        <Input\n          label=\"Organisation*\"\n          placeholder=\"Deloitte, Engie, EY...\"\n          value={organisation}\n          onChangeText={value => setOrganisation(value)}\n          errorMessage={errors.organisation}\n        />\n        <Input\n          placeholder=\"Paris, Shanghai, Lyon...\"\n          label=\"Ville*\"\n          value={city}\n          onChangeText={value => setCity(value)}\n          errorMessage={errors.city}\n        />\n        <Input\n          placeholder=\"Auditeur des SI, Pentester junior...\"\n          label=\"Intitulé du poste*\"\n          value={jobTitle}\n          onChangeText={value => setJobTitle(value)}\n          errorMessage={errors.jobTitle}\n        />\n        <Input\n          label=\"Description du poste*\"\n          multiline\n          inputStyle={{ height: 200, textAlignVertical: \"top\" }}\n          placeholder=\"Les missions, les compétences requises, l'employeur...\"\n          value={jobDesc}\n          onChangeText={value => setJobDesc(value)}\n          errorMessage={errors.jobDesc}\n        />\n        <Input\n          label=\"Expérience*\"\n          placeholder=\"Années passées dans un poste similaire\"\n          value={minExp}\n          keyboardType=\"number-pad\"\n          onChangeText={value => setMinExp(value)}\n          errorMessage={errors.minExp}\n        />\n        <Input\n          label=\"Rémunération\"\n          placeholder=\"En €\"\n          keyboardType=\"decimal-pad\"\n          value={salary}\n          onChangeText={value => setSalary(value)}\n          showSoftInputOnFocus={false}\n          errorMessage={errors.salary}\n        />\n        <View\n          style={{\n            marginBottom: 12,\n            flexDirection: \"row\",\n            display: \"flex\",\n            height: 40\n          }}\n        >\n          <Text\n            style={{\n              color: theme.colors.grey3,\n              fontWeight: \"bold\",\n              paddingLeft: 10,\n              fontSize: 16,\n              flex: 1,\n              textAlignVertical: \"center\"\n            }}\n          >\n            Poste à pourvoir dès que possible\n          </Text>\n          <Switch\n            trackColor={{\n              false: theme.colors.grey4,\n              true: theme.colors.primarySoft\n            }}\n            thumbColor={asap ? theme.colors.primary : theme.colors.grey2}\n            value={asap}\n            onValueChange={value => setAsap(value)}\n          />\n        </View>\n        <Input\n          label=\"Contact\"\n          placeholder=\"Email\"\n          value={contact}\n          onChangeText={value => setContact(value)}\n          errorMessage={errors.contact}\n        />\n      </ScrollView>\n      <View style={{ paddingTop: 8 }}>\n        <Button\n          title=\"Valider les changements\"\n          loading={updating}\n          onPress={() => {\n            setUpdating(true);\n            onEditJob();\n            setUpdating(false);\n            fetchMyJobs();\n            navigation.navigate(\"Read\");\n          }}\n          buttonStyle={{ backgroundColor: theme.colors.primary }}\n        />\n        <Button\n          title=\"Supprimer l'offre\"\n          loading={deleting}\n          onPress={async () => {\n            setDeleting(true);\n            await deleteJob(job._id);\n            setDeleting(false);\n            fetchMyJobs();\n            navigation.navigate(\"Read\");\n          }}\n          buttonStyle={{ backgroundColor: theme.colors.error }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { jobs: state.jobs, auth: state.auth };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateJob: job => dispatch(updateJob(job)),\n    deleteJob: id => dispatch(deleteJob(id)),\n    fetchMyJobs: () => dispatch(fetchMyJobs())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyJobsEditScreen);\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Read from \"./MyJobsReadScreen\";\nimport Edit from \"./MyJobsEditScreen\";\n\nconst Stack = createStackNavigator();\n\nconst MyJobsScreen = () => {\n  return (\n    <View style={{ flex: 1 }}>\n      <Stack.Navigator initialRouteName=\"Read\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"Read\"\n          component={Read}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Edit\"\n          component={Edit}\n          options={{ title: \"Modifier\" }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default MyJobsScreen;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport {\n  View,\n  FlatList,\n  Text,\n  RefreshControl,\n  ActivityIndicator,\n} from \"react-native\";\nimport { Icon, Button } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { fetchJobs } from \"../../actions/jobsActions\";\n\nconst Item = ({ item, navigation }) => {\n  return (\n    <TouchableOpacity\n      onPress={() =>\n        navigation.navigate(\"Read\", {\n          job: item,\n        })\n      }\n    >\n      <View\n        style={{\n          paddingTop: 8,\n          paddingHorizontal: 20,\n          marginVertical: 4,\n          marginHorizontal: 0,\n          borderBottomWidth: 1,\n          borderBottomColor: theme.colors.grey4,\n          paddingVertical: 12,\n          flexDirection: \"row\",\n        }}\n      >\n        <View style={{ flex: 1 }}>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16,\n            }}\n          >\n            {item?.jobTitle} en {item?.employmentType}\n          </Text>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              {item?.organisation}\n            </Text>\n          </View>\n          <View style={{ flexDirection: \"row\", flex: 1, alignItems: \"center\" }}>\n            <Icon name=\"map-marker\" size={20} />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {_.capitalize(item?.city)}\n            </Text>\n            <Text\n              color=\"grey\"\n              style={{\n                color: \"grey\",\n                fontSize: 10,\n                textAlignVertical: \"bottom\",\n              }}\n            >\n              {_.capitalize(moment(item?.publishedAt).locale(\"fr\").fromNow())}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst JobsListScreen = ({ navigation, fetchJobs, jobs }) => {\n  const [refreshing, setRefreshing] = useState(false);\n\n  useEffect(() => {\n    function fetchData() {\n      fetchJobs();\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    fetchJobs();\n    setRefreshing(false);\n  }, [refreshing]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {jobs.isLoaded ? (\n        <FlatList\n          style={{\n            borderRadius: 0,\n            shadowOffset: { width: 10, height: 10 },\n            shadowColor: \"black\",\n            shadowOpacity: 0.3,\n            elevation: 2,\n            backgroundColor: \"white\",\n          }}\n          data={jobs.jobs}\n          renderItem={({ item }) => (\n            <Item item={item} navigation={navigation} />\n          )}\n          keyExtractor={(item) => item?._id}\n          refreshControl={\n            <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n          }\n        />\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n      <Button\n        containerStyle={{\n          position: \"absolute\",\n          bottom: 0,\n          left: 10,\n        }}\n        buttonStyle={{\n          borderRadius: 50,\n        }}\n        icon={<Icon name=\"plus\" size={30} color=\"white\" />}\n        onPress={() => navigation.navigate(\"Post\")}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  jobs: state.jobs,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchJobs: () => dispatch(fetchJobs()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobsListScreen);\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { View, Text, ScrollView } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { fetchJobs } from \"../../actions/jobsActions\";\n\nconst JobsReadScreen = ({ route }) => {\n  const { job } = route.params;\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\",\n      }}\n    >\n      <ScrollView\n        style={{\n          flex: 1,\n          paddingHorizontal: 12,\n        }}\n      >\n        <View style={{ alignItems: \"flex-end\" }}>\n          <Text\n            style={{\n              color: \"grey\",\n              fontSize: 12,\n              textAlignVertical: \"bottom\",\n            }}\n          >\n            {_.capitalize(moment(job.publishedAt).locale(\"fr\").fromNow())}\n          </Text>\n        </View>\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Icon name=\"briefcase\" size={25} color=\"grey\" />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginStart: 8,\n              fontSize: 20,\n            }}\n          >\n            {job.organisation}\n          </Text>\n        </View>\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Icon name=\"map-marker\" size={25} color={theme.colors.grey2} />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginStart: 8,\n              fontSize: 20,\n            }}\n          >\n            {_.capitalize(job.city)}\n          </Text>\n        </View>\n        <Text\n          style={{\n            color: theme.colors.grey3,\n            fontWeight: \"bold\",\n            fontSize: 16,\n            marginTop: 8,\n          }}\n        >\n          Description\n        </Text>\n        <Text style={{ marginBottom: 4, textAlign: \"justify\", fontSize: 16 }}>\n          {job.jobDesc}\n        </Text>\n        {job.salary && (\n          <Text>Rémunération à hauteur de {job.salary} brut.</Text>\n        )}\n        {job.asap && (\n          <Text style={{ color: theme.colors.primary }}>\n            Poste à pourvoir dès que possible.\n          </Text>\n        )}\n        <Text\n          style={{\n            color: theme.colors.grey3,\n            fontWeight: \"bold\",\n            fontSize: 16,\n            marginTop: 8,\n          }}\n        >\n          Contact\n        </Text>\n        <Text>{job.contact}</Text>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  jobs: state.jobs,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchJobs: () => dispatch(fetchJobs()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobsReadScreen);\n","import React, { useState, useContext } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { View, Switch, Text, ScrollView } from \"react-native\";\nimport { Input, Button, ThemeContext } from \"react-native-elements\";\nimport AppNavbar from \"../AppNavbar\";\nimport { createJob } from \"../../actions/jobsActions\";\n\nconst PostScreen = ({}) => {\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const [uploading, setUploading] = useState(false);\n\n  const [errors, setErrors] = useState({});\n\n  // Job\n  const [employmentType, setEmploymentType] = useState(\"\");\n  const [asap, setAsap] = useState(false);\n  const [organisation, setOrganisation] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [salary, setSalary] = useState();\n  const [minExp, setMinExp] = useState();\n  const [contact, setContact] = useState(\"\");\n\n  const filled =\n    !city ||\n    !organisation ||\n    !employmentType ||\n    !jobDesc ||\n    !jobTitle ||\n    !contact\n      ? false\n      : true;\n\n  const uploadJobOffer = () => {\n    setUploading(true);\n\n    const jobOffer = {\n      employmentType,\n      asap,\n      organisation,\n      city,\n      salary,\n      jobDesc,\n      jobTitle,\n      minExp,\n      contact,\n    };\n\n    dispatch(createJob(jobOffer));\n    setUploading(false);\n\n    setAsap(false);\n    setCity();\n    setSalary();\n    setContact();\n    setErrors({});\n    setEmploymentType();\n    setOrganisation();\n    setJobDesc();\n    setJobTitle();\n    setUploading(false);\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flex: 1, backgroundColor: \"white\" }}>\n        <ScrollView\n          style={{\n            paddingHorizontal: 12,\n            paddingTop: 20,\n            paddingBottom: 100,\n          }}\n        >\n          <Input\n            label=\"Type de contrat*\"\n            placeholder=\"CDI, CDD, Apprentissage...\"\n            value={employmentType}\n            onChangeText={(value) => setEmploymentType(value)}\n            errorMessage={errors.employmentType}\n          />\n          <Input\n            label=\"Organisation*\"\n            placeholder=\"Deloitte, Engie, EY...\"\n            value={organisation}\n            onChangeText={(value) => setOrganisation(value)}\n            errorMessage={errors.organisation}\n          />\n          <Input\n            placeholder=\"Paris, Shanghai, Lyon...\"\n            label=\"Ville*\"\n            value={city}\n            onChangeText={(value) => setCity(value)}\n            errorMessage={errors.city}\n          />\n          <Input\n            placeholder=\"Auditeur des SI, Pentester junior...\"\n            label=\"Intitulé du poste*\"\n            value={jobTitle}\n            onChangeText={(value) => setJobTitle(value)}\n            errorMessage={errors.jobTitle}\n          />\n          <Input\n            label=\"Description du poste*\"\n            multiline\n            inputStyle={{ height: 200, textAlignVertical: \"top\" }}\n            placeholder=\"Les missions, les compétences requises, l'employeur...\"\n            value={jobDesc}\n            onChangeText={(value) => setJobDesc(value)}\n            errorMessage={errors.jobDesc}\n          />\n          <Input\n            label=\"Expérience\"\n            placeholder=\"Années passées dans un poste similaire\"\n            value={minExp}\n            keyboardType=\"number-pad\"\n            onChangeText={(value) => setMinExp(value)}\n            errorMessage={errors.minExp}\n          />\n          <Input\n            label=\"Rémunération\"\n            placeholder=\"En €\"\n            keyboardType=\"decimal-pad\"\n            value={salary}\n            onChangeText={(value) => setSalary(value)}\n            showSoftInputOnFocus={false}\n            errorMessage={errors.salary}\n          />\n          <View\n            style={{\n              marginBottom: 12,\n              flexDirection: \"row\",\n              display: \"flex\",\n              height: 40,\n            }}\n          >\n            <Text\n              style={{\n                color: theme.colors.grey3,\n                fontWeight: \"bold\",\n                paddingLeft: 10,\n                fontSize: 16,\n                flex: 1,\n                textAlignVertical: \"center\",\n              }}\n            >\n              Poste à pourvoir dès que possible\n            </Text>\n            <Switch value={asap} onValueChange={(value) => setAsap(value)} />\n          </View>\n          <Input\n            label=\"Contact*\"\n            placeholder=\"Email\"\n            value={contact}\n            onChangeText={(value) => setContact(value)}\n            errorMessage={errors.contact}\n          />\n          <Button\n            title={\n              filled\n                ? \"Poster l'offre d'emploi\"\n                : \"Veuillez remplir tous les champs obligatoires\"\n            }\n            loading={uploading}\n            disabled={!filled}\n            buttonStyle={{ height: 50, marginBottom: 12 }}\n            onPress={() => uploadJobOffer()}\n          />\n          <View style={{ height: 20 }}></View>\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default PostScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport AppNavbar from \"../AppNavbar\";\nimport JobsListScreen from \"./JobsListScreen\";\nimport JobsReadScreen from \"./JobsReadScreen\";\nimport JobsPostScreen from \"./JobsPostScreen\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nconst Stack = createStackNavigator();\n\nconst JobsScreen = ({ navigation }) => {\n  return (\n    <View style={{ flex: 1 }}>\n      <AppNavbar title=\"Emplois\" navigation={navigation} />\n      <Stack.Navigator initialRouteName=\"List\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"List\"\n          component={JobsListScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Read\"\n          component={JobsReadScreen}\n          options={({ route }) => ({\n            title:\n              route.params.job.jobTitle +\n              \" - \" +\n              route.params.job.employmentType,\n            headerStatusBarHeight: 0\n          })}\n        />\n        <Stack.Screen\n          name=\"Post\"\n          component={JobsPostScreen}\n          options={{\n            title: \"Poster une offre d'emploi\",\n            headerStatusBarHeight: 0\n          }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default JobsScreen;\n","import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Avatar,\n  Divider,\n  Icon,\n  Button,\n  ThemeContext\n} from \"react-native-elements\";\nimport { View, Text, ScrollView } from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { uploadFile, deleteFile } from \"../../actions/filesActions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport _ from \"lodash\";\nimport AppNavbar from \"../AppNavbar\";\n\nconst ReadProfileScreen = ({ uploadFile, auth, navigation, deleteFile }) => {\n  const [showAvatarForm, setShowAvatarForm] = useState(false);\n  const { theme } = useContext(ThemeContext);\n\n  const editAvatar = () => {\n    const selectPicture = async () => {\n      await ImagePicker.requestCameraRollPermissionsAsync();\n\n      const picture = await ImagePicker.launchImageLibraryAsync({\n        allowsEditing: true\n      });\n\n      !picture.cancelled && uploadFile(picture, \"avatar\");\n    };\n    selectPicture();\n    setShowAvatarForm(false);\n  };\n\n  const { user } = auth;\n  return (\n    <View\n      style={{\n        flex: 1\n      }}\n    >\n      <AppNavbar\n        navigation={navigation}\n        title=\"Mon profil\"\n        leftButton=\"back\"\n        noRightButton={true}\n      />\n      {auth.user ? (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"space-between\",\n            backgroundColor: \"white\"\n          }}\n        >\n          <ScrollView\n            style={{\n              paddingTop: 40,\n              flex: 1,\n              paddingHorizontal: 12\n            }}\n          >\n            <LinearGradient\n              colors={[theme.colors.primary, theme.colors.secondary]}\n              start={[0.25, 1]}\n              end={[0, 0]}\n              style={{\n                flexDirection: \"row\",\n                marginBottom: 20,\n                paddingVertical: 8,\n                paddingHorizontal: 16,\n                borderRadius: 5\n              }}\n            >\n              <View\n                style={{\n                  flex: 1,\n                  alignContent: \"center\",\n                  justifyContent: \"center\"\n                }}\n              >\n                <Text style={{ fontSize: 20, color: theme.colors.grey5 }}>\n                  {_.capitalize(user.firstname)}\n                </Text>\n                <Text\n                  style={{ fontSize: 30, color: \"white\", fontWeight: \"bold\" }}\n                >\n                  {_.capitalize(user.lastname)}\n                </Text>\n              </View>\n              {user.avatar ? (\n                <Avatar\n                  size=\"xlarge\"\n                  containerStyle={{\n                    borderColor: \"white\",\n                    borderWidth: 3\n                  }}\n                  source={{\n                    uri: `https://siee-gate.herokuapp.com/api/files/avatar/${user.avatar?.filename}`\n                  }}\n                  onPress={() => setShowAvatarForm(!showAvatarForm)}\n                />\n              ) : (\n                <Avatar\n                  size=\"xlarge\"\n                  containerStyle={{\n                    borderColor: \"white\",\n                    borderWidth: 3\n                  }}\n                  title={user.firstname\n                    .charAt(0)\n                    .concat(user.lastname.charAt(0))\n                    .toUpperCase()}\n                  onPress={() => setShowAvatarForm(!showAvatarForm)}\n                />\n              )}\n              {showAvatarForm && (\n                <View\n                  style={{\n                    paddingHorizontal: 4,\n                    alignContent: \"center\",\n                    justifyContent: \"center\"\n                  }}\n                >\n                  <Button\n                    icon={<Icon name=\"pencil\" color={theme.colors.grey4} />}\n                    onPress={() => editAvatar()}\n                    buttonStyle={{\n                      backgroundColor: theme.colors.primaryLight,\n                      width: 40,\n                      height: 40,\n                      borderRadius: 40\n                    }}\n                  />\n                  <Button\n                    icon={<Icon name=\"delete\" color={theme.colors.grey4} />}\n                    buttonStyle={{\n                      backgroundColor: theme.colors.grey0,\n                      width: 40,\n                      height: 40,\n                      borderRadius: 40\n                    }}\n                    onPress={() => deleteFile(\"avatar\", user.avatar?.filename)}\n                  />\n                </View>\n              )}\n            </LinearGradient>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Icon name=\"briefcase\" size={20} color=\"grey\" />\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  marginHorizontal: 8,\n                  flex: 1\n                }}\n              >\n                {user.jobTitle} chez {user.organisation}\n              </Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\"\n              }}\n            >\n              <Icon name=\"school\" size={20} color=\"grey\" />\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  marginHorizontal: 8,\n                  flex: 1\n                }}\n              >\n                Promotion {user.promo}\n              </Text>\n            </View>\n            <Divider\n              style={{\n                marginVertical: 20,\n                backgroundColor: \"grey\",\n                borderWidth: 1,\n                width: 20\n              }}\n            />\n            <View style={{ flexDirection: \"row\" }}>\n              <Text style={{ textAlign: \"justify\", flex: 1, marginEnd: 8 }}>\n                {user.description}\n              </Text>\n            </View>\n            <Divider\n              style={{\n                marginVertical: 20,\n                backgroundColor: \"grey\",\n                borderWidth: 1,\n                width: 20\n              }}\n            />\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Icon name=\"at\" size={20} color=\"grey\" />\n              <Text\n                style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n              >\n                {user.email}\n              </Text>\n            </View>\n          </ScrollView>\n          <View>\n            <Button\n              title=\"Editer\"\n              onPress={() => navigation.navigate(\"Edit\")}\n            />\n          </View>\n        </View>\n      ) : (\n        <View\n          style={{ flex: 1, alignContent: \"center\", justifyContent: \"center\" }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    uploadFile: (file, type) => dispatch(uploadFile(file, type)),\n    deleteFile: (bucketName, id) => dispatch(deleteFile(bucketName, id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReadProfileScreen);\n","export const fetchFile = (bucketName, fileId) => {\n  return {\n    type: \"REQUEST_FILE\",\n    route: `files/${bucketName}/${fileId}`,\n    method: \"GET\"\n  };\n};\n\nexport const deleteFile = (bucketName, fileId) => {\n  return {\n    type: \"REQUEST_DELETE_FILE\",\n    route: `files/${bucketName}/${fileId}`,\n    method: \"DELETE\",\n    successNotification: {\n      message: \"Votre document a bien été supprimé de la base de données.\",\n      variant: \"success\",\n      timeout: 2000\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000\n    }\n  };\n};\n\nexport const uploadFile = (file, bucketName) => {\n  let formData = new FormData();\n  let temp = file.uri.split(\"/\");\n  formData.append(bucketName, {\n    uri: file.uri,\n    name: temp[temp.length - 1],\n    type: \"image/jpeg\"\n  });\n\n  return {\n    type: \"REQUEST_UPLOAD_FILE\",\n    route: `files`,\n    payload: formData,\n    method: \"POST\",\n    successNotification: {\n      message: \"Votre document a bien été enregistré dans la base de données.\",\n      variant: \"success\",\n      redirect: \"Profile\",\n      timeout: 2000\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000\n    }\n  };\n};\n","import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Button, Input, ThemeContext } from \"react-native-elements\";\nimport { View, ScrollView, Text, TouchableOpacity } from \"react-native\";\nimport {\n  updateUser,\n  deleteAccount,\n  updateUserPassword\n} from \"../../actions/authActions\";\n\nconst ProfileEditScreen = ({\n  updateUser,\n  deleteAccount,\n  auth,\n  updateUserPassword\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const [desc, setDesc] = useState(auth.user.description);\n  const [email, setEmail] = useState(auth.user.email);\n  const [jobTitle, setJobTitle] = useState(auth.user.jobTitle);\n  const [organisation, setOrganisation] = useState(auth.user.organisation);\n  const [promo, setPromo] = useState(`${auth.user.promo}`);\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [showEditPasswordForm, setShowEditPasswordForm] = useState(false);\n  const [showDeleteAccountForm, setShowDeleteAccountForm] = useState(false);\n  const [showEditAccountInfoForm, setShowEditAccountInfoForm] = useState(false);\n\n  const onEditProfile = () => {\n    updateUser({\n      ...auth.user,\n      description: desc,\n      email,\n      jobTitle,\n      organisation,\n      promo\n    });\n  };\n\n  const onChangePassword = () => {\n    if (newPassword.length < 8) {\n      return setPasswordError(\n        \"Choisissez un mot de passe d'au moins 8 caractères.\"\n      );\n    } else if (newPassword !== confirmation) {\n      return setPasswordError(\"Les mots de passe ne correspondent pas.\");\n    }\n    updateUserPassword(password, newPassword);\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\"\n      }}\n    >\n      <ScrollView>\n        <View\n          style={{\n            borderBottomColor: theme.colors.grey4,\n            borderBottomWidth: 1\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              paddingVertical: 12,\n              paddingHorizontal: 12,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignContent: \"center\"\n            }}\n            onPress={() => setShowEditAccountInfoForm(!showEditAccountInfoForm)}\n          >\n            <Text style={{ fontSize: 16 }}>Editer mes informations</Text>\n            <Icon\n              name={!showEditAccountInfoForm ? \"chevron-down\" : \"chevron-up\"}\n            />\n          </TouchableOpacity>\n          {showEditAccountInfoForm && (\n            <View style={{ marginBottom: 12 }}>\n              <Input\n                label=\"Promotion\"\n                value={promo}\n                onChangeText={text => setPromo(text)}\n                leftIcon={<Icon name=\"school\" />}\n              />\n              <Input\n                value={organisation}\n                label=\"Organisation\"\n                onChangeText={text => setOrganisation(text)}\n                leftIcon={<Icon name=\"domain\" />}\n              />\n              <Input\n                value={jobTitle}\n                onChangeText={text => setJobTitle(text)}\n                label=\"Profession\"\n                leftIcon={<Icon name=\"briefcase\" />}\n              />\n              <Input\n                label=\"Description\"\n                value={desc}\n                multiline\n                numberOfLines={8}\n                onChangeText={text => setDesc(text)}\n              />\n              <Input\n                label=\"email\"\n                value={email}\n                leftIcon={<Icon name=\"email\" />}\n                onChangeText={text => setEmail(text)}\n              />\n              <Button\n                title=\"Valider les changements\"\n                onPress={() => onEditProfile()}\n                buttonStyle={{ backgroundColor: theme.colors.primary }}\n              />\n            </View>\n          )}\n        </View>\n        <View\n          style={{\n            borderBottomColor: theme.colors.grey4,\n            borderBottomWidth: 1\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              paddingVertical: 12,\n              paddingHorizontal: 12,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            }}\n            onPress={() => setShowEditPasswordForm(!showEditPasswordForm)}\n          >\n            <Text style={{ fontSize: 16 }}>Changer mon mot de passe</Text>\n            <Icon\n              name={!showEditPasswordForm ? \"chevron-down\" : \"chevron-up\"}\n            />\n          </TouchableOpacity>\n          {showEditPasswordForm && (\n            <View style={{ marginBottom: 12 }}>\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Ancien mot de passe\"\n                secureTextEntry\n                value={password}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={value => setPassword(value)}\n              />\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Nouveau mot de passe\"\n                secureTextEntry\n                value={newPassword}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={value => {\n                  setPasswordError(\"\");\n                  setNewPassword(value);\n                }}\n                errorMessage={passwordError}\n              />\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={\n                  <Icon\n                    name={confirmation === newPassword ? \"check\" : \"close\"}\n                    color={confirmation === newPassword ? \"green\" : \"red\"}\n                  />\n                }\n                label=\"Confirmation\"\n                secureTextEntry\n                value={confirmation}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 40, marginTop: 8 }}\n                onChangeText={value => setConfirmation(value)}\n              />\n              <Button\n                title=\"Valider\"\n                onPress={() => onChangePassword()}\n                buttonStyle={{ backgroundColor: theme.colors.primary }}\n                loading={auth.isUpdatingPassword}\n              />\n            </View>\n          )}\n        </View>\n        <View>\n          <TouchableOpacity\n            style={{\n              paddingVertical: 12,\n              paddingHorizontal: 12,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            }}\n            onPress={() => setShowDeleteAccountForm(!showDeleteAccountForm)}\n          >\n            <Text style={{ fontSize: 16 }}>Supprimer mon compte</Text>\n            <Icon\n              name={!showDeleteAccountForm ? \"chevron-down\" : \"chevron-up\"}\n            />\n          </TouchableOpacity>\n          {showDeleteAccountForm && (\n            <View style={{ marginBottom: 12 }}>\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Mot de passe\"\n                secureTextEntry\n                value={password}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={value => setPassword(value)}\n              />\n              <Button\n                title=\"Valider\"\n                disabled={!password}\n                onPress={password => deleteAccount(password)}\n                buttonStyle={{ backgroundColor: theme.colors.error }}\n              />\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: user => dispatch(updateUser(user)),\n    deleteAccount: password => dispatch(deleteAccount(password)),\n    updateUserPassword: (password, newPassword) =>\n      dispatch(updateUserPassword(password, newPassword))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEditScreen);\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport ReadProfileScreen from \"./ProfileReadScreen\";\nimport EditProfileScreen from \"./ProfileEditScreen\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nconst Stack = createStackNavigator();\n\nconst ProfileScreen = () => {\n  return (\n    <View style={{ flex: 1 }}>\n      <Stack.Navigator initialRouteName=\"Lobby\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"Read\"\n          component={ReadProfileScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Edit\"\n          component={EditProfileScreen}\n          options={{ title: \"Modifier mon compte\" }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default ProfileScreen;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  View,\n  Text,\n  ActivityIndicator,\n  FlatList,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Avatar, Icon } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport _ from \"lodash\";\n\nconst Item = ({ item, navigation }) => {\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Read\", {\n          item,\n        });\n      }}\n    >\n      <View\n        style={{\n          paddingTop: 8,\n          paddingHorizontal: 20,\n          marginVertical: 4,\n          marginHorizontal: 0,\n          borderBottomWidth: 1,\n          borderBottomColor: theme.colors.grey4,\n          paddingVertical: 12,\n          flexDirection: \"row\",\n        }}\n      >\n        <View\n          style={{\n            alignContent: \"center\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginRight: 12,\n          }}\n        >\n          {item?.avatar ? (\n            <Avatar\n              source={{\n                uri: `https://siee-gate.herokuapp.com/api/files/avatar/${item?.avatar?.filename}`,\n              }}\n              size=\"medium\"\n            />\n          ) : (\n            <Avatar\n              size=\"medium\"\n              title={item?.firstname[0].concat(item?.lastname[0]).toUpperCase()}\n            />\n          )}\n        </View>\n        <View>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16,\n            }}\n          >\n            {_.capitalize(item?.firstname)} {_.capitalize(item?.lastname)}\n          </Text>\n          <View style={{ flexDirection: \"row\", flex: 1, alignItems: \"center\" }}>\n            <Icon name=\"account-card-details\" size={20} />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              {item?.jobTitle} chez {item?.organisation}\n            </Text>\n          </View>\n          <View style={{ flexDirection: \"row\", flex: 1, alignItems: \"center\" }}>\n            <Icon name=\"school\" size={20} />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              SIEE promotion {item?.promo}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst PeopleScreen = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const { users, auth } = useSelector((state) => state);\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchUsers());\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {users.isLoaded ? (\n        <FlatList\n          style={{\n            borderRadius: 0,\n            shadowOffset: { width: 10, height: 10 },\n            shadowColor: \"black\",\n            shadowOpacity: 0.3,\n            elevation: 2,\n            backgroundColor: \"white\",\n          }}\n          data={users.users.filter((user) => user._id !== auth.user._id)}\n          renderItem={({ item }) => (\n            <Item item={item} navigation={navigation} />\n          )}\n          keyExtractor={(item) => item?._id}\n        />\n      ) : (\n        <View\n          style={{ flex: 1, alignContent: \"center\", justifyContent: \"center\" }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default PeopleScreen;\n","export const fetchUsers = () => {\n  return {\n    type: \"REQUEST_USERS\",\n    method: \"GET\",\n    route: \"users\"\n  };\n};\n","export const sendMessage = (message) => {\n  return {\n    type: \"SOCKET\",\n    event: \"message\",\n    payload: {\n      ...message,\n      sentAt: new Date(),\n    },\n  };\n};\n\nexport const fetchConversation = (conversation_id) => {\n  return {\n    type: \"REQUEST_CONVERSATION\",\n    method: \"GET\",\n    route: `conversations/single/${conversation_id}`,\n  };\n};\n\nexport const fetchConversations = () => {\n  return {\n    type: \"REQUEST_CONVERSATIONS\",\n    method: \"GET\",\n    route: `conversations`,\n  };\n};\n\nexport const deleteConversation = (conversation_id) => {\n  return {\n    type: \"REQUEST_DELETE_CONVERSATION\",\n    method: \"DELETE\",\n    route: `conversations/${conversation_id}`,\n    successNotification: {\n      message: \"Conversation supprimée\",\n      variant: \"information\",\n      timeout: 1000,\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000,\n    },\n  };\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { View, Text, ScrollView } from \"react-native\";\nimport { Avatar, Divider, Icon, Button } from \"react-native-elements\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport theme from \"../../Theme.json\";\nimport _ from \"lodash\";\nimport { showOverlay } from \"../../actions/overlayAction\";\nimport { sendMessage, fetchConversations } from \"../../actions/chatActions\";\n\nconst PeopleScreen = ({ route, navigation }) => {\n  const { chat } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const { item } = route.params;\n\n  return (\n    <View\n      style={{\n        flex: 1,\n      }}\n    >\n      <View\n        style={{\n          flex: 1,\n          alignContent: \"space-between\",\n          paddingVertical: 10,\n          paddingHorizontal: 8,\n          backgroundColor: \"white\",\n        }}\n      >\n        <ScrollView\n          style={{\n            flex: 1,\n          }}\n        >\n          <LinearGradient\n            colors={[theme.colors.primary, theme.colors.secondary]}\n            start={[0.25, 1]}\n            end={[0, 0]}\n            style={{\n              flexDirection: \"row\",\n              marginBottom: 20,\n              paddingVertical: 8,\n              paddingHorizontal: 16,\n              borderRadius: 5,\n            }}\n          >\n            <View\n              style={{\n                flex: 1,\n                alignContent: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Text style={{ fontSize: 20, color: theme.colors.grey5 }}>\n                {_.capitalize(item?.firstname)}\n              </Text>\n              <Text\n                style={{ fontSize: 30, color: \"white\", fontWeight: \"bold\" }}\n              >\n                {_.capitalize(item?.lastname)}\n              </Text>\n            </View>\n            {item?.avatar ? (\n              <Avatar\n                size=\"xlarge\"\n                containerStyle={{\n                  borderColor: \"white\",\n                  borderWidth: 3,\n                }}\n                source={{\n                  uri: `https://siee-gate.herokuapp.com/api/files/avatar/${item?.avatar?.filename}`,\n                }}\n              />\n            ) : (\n              <Avatar\n                size=\"xlarge\"\n                containerStyle={{\n                  borderColor: \"white\",\n                  borderWidth: 3,\n                }}\n                title={item?.firstname\n                  .charAt(0)\n                  .concat(item?.lastname.charAt(0))\n                  .toUpperCase()}\n              />\n            )}\n          </LinearGradient>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text\n              style={{\n                textAlignVertical: \"bottom\",\n                marginHorizontal: 8,\n                flex: 1,\n              }}\n            >\n              {item?.jobTitle} chez {item?.organisation}\n            </Text>\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Icon name=\"school\" size={20} color=\"grey\" />\n            <Text\n              style={{\n                textAlignVertical: \"bottom\",\n                marginHorizontal: 8,\n                flex: 1,\n              }}\n            >\n              Promotion {item?.promo}\n            </Text>\n          </View>\n          <Divider\n            style={{\n              marginVertical: 20,\n              backgroundColor: \"grey\",\n              borderWidth: 1,\n              width: 20,\n            }}\n          />\n          <View style={{ flexDirection: \"row\" }}>\n            <Text style={{ textAlign: \"justify\", flex: 1, marginEnd: 8 }}>\n              {item?.description}\n            </Text>\n          </View>\n          <Divider\n            style={{\n              marginVertical: 20,\n              backgroundColor: \"grey\",\n              borderWidth: 1,\n              width: 20,\n            }}\n          />\n          <View style={{ flexDirection: \"row\" }}>\n            <Icon name=\"at\" size={20} color=\"grey\" />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {item?.email}\n            </Text>\n          </View>\n        </ScrollView>\n        <Button\n          title=\"Contacter\"\n          onPress={() =>\n            chat.interlocutorsIds.includes(item?._id)\n              ? () =>\n                  navigation.navigate(\"Room\", {\n                    title: fullName,\n                    conversation: chat.convIdsWithPartsIds\n                      .filter(\n                        (element) =>\n                          element.participants.includes(item?._id) === true\n                      )\n                      .filter((conv) => conv.participants.length === 2)[0],\n                  })\n              : dispatch(\n                  showOverlay({\n                    form: {\n                      action: sendMessage,\n                      inputName: \"text\",\n                      actionParams: { recipients: [item?._id] },\n                      message:\n                        \"Demarrer une conversation avec \" +\n                        _.capitalize(item?.firstname) +\n                        \" \" +\n                        _.capitalize(item?.lastname),\n                    },\n                    redirect: \"Messages\",\n                    dispatchCallback: fetchConversations,\n                  })\n                )\n          }\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default PeopleScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AppNavbar from \"../AppNavbar\";\nimport PeopleListScreen from \"./PeopleListScreen\";\nimport PeopleReadScreen from \"./PeopleReadScreen\";\nconst Stack = createStackNavigator();\n\nconst PeopleScreen = ({ navigation }) => {\n  return (\n    <View style={{ flex: 1 }}>\n      <AppNavbar title=\"Annuaire\" navigation={navigation} />\n      <Stack.Navigator initialRouteName=\"List\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"List\"\n          component={PeopleListScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Read\"\n          component={PeopleReadScreen}\n          options={{ headerStatusBarHeight: 0, title: \"\" }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default PeopleScreen;\n","import React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport {\n  View,\n  Text,\n  ActivityIndicator,\n  FlatList,\n  TouchableOpacity,\n  RefreshControl,\n  TextInput,\n} from \"react-native\";\nimport {\n  SearchBar,\n  Avatar,\n  ThemeContext,\n  Button,\n  Icon,\n} from \"react-native-elements\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport {\n  fetchConversations,\n  sendMessage,\n  deleteConversation,\n} from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\nimport { showOverlay } from \"../../actions/overlayAction\";\n\nconst SearchResultItem = ({ item, theme, navigation, chat, dispatch }) => {\n  const [showMessageForm, setShowMessageForm] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const fullName =\n    _.capitalize(item?.firstname) + \" \" + _.capitalize(item?.lastname);\n\n  return (\n    <TouchableOpacity\n      onPress={\n        chat.interlocutorsIds.includes(item?._id)\n          ? () =>\n              navigation.navigate(\"Room\", {\n                title: fullName,\n                conversation: chat.convIdsWithPartsIds\n                  .filter(\n                    (element) =>\n                      element.participants.includes(item?._id) === true\n                  )\n                  .filter((conv) => conv.participants.length === 2)[0],\n              })\n          : () =>\n              dispatch(\n                showOverlay({\n                  form: {\n                    action: sendMessage,\n                    inputName: \"text\",\n                    actionParams: { recipients: [item?._id] },\n                    message: \"Demarrer une conversation avec \" + fullName,\n                  },\n                  dispatchCallback: fetchConversations,\n                })\n              )\n      }\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          paddingVertical: 4,\n          paddingHorizontal: 8,\n          borderBottomColor: theme.colors.grey5,\n          borderBottomWidth: 1,\n        }}\n      >\n        <View\n          style={{\n            alignContent: \"center\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginRight: 12,\n          }}\n        >\n          {item?.avatar ? (\n            <Avatar\n              source={{\n                uri: `https://siee-gate.herokuapp.com/api/files/avatar/${item?.avatar?.filename}`,\n              }}\n              size=\"small\"\n            />\n          ) : (\n            <Avatar\n              size=\"small\"\n              title={item?.firstname[0].concat(item?.lastname[0]).toUpperCase()}\n            />\n          )}\n        </View>\n        {!showMessageForm ? (\n          <Text style={{ paddingLeft: 12 }}>{fullName}</Text>\n        ) : (\n          <View\n            style={{\n              flexDirection: \"row\",\n              backgroundColor: \"white\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              marginTop: 8,\n            }}\n          >\n            <TextInput\n              value={newMessage}\n              multiline\n              placeholder=\"Ecrivez ici.\"\n              placeholderTextColor=\"grey\"\n              onChangeText={(text) => setNewMessage(text)}\n              style={{\n                backgroundColor: theme.colors.grey5,\n                borderColor: theme.colors.grey4,\n                borderWidth: 1,\n                borderRadius: 5,\n                paddingVertical: 2,\n                paddingHorizontal: 4,\n                maxHeight: 80,\n              }}\n            />\n            <Button\n              containerStyle={{ height: 30 }}\n              icon={\n                <Icon\n                  name=\"send\"\n                  size={20}\n                  color={newMessage ? theme.colors.primary : theme.colors.grey2}\n                />\n              }\n              disabled={!newMessage}\n              type=\"clear\"\n              onPress={() => {\n                onSendMessage(newMessage, item?._id);\n                setNewMessage(\"\");\n                setShowMessageForm(false);\n              }}\n            />\n          </View>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst Item = ({ item, navigation, auth, theme, dispatch }) => {\n  const listParticipants = () => {\n    if (item?.participants?.length > 1) {\n      const participantsList = item?.participants?.map((participant) =>\n        _.capitalize(participant.firstname)\n      );\n      return participantsList.toString().replace(\",\", \", \");\n    } else {\n      return _.capitalize(item?.participants[0]?.firstname).concat(\n        \" \",\n        _.capitalize(item?.participants[0]?.lastname)\n      );\n    }\n  };\n\n  const participants = listParticipants(item);\n\n  return (\n    <TouchableOpacity\n      onPress={() =>\n        navigation.navigate(\"Room\", {\n          conversation: item,\n        })\n      }\n    >\n      <View\n        style={{\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          borderBottomColor: \"white\",\n          borderBottomWidth: 3,\n          backgroundColor: \"white\",\n        }}\n      >\n        <View style={{ flexDirection: \"row\" }}>\n          <View\n            style={{\n              alignContent: \"center\",\n              justifyContent: \"center\",\n              paddingRight: 8,\n            }}\n          >\n            {item?.participants[0]?.avatar ? (\n              <Avatar\n                source={{\n                  uri: `${apiConfig.baseUrl}/files/avatar/${item?.participants[0]?.avatar?.filename}`,\n                }}\n                size=\"medium\"\n              />\n            ) : (\n              <Avatar\n                size=\"medium\"\n                title={item?.participants[0]?.firstname[0]\n                  .concat(item?.participants[0]?.lastname[0])\n                  .toUpperCase()}\n              />\n            )}\n          </View>\n          <View\n            style={{\n              flex: 1,\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                flex: 1,\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  fontSize: 16,\n                  fontWeight: \"bold\",\n                }}\n              >\n                {participants}\n              </Text>\n              <Text\n                color=\"grey\"\n                style={{\n                  color: \"grey\",\n                  fontSize: 10,\n                  textAlignVertical: \"bottom\",\n                }}\n              >\n                {_.capitalize(\n                  moment(item?.lastMessage?.sentAt).locale(\"fr\").fromNow()\n                )}\n              </Text>\n            </View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <View\n                style={{ alignContent: \"center\", justifyContent: \"center\" }}\n              >\n                {item?.lastMessage?.sender === auth.user._id ? (\n                  <Icon\n                    name=\"arrow-top-right\"\n                    color={theme.colors.grey1}\n                    size={14}\n                  />\n                ) : (\n                  <Icon\n                    name=\"arrow-bottom-left\"\n                    color={theme.colors.grey3}\n                    size={14}\n                  />\n                )}\n              </View>\n              <Text\n                style={{\n                  textAlignVertical: \"center\",\n                  fontSize: 14,\n                  flex: 1,\n                }}\n              >\n                {item?.lastMessage?.text}\n              </Text>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignContent: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Icon\n                  name=\"dots-horizontal\"\n                  style={{ alignSelf: \"flex-end\" }}\n                  onPress={() =>\n                    dispatch(\n                      showOverlay({\n                        menu: {\n                          buttons: [\n                            {\n                              title: \"Supprimer la conversation\",\n                              action: deleteConversation,\n                              actionParams: [item?._id],\n                            },\n                          ],\n                        },\n                        dispatchCallback: fetchConversations,\n                      })\n                    )\n                  }\n                />\n              </View>\n            </View>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst ChatLobbyScreen = ({ navigation }) => {\n  const [refreshing, setRefreshing] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const { chat, users, auth } = useSelector((state) => state);\n\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchConversations());\n      dispatch(fetchUsers());\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    fetchConversations();\n    setRefreshing(false);\n  }, [refreshing]);\n\n  const searchProcess = () => {\n    const searchResults = [];\n    users.users.forEach((user) => {\n      if (user._id !== auth.user._id) {\n        if (\n          user.firstname.includes(search.toLowerCase()) === true ||\n          user.lastname.includes(search.toLowerCase())\n        ) {\n          searchResults.push(user);\n        }\n      }\n    });\n    return searchResults;\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ backgroundColor: \"white\", paddingVertical: 4 }}>\n        <SearchBar\n          placeholder=\"Chercher un alumni ici...\"\n          onChangeText={setSearch}\n          value={search}\n          platform=\"android\"\n          containerStyle={{\n            paddingTop: 0,\n            height: 40,\n          }}\n        />\n        {users.isLoaded && (\n          <FlatList\n            data={search && searchProcess()}\n            renderItem={({ item }) => (\n              <SearchResultItem\n                item={item}\n                theme={theme}\n                chat={chat}\n                navigation={navigation}\n                dispatch={dispatch}\n              />\n            )}\n            keyExtractor={(item) => item?._id}\n          />\n        )}\n        {!users.isLoaded && (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <ActivityIndicator size=\"small\" />\n          </View>\n        )}\n      </View>\n      {chat.isLoaded ? (\n        chat.conversations.length > 0 ? (\n          <FlatList\n            data={chat.conversations}\n            renderItem={({ item }) => (\n              <Item\n                item={item}\n                auth={auth}\n                navigation={navigation}\n                theme={theme}\n                dispatch={dispatch}\n              />\n            )}\n            keyExtractor={(item) => item?._id}\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n          />\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text style={{ textAlign: \"center\", color: theme.colors.grey3 }}>\n              Aucune conversation\n            </Text>\n            <Button\n              title=\"Rafraichir\"\n              type=\"clear\"\n              onPress={fetchConversations}\n            />\n          </View>\n        )\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default ChatLobbyScreen;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { View, Text, TextInput, FlatList } from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { ThemeContext, Button, Icon } from \"react-native-elements\";\nimport { sendMessage, fetchConversation } from \"../../actions/chatActions\";\nimport _ from \"lodash\";\n\nconst Message = ({ message, incoming, theme }) => {\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n      }}\n    >\n      {!incoming && <View style={{ flex: 1 }}></View>}\n      <View\n        style={{\n          backgroundColor: incoming ? \"white\" : theme.colors.primary,\n          borderTopLeftRadius: !incoming ? 10 : 0,\n          borderTopRightRadius: 10,\n          borderBottomLeftRadius: 10,\n          borderBottomRightRadius: incoming ? 10 : 0,\n          maxWidth: \"80%\",\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          marginBottom: 8,\n          marginHorizontal: 8,\n        }}\n      >\n        <Text\n          style={{\n            color: !incoming ? \"white\" : \"black\",\n            textAlign: incoming ? \"left\" : \"right\",\n          }}\n        >\n          {message.text}\n        </Text>\n      </View>\n      {incoming && <View style={{ flex: 1 }}></View>}\n    </View>\n  );\n};\n\nconst RoomScreen = ({ chat, sendMessage, route, auth, fetchConversation }) => {\n  const conversation_id = route.params.conversation._id;\n  const [newMessage, setNewMessage] = useState(\"\");\n  const { theme } = useContext(ThemeContext);\n  const conversation = chat.conversations.filter(\n    (conv) => conv._id === conversation_id\n  )[0];\n\n  useEffect(() => {\n    function fetchData() {\n      fetchConversation(conversation_id);\n    }\n    fetchData();\n  }, []);\n\n  const onSendMessage = () => {\n    if (!newMessage) {\n      return;\n    }\n    sendMessage({\n      text: newMessage,\n      conversation_id,\n    });\n    setNewMessage(\"\");\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      <FlatList\n        data={conversation.messages}\n        renderItem={({ item }) => (\n          <Message\n            message={item}\n            incoming={item?.sender !== auth.user._id}\n            theme={theme}\n          />\n        )}\n        keyExtractor={(item) => item?._id}\n        inverted={true}\n      />\n      <View\n        style={{\n          flexDirection: \"row\",\n          backgroundColor: \"white\",\n          paddingVertical: 8,\n          paddingHorizontal: 16,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n        }}\n      >\n        <TextInput\n          style={{\n            height: 40,\n            flex: 1,\n          }}\n          onChangeText={(text) => setNewMessage(text)}\n          value={newMessage}\n          multiline\n          placeholder=\"Ecrivez votre message ici.\"\n        />\n        <Button\n          icon={\n            <Icon\n              name=\"send\"\n              size={20}\n              color={newMessage ? theme.colors.primary : theme.colors.grey2}\n            />\n          }\n          disabled={!newMessage}\n          type=\"clear\"\n          onPress={() => onSendMessage()}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    chat: state.chat,\n    auth: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (message) => dispatch(sendMessage(message)),\n    fetchConversation: (conversation_id) =>\n      dispatch(fetchConversation(conversation_id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomScreen);\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport AppNavbar from \"../AppNavbar\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Lobby from \"./MessagesLobbyScreen\";\nimport Room from \"./MessagesRoomScreen\";\nimport _ from \"lodash\";\n\nconst Stack = createStackNavigator();\n\nconst MessagesScreen = ({ navigation }) => {\n  return (\n    <View style={{ flex: 1 }}>\n      <AppNavbar title=\"Messagerie\" navigation={navigation} />\n      <Stack.Navigator initialRouteName=\"Lobby\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"Lobby\"\n          component={Lobby}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Room\"\n          component={Room}\n          options={({ route }) => {\n            const { conversation } = route.params;\n            if (!route.params.title) {\n              let title;\n              if (conversation?.participants?.length > 1) {\n              } else {\n                title =\n                  _.capitalize(conversation?.participants[0]?.firstname) +\n                  \" \" +\n                  _.capitalize(conversation?.participants[0]?.lastname);\n              }\n              return {\n                title,\n                headerStatusBarHeight: 0,\n              };\n            } else {\n              return {\n                title: route.params.title,\n                headerStatusBarHeight: 0,\n              };\n            }\n          }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default MessagesScreen;\n","import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { View, Image } from \"react-native\";\nimport { Input, Button, Icon, ThemeContext } from \"react-native-elements\";\nimport { logIn } from \"../../actions/authActions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst logInScreen = ({ auth, logIn, navigation }) => {\n  const { theme } = useContext(ThemeContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const handleLogIn = async () => {\n    if (!email) {\n      return setErrors({ email: \"Mél invalide.\" });\n    } else if (!password) {\n      return setErrors({ password: \"Mot de passe invalide.\" });\n    }\n\n    setErrors({});\n    logIn({ email, password });\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        backgroundColor: \"white\",\n      }}\n    >\n      <LinearGradient\n        colors={[theme.colors.primary, theme.colors.secondary]}\n        start={[0.25, 1]}\n        end={[0, 0]}\n        style={{\n          flexDirection: \"row\",\n          marginBottom: 20,\n          height: 150,\n          width: 150,\n          borderRadius: 100,\n        }}\n      >\n        <Image\n          source={require(\"../../assets/logo.png\")}\n          style={{\n            height: 150,\n            width: 150,\n            borderRadius: 100,\n          }}\n        />\n      </LinearGradient>\n      <Input\n        placeholder=\"Email\"\n        leftIcon={<Icon name=\"email\" type=\"material-community\" />}\n        value={email}\n        onChangeText={(value) => setEmail(value)}\n        label=\"Email\"\n        errorStyle={{ color: \"red\" }}\n        errorMessage={errors.email}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={<Icon name=\"lock\" />}\n        label=\"Mot de passe\"\n        secureTextEntry\n        value={password}\n        containerStyle={{ marginBottom: 30, marginTop: 8 }}\n        onChangeText={(value) => setPassword(value)}\n        errorStyle={{ color: \"red\" }}\n        errorMessage={errors.password}\n      />\n      <Button\n        title=\"Se connecter\"\n        onPress={handleLogIn}\n        loading={auth.isLoggingIn}\n        containerStyle={{ marginBottom: 20, marginTop: 8 }}\n      />\n      <Button\n        title=\"Nouveau? Je m'enregistre.\"\n        type=\"clear\"\n        onPress={() => navigation.navigate(\"SignUp\")}\n        containerStyle={{ marginBottom: 30 }}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logIn: (credentials) => dispatch(logIn(credentials)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(logInScreen);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { View } from \"react-native\";\nimport { Input, Button, Icon } from \"react-native-elements\";\nimport { signUp } from \"../../actions/authActions\";\n\nconst SignUpScreen = ({ signUp, auth }) => {\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const handleSignUp = async () => {\n    if (!firstname) {\n      return setErrors({ firstname: \"Prénom manquant.\" });\n    } else if (!lastname) {\n      return setErrors({ lastname: \"Nom manquant.\" });\n    } else if (!email) {\n      return setErrors({ mail: \"Mél manquant.\" });\n    } else if (password.length < 8 === true) {\n      return setErrors({ password: \"Mot de passe manquant.\" });\n    } else if (password !== confirmation) {\n      return setErrors({\n        confirmation: \"Veuillez retaper la confirmation de votre mot de passe.\",\n      });\n    }\n    setErrors({});\n    signUp({ email, password, firstname, lastname });\n  };\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n      }}\n    >\n      <Input\n        placeholder=\"Prénom\"\n        value={firstname}\n        onChangeText={(value) => setFirstname(value)}\n        label=\"Prénom\"\n        errorMessage={errors.firstname}\n      />\n      <Input\n        placeholder=\"Nom\"\n        value={lastname}\n        onChangeText={(value) => setLastname(value)}\n        label=\"Nom\"\n        errorMessage={errors.lastname}\n      />\n      <Input\n        placeholder=\"Email\"\n        leftIcon={<Icon name=\"email\" type=\"material-community\" />}\n        value={email}\n        onChangeText={(value) => setEmail(value)}\n        label=\"Email\"\n        errorMessage={errors.email}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={<Icon name=\"lock\" />}\n        label=\"Mot de passe\"\n        secureTextEntry\n        value={password}\n        onChangeText={(value) => setPassword(value)}\n        errorMessage={errors.password}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={\n          <Icon\n            name={\n              confirmation !== password || password.length < 8\n                ? \"close\"\n                : \"check\"\n            }\n            color={\n              confirmation !== password || password.length < 8 ? \"red\" : \"green\"\n            }\n          />\n        }\n        label=\"Confirmation\"\n        secureTextEntry\n        value={confirmation}\n        leftIconContainerStyle={{ marginRight: 12 }}\n        containerStyle={{ marginBottom: 40, marginTop: 8 }}\n        onChangeText={(value) => setConfirmation(value)}\n        errorMessage={errors.confirmation}\n      />\n      <Button\n        title=\"S'inscrire\"\n        onPress={handleSignUp}\n        loading={auth.isSigningUp}\n        containerStyle={{ marginBottom: 20, marginTop: 8 }}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (credentials) => dispatch(signUp(credentials)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpScreen);\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport LogInScreen from \"./LogInScreen\";\nimport SignUpScreen from \"./SignUpScreen\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nconst Stack = createStackNavigator();\n\nconst AuthNavigator = () => {\n  return (\n    <View style={{ flex: 1 }}>\n      <Stack.Navigator initialRouteName=\"LogIn\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"LogIn\"\n          component={LogInScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"SignUp\"\n          component={SignUpScreen}\n          options={{\n            title: \"S'inscrire\"\n          }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default AuthNavigator;\n","import React, { useContext, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Text, View, Dimensions, TextInput } from \"react-native\";\nimport { Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { resetOverlay } from \"../actions/overlayAction\";\nimport * as RootNavigation from \"../RootNavigation.js\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nconst Notifier = ({ notification, theme }) => {\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      <Icon\n        containerStyle={{ marginBottom: 8 }}\n        size={30}\n        name={\n          notification.variant === \"success\"\n            ? \"check-circle-outline\"\n            : notification.variant === \"warning\"\n            ? \"alert-circle-outline\"\n            : notification.variant === \"error\"\n            ? \"close-circle-outline\"\n            : notification.icon\n        }\n        color={\n          notification.variant === \"success\"\n            ? \"green\"\n            : notification.variant === \"warning\"\n            ? \"yellow\"\n            : notification.variant === \"error\"\n            ? \"red\"\n            : notification.variant === \"error\"\n            ? \"blue\"\n            : theme.colors.grey1\n        }\n      />\n      {notification.message && (\n        <Text style={{ fontSize: 14 }}>{notification.message}</Text>\n      )}\n    </View>\n  );\n};\n\nconst InputForm = ({ form, dispatchRedirectReset, theme, dispatch }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          marginTop: 8,\n        }}\n      >\n        {form.message && <Text style={{ fontSize: 14 }}>{form.message}</Text>}\n      </View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"stretch\",\n          marginTop: 8,\n        }}\n      >\n        <TextInput\n          value={inputValue}\n          multiline\n          placeholder=\"Ecrivez ici.\"\n          placeholderTextColor=\"grey\"\n          onChangeText={(text) => setInputValue(text)}\n          style={{\n            backgroundColor: theme.colors.grey5,\n            borderColor: theme.colors.grey4,\n            borderWidth: 1,\n            borderRadius: 5,\n            height: 60,\n            paddingHorizontal: 4,\n            paddingVertical: 4,\n            flex: 1,\n          }}\n          textAlignVertical=\"top\"\n        />\n        <Button\n          buttonStyle={{\n            height: 60,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          icon={\n            <Icon\n              name=\"send\"\n              size={20}\n              color={inputValue ? theme.colors.primary : theme.colors.grey2}\n            />\n          }\n          disabled={!inputValue}\n          type=\"clear\"\n          onPress={async () => {\n            await dispatch(\n              form.action({\n                [form.inputName]: inputValue,\n                ...form.actionParams,\n              })\n            );\n            dispatchRedirectReset();\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst Menu = ({ menu, dispatchRedirectReset, dispatch }) => {\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      {menu.buttons?.map((button, i) => {\n        return (\n          <Button\n            title={button.title}\n            key={i}\n            containerStyle={{ height: 30 }}\n            onPress={async () => {\n              await dispatch(button.action(...button.actionParams));\n              dispatchRedirectReset();\n            }}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nconst CustomOverlay = () => {\n  const overlay = useSelector((state) => state.overlay);\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  if (overlay.show === false) return null;\n\n  const dispatchRedirectReset = () => {\n    typeof overlay.dispatchCallback === \"function\" &&\n      dispatch(overlay.dispatchCallback());\n    overlay.redirect && RootNavigation.navigate(overlay.redirect, {});\n    dispatch(resetOverlay());\n  };\n\n  overlay.timeout &&\n    setTimeout(() => {\n      dispatchRedirectReset();\n    }, overlay.timeout);\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        height: Dimensions.get(\"window\").height,\n        width: Dimensions.get(\"window\").width,\n        backgroundColor: theme.colors.grey6,\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\",\n      }}\n    >\n      <TouchableOpacity\n        containerStyle={{ flex: 1, minHeight: 12 }}\n        style={{\n          flex: 1,\n          minHeight: 12,\n        }}\n        onPress={() => {\n          overlay.notification\n            ? dispatchRedirectReset()\n            : dispatch(resetOverlay());\n        }}\n      />\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minWidth: 12 }}\n          style={{\n            flex: 1,\n            minWidth: 12,\n          }}\n          onPress={() => {\n            overlay.notification\n              ? dispatchRedirectReset()\n              : dispatch(resetOverlay());\n          }}\n        />\n        {overlay.notification && (\n          <Notifier\n            notification={overlay.notification}\n            dispatchRedirectReset={dispatchRedirectReset}\n            theme={theme}\n          />\n        )}\n        {overlay.form && (\n          <InputForm\n            form={overlay.form}\n            dispatchRedirectReset={dispatchRedirectReset}\n            dispatch={dispatch}\n            theme={theme}\n          />\n        )}\n        {overlay.menu && (\n          <Menu\n            menu={overlay.menu}\n            dispatchRedirectReset={dispatchRedirectReset}\n            dispatch={dispatch}\n          />\n        )}\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minWidth: 12 }}\n          style={{\n            flex: 1,\n            minWidth: 12,\n          }}\n          onPress={() => {\n            overlay.notification\n              ? dispatchRedirectReset()\n              : dispatch(resetOverlay());\n          }}\n        />\n      </View>\n      <TouchableOpacity\n        containerStyle={{ flex: 1, minHeight: 12 }}\n        style={{\n          flex: 1,\n          minHeight: 12,\n        }}\n        onPress={() => {\n          overlay.notification\n            ? dispatchRedirectReset()\n            : dispatch(resetOverlay());\n        }}\n      />\n    </View>\n  );\n};\n\nexport default CustomOverlay;\n","import React from \"react\";\nimport \"react-native-gesture-handler\";\nimport { Provider, useSelector, shallowEqual, useDispatch } from \"react-redux\";\nimport { View, SafeAreaView, Platform, StatusBar } from \"react-native\";\nimport { store, persistor } from \"./store/index\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { ThemeProvider, Icon } from \"react-native-elements\";\nimport MyJobs from \"./components/MyJobs\";\nimport Jobs from \"./components/Jobs\";\nimport Profile from \"./components/Profile\";\nimport People from \"./components/People\";\nimport Messages from \"./components/Messages\";\nimport Auth from \"./components/Auth\";\nimport CustomOverlay from \"./components/CustomOverlay\";\nimport theme from \"./Theme.json\";\nimport { navigationRef, isMountedRef } from \"./RootNavigation\";\nimport { verifyToken } from \"./actions/authActions\";\n\nconst BottomTab = createBottomTabNavigator();\nconst Drawer = createDrawerNavigator();\n\nconst MainStack = () => {\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"People\"\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          switch (route.name) {\n            case \"Home\":\n              iconName = \"home\";\n              break;\n            case \"Jobs\":\n              iconName = \"briefcase\";\n              break;\n            case \"People\":\n              iconName = \"account-group\";\n              break;\n            case \"Messages\":\n              iconName = \"forum\";\n              break;\n            default:\n              break;\n          }\n\n          return <Icon name={iconName} size={size} color={color} />;\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: theme.colors.primary,\n        inactiveTintColor: \"gray\",\n      }}\n    >\n      <BottomTab.Screen\n        name=\"People\"\n        component={People}\n        options={{ title: \"Annuaire\" }}\n      />\n      <BottomTab.Screen\n        name=\"Jobs\"\n        component={Jobs}\n        options={{ title: \"Emplois\" }}\n      />\n      <BottomTab.Screen\n        name=\"Messages\"\n        component={Messages}\n        options={{ title: \"Messages\" }}\n      />\n    </BottomTab.Navigator>\n  );\n};\n\nconst AppStack = () => {\n  const dispatch = useDispatch();\n\n  const userToken = useSelector((state) => state.auth.token, shallowEqual);\n  React.useEffect(() => {\n    const bootstrapAsync = async () => {\n      if (userToken !== null) {\n        dispatch(verifyToken());\n      }\n    };\n    bootstrapAsync();\n  }, []);\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        maxWidth: 500,\n      }}\n    >\n      {userToken ? (\n        <Drawer.Navigator initialRouteName=\"Main\" headerMode=\"screen\">\n          <Drawer.Screen\n            name=\"Main\"\n            component={MainStack}\n            options={{ title: \"Accueil\" }}\n          />\n          <Drawer.Screen\n            name=\"Profile\"\n            component={Profile}\n            options={{ title: \"Mon profil\" }}\n          />\n          <Drawer.Screen\n            name=\"MyJobs\"\n            component={MyJobs}\n            options={{ title: \"Mes offres d'emplois\" }}\n          />\n        </Drawer.Navigator>\n      ) : (\n        <Auth />\n      )}\n    </View>\n  );\n};\n\nconst App = () => {\n  React.useEffect(() => {\n    isMountedRef.current = true;\n    return () => (isMountedRef.current = false);\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <SafeAreaView\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            {Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />}\n            <NavigationContainer ref={navigationRef}>\n              <AppStack />\n              <CustomOverlay />\n            </NavigationContainer>\n          </SafeAreaView>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { registerRootComponent } from \"expo\";\n\nimport App from \"./src/App\";\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}