{"version":3,"sources":["src/store/reducers/authReducer.js","src/store/reducers/usersReducer.js","src/store/reducers/overlayReducer.js","src/store/reducers/jobsReducer.js","src/store/reducers/chatReducer.js","src/store/reducers/index.js","src/config.js","src/actions/overlayAction.js","src/store/reduxMiddlewares.js","src/store/index.js","src/RootNavigation.js","src/components/AppNavbar.js","src/actions/authActions.js","src/components/MyJobs/MyJobsReadScreen.js","src/actions/jobsActions.js","src/components/MyJobs/MyJobsEditScreen.js","src/components/MyJobs/index.js","src/components/Jobs/JobsListScreen.js","src/components/Jobs/JobsReadScreen.js","src/components/Jobs/JobsPostScreen.js","src/components/Jobs/index.js","src/actions/filesActions.js","src/components/Profile/ProfileReadScreen.js","src/components/Profile/ProfileEditScreen.js","src/components/Profile/index.js","src/components/People/PeopleListScreen.js","src/actions/usersActions.js","src/actions/chatActions.js","src/components/People/PeopleReadScreen.js","src/components/People/index.js","src/components/Messages/MessagesLobbyScreen.js","src/components/Messages/MessagesRoomScreen.js","src/components/Messages/index.js","src/components/Auth/LogInScreen.js","src/components/Auth/SignUpScreen.js","src/components/Auth/index.js","src/components/CustomOverlay.js","src/App.js","src/useLinking.js","web-build/register-service-worker.js","node_modules/moment/locale sync /^/.//.*$","src/assets/images/logo.png"],"names":["initialState","isLoggingIn","isLoggingOut","isSigningUp","isLoggedIn","isDeletingAccount","loggedInAt","user","userInfoUpdatedAt","token","errors","users","isFetching","lastUpdatedAt","isLoaded","notification","form","show","timeout","jobs","conversations","conversationsIds","interlocutorsIds","isFetchingConversations","isFetchingConversation","combineReducers","auth","state","action","type","data","isloggingOut","isUpdatingUser","isUpdatingPassword","isUpdatingJob","privateConversations","conversation_id","conversation","_id","interlocutor_id","message","sender","recipient","tokenVerifiedAt","receivedAt","job","updatedUser","overlay","payload","isDeleting","chat","filter","c","i","map","indexOf","messages","lastMessage","conv","apiConfig","baseUrl","showOverlay","menu","callbacks","redirect","persistConfig","key","storage","AsyncStorage","blacklist","persistedReducer","persistReducer","rootReducer","middlewares","thunk","store","next","console","log","https","substring","includes","axios","create","baseURL","headers","accept","Authorization","getState","Promise","resolve","reject","method","get","route","post","delete","patch","then","res","successNotification","dispatch","variant","Date","catch","err","errorNotification","response","forceReconnect","error","socket","io","replace","forceNode","transportOptions","polling","extraHeaders","authorization","on","emit","event","disconnect","socketMiddleware","Platform","OS","push","logger","createStore","applyMiddleware","persistor","persistStore","isMountedRef","React","navigationRef","navigate","name","params","current","connect","logOut","navigation","leftButton","title","noRightButton","theme","useContext","ThemeContext","LinearGradient","colors","primary","secondary","start","end","style","flexDirection","justifyContent","alignItems","paddingTop","Constants","statusBarHeight","paddingHorizontal","paddingBottom","onPress","openDrawer","color","View","Text","fontSize","textAlign","Item","item","TouchableOpacity","id","marginVertical","marginHorizontal","borderBottomWidth","borderBottomColor","grey4","paddingVertical","flex","textAlignVertical","fontWeight","jobTitle","employmentType","size","marginStart","organisation","_","capitalize","city","moment","publishedAt","locale","fromNow","fetchMyJobs","useEffect","backgroundColor","FlatList","renderItem","keyExtractor","updateJob","deleteJob","useState","deleting","setDeleting","updating","setUpdating","setEmploymentType","asap","setAsap","setOrganisation","setCity","salary","setSalary","setJobTitle","jobDesc","setJobDesc","minExp","setMinExp","contact","setContact","setErrors","onEditJob","alignContent","ScrollView","label","placeholder","value","onChangeText","errorMessage","multiline","inputStyle","height","keyboardType","showSoftInputOnFocus","marginBottom","display","grey3","paddingLeft","Switch","trackColor","false","true","primarySoft","thumbColor","grey2","onValueChange","loading","buttonStyle","a","async","Stack","createStackNavigator","MyJobsScreen","Navigator","initialRouteName","headerMode","Screen","component","Read","options","headerShown","Edit","fetchJobs","refreshing","setRefreshing","onRefresh","useCallback","borderRadius","shadowOffset","width","shadowColor","shadowOpacity","elevation","refreshControl","RefreshControl","ActivityIndicator","containerStyle","position","bottom","left","icon","marginTop","PostScreen","useDispatch","uploading","setUploading","filled","disabled","JobsScreen","JobsListScreen","JobsReadScreen","headerStatusBarHeight","JobsPostScreen","dataURLtoBlob","dataurl","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","Blob","uploadFile","blob","bucketName","formData","FormData","append","ReadProfileScreen","showAvatarForm","setShowAvatarForm","useSelector","grey5","firstname","lastname","professor","administration","avatar","borderColor","borderWidth","source","uri","charAt","concat","toUpperCase","marginLeft","ImagePicker","allowsEditing","file","cancelled","fetch","selectPicture","primaryLight","grey0","fileId","promo","marginEnd","description","email","updateUser","deleteAccount","password","updateUserPassword","newPassword","desc","setDesc","setEmail","setPromo","alumni","setAlumni","setProfessor","setAdministration","setPassword","confirmation","setConfirmation","passwordError","setPasswordError","setNewPassword","showEditPasswordForm","setShowEditPasswordForm","showDeleteAccountForm","setShowDeleteAccountForm","showEditAccountInfoForm","setShowEditAccountInfoForm","onEditProfile","text","leftIcon","numberOfLines","secureTextEntry","leftIconContainerStyle","marginRight","ProfileScreen","EditProfileScreen","filename","PeopleScreen","startPrivateConversation","sentAt","fullname","screen","inputName","actionParams","PeopleListScreen","PeopleReadScreen","listParticipants","remove","participants","participant","toString","paddingRight","grey1","ChatLobbyScreen","Message","incoming","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","maxWidth","RoomScreen","newMessage","setNewMessage","fetchConversation","onSendMessage","interlocutors","p","inverted","TextInput","MessagesScreen","Lobby","Room","logIn","credentials","Image","require","errorStyle","signUp","setFirstname","setLastname","code","mail","AuthNavigator","LogInScreen","SignUpScreen","Notifier","InputForm","dispatchRedirectReset","inputValue","setInputValue","placeholderTextColor","Menu","buttons","button","CustomOverlay","forEach","d","RootNavigation","setTimeout","Dimensions","grey6","minHeight","minWidth","BottomTab","createBottomTabNavigator","Drawer","createDrawerNavigator","MainStack","screenOptions","tabBarIcon","focused","iconName","tabBarOptions","activeTintColor","inactiveTintColor","People","Jobs","Messages","DrawerStack","Profile","MyJobs","AppStack","props","isLoadingComplete","setLoadingComplete","initialNavigationState","setInitialNavigationState","getInitialState","useRef","containerRef","useLinking","prefixes","Linking","makeUrl","config","Auth","path","screens","LogIn","SignUp","Root","Main","List","Post","userToken","shallowEqual","SplashScreen","preventAutoHide","warn","hide","skipLoadingScreen","NavigationContainer","ref","App","SafeAreaView","StatusBar","barStyle","navigator","window","addEventListener","serviceWorker","register","scope","info","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","keys","Object","module","exports"],"mappings":"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OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAASsc,EAAeC,GACvB,IAAIjV,EAAKkV,EAAsBD,GAC/B,OAAOE,EAAoBnV,GAE5B,SAASkV,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAE1c,EAAKuc,GAAM,CACpC,IAAII,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEzF,KAAO,mBACHyF,EAEP,OAAO3c,EAAIuc,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAK7c,IAEpBsc,EAAela,QAAUoa,EACzBO,EAAOC,QAAUV,EACjBA,EAAehV,GAAK,K,oBCnRpByV,EAAOC,QAAU,IAA0B,mC","file":"static/js/app.5f0e5700.chunk.js","sourcesContent":["const initialState = {\n  isLoggingIn: false,\n  isLoggingOut: false,\n  isSigningUp: false,\n  isLoggedIn: false,\n  isDeletingAccount: false,\n  loggedInAt: null,\n  user: null,\n  userInfoUpdatedAt: null,\n  token: null,\n  errors: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_AUTH_TOKEN\":\n      return {\n        ...state,\n        ...action.data,\n      };\n    case \"REQUEST_SIGN_UP\":\n      return {\n        ...state,\n        isSigningUp: true,\n      };\n    case \"REQUEST_SIGN_UP\":\n      return {\n        ...state,\n        isSigningUp: true,\n      };\n    case \"REQUEST_LOG_IN\":\n      return {\n        ...state,\n        isLoggingIn: true,\n      };\n    case \"REQUEST_LOG_OUT\":\n      return {\n        ...state,\n        isloggingOut: true,\n      };\n    case \"REQUEST_UPDATE_USER\":\n      return {\n        ...state,\n        isUpdatingUser: true,\n      };\n    case \"REQUEST_DELETE_ACCOUNT\":\n      return {\n        ...state,\n        isDeletingAccount: true,\n      };\n    case \"REQUEST_UPDATE_PASSWORD\":\n      return {\n        ...state,\n        isUpdatingPassword: true,\n      };\n    case \"REQUEST_MY_JOBS\":\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case \"REQUEST_UPDATE_JOB\":\n      return {\n        ...state,\n        isUpdatingJob: true,\n      };\n    case \"REQUEST_CREATE_JOB\":\n      return state;\n    case \"RECEIVE_CONVERSATION\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          privateConversations: [\n            ...state.user.privateConversations,\n            {\n              conversation_id: action.conversation._id,\n              interlocutor_id: action.message.sender,\n            },\n          ],\n        },\n      };\n    case \"PRIVATE_CONVERSATION_ACK\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          privateConversations: [\n            ...state.user.privateConversations,\n            {\n              conversation_id: action.conversation._id,\n              interlocutor_id: action.message.recipient,\n            },\n          ],\n        },\n      };\n\n    // SUCCESS\n    case \"REQUEST_UPDATE_PASSWORD:SUCCESS\":\n      return state;\n    case \"REQUEST_DELETE_ACCOUNT:SUCCESS\":\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    case \"REQUEST_VERIFY_TOKEN:SUCCESS\":\n      return {\n        ...state,\n        tokenVerifiedAt: action.receivedAt,\n      };\n    case \"REQUEST_LOG_IN:SUCCESS\":\n      return {\n        ...state,\n        isLoggingIn: false,\n        isLoggedIn: true,\n        loggedInAt: action.receivedAt,\n        userInfoUpdatedAt: action.receivedAt,\n        ...action.data,\n      };\n    case \"REQUEST_SIGN_UP:SUCCESS\":\n      return {\n        ...state,\n        isSigningUp: false,\n        user: action.user,\n        token: action.token,\n        loggedInAt: action.receivedAt,\n        isLoggedIn: true,\n        userInfoUpdatedAt: action.receivedAt,\n        ...action.data,\n      };\n    case \"REQUEST_UPDATE_USER:SUCCESS\":\n      return {\n        ...state,\n        isUpdatingUser: false,\n        userInfoUpdatedAt: action.receivedAt,\n        ...action.data,\n      };\n    case \"REQUEST_MY_JOBS:SUCCESS\":\n      return {\n        ...state,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        ...action.data,\n      };\n    case \"REQUEST_UPDATE_JOB:SUCCESS\":\n      return {\n        ...state,\n        user: { ...state.user, jobs: action.data.jobs },\n        isUpdatingJob: false,\n      };\n    case \"REQUEST_CREATE_JOB:SUCCESS\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          jobs: [action.data.job, ...state.user.jobs],\n        },\n      };\n    case \"REQUEST_DELETE_FILE:SUCCESS\":\n    case \"REQUEST_UPLOAD_FILE:SUCCESS\":\n      return {\n        ...state,\n        user: action.data.updatedUser,\n      };\n\n    // ERRORS\n\n    case \"REQUEST_VERIFY_TOKEN:ERROR\":\n      return initialState;\n    case \"REQUEST_MY_JOBS:ERROR\":\n    case \"REQUEST_UPDATE_USER:ERROR\":\n    case \"REQUEST_UPDATE_PASSWORD:ERROR\":\n    case \"REQUEST_LOG_IN:ERROR\":\n    case \"REQUEST_SIGN_UP:ERROR\":\n    case \"REQUEST_UPDATE_JOB:ERROR\":\n    case \"REQUEST_CREATE_JOB:ERROR\":\n      return {\n        ...state,\n        errors: [...state.errors, action],\n      };\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  users: [],\n  isFetching: false,\n  lastUpdatedAt: null,\n  isLoaded: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_USERS\":\n      return {\n        ...state,\n        isFetching: true\n      };\n    case \"REQUEST_USERS:SUCCESS\":\n      return {\n        ...action.data,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true\n      };\n    case \"REQUEST_USERS:ERROR\":\n      return {\n        ...action.data,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true\n      };\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  notification: null,\n  form: null,\n  show: false,\n  timeout: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"SHOW_OVERLAY\":\n      return {\n        ...action.payload,\n        show: true,\n      };\n    case \"ASK_USER_INPUT\":\n      return {\n        form: action.form,\n        show: true,\n      };\n    case \"RESET_OVERLAY\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  jobs: [],\n  isFetching: false,\n  lastUpdatedAt: null,\n  isLoaded: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_JOBS\":\n      return {\n        ...state,\n        isFetching: true\n      };\n    case \"REQUEST_JOBS:SUCCESS\":\n      return {\n        ...state,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        ...action.data\n      };\n    case \"REQUEST_JOBS:ERROR\":\n      return {\n        ...state,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true\n      };\n    case \"REQUEST_DELETE_JOB\":\n      return {\n        ...state,\n        isDeleting: true\n      };\n    case \"REQUEST_DELETE_JOB:SUCCESS\":\n      return {\n        ...state,\n        isDeleting: false,\n        lastUpdatedAt: action.receivedAt\n      };\n    case \"REQUEST_CREATE_JOB:SUCCESS\":\n      return {\n        ...state,\n        jobs: [action.data.job, ...state.jobs]\n      };\n    case \"REQUEST_DELETE_JOB:ERROR\":\n      return {\n        ...state,\n        isFetchingConversations: false\n      };\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  conversations: [],\n  conversationsIds: [],\n  interlocutorsIds: [],\n  lastUpdatedAt: null,\n  isLoaded: false,\n  isFetchingConversations: false,\n  isFetchingConversation: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_CONVERSATIONS:SUCCESS\":\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        isFetchingConversations: false,\n        ...action.data,\n      };\n    case \"REQUEST_CONVERSATION:SUCCESS\":\n      return {\n        ...state,\n        conversations: [\n          action.data,\n          ...state.conversations.filter((c) => c._id !== action.data._id),\n        ],\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n      };\n    case \"PRIVATE_CONVERSATION_ACK\":\n    case \"RECEIVE_NEW_CONVERSATION\":\n      return {\n        ...state,\n        conversations: [action.conversation, ...state.conversations],\n        lastUpdatedAt: action.receivedAt,\n      };\n    case \"PRIVATE_MESSAGE_ACK\":\n    case \"RECEIVE_PRIVATE_MESSAGE\":\n      let i = state.conversations\n        .map(function (c) {\n          return c._id;\n        })\n        .indexOf(action.message.conversation_id);\n\n      if (state.conversations[i].messages) {\n        return {\n          ...state,\n          lastUpdatedAt: action.receivedAt,\n          conversations: [\n            {\n              ...state.conversations[i],\n              lastMessage: action.message,\n              messages: [action.message, ...state.conversations[i].messages],\n            },\n            ...state.conversations.filter(\n              (conv) => conv._id !== action.message.conversation_id\n            ),\n          ],\n          isLoaded: true,\n        };\n      } else {\n        return {\n          ...state,\n          lastUpdatedAt: action.receivedAt,\n          conversations: [\n            {\n              ...state.conversations[i],\n              lastMessage: action.message,\n              messages: [action.message],\n            },\n            ...state.conversations.filter(\n              (conv) => conv._id !== action.message.conversation_id\n            ),\n          ],\n          isLoaded: true,\n        };\n      }\n\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport usersReducer from \"./usersReducer\";\nimport overlayReducer from \"./overlayReducer\";\nimport jobsReducer from \"./jobsReducer\";\nimport chatReducer from \"./chatReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  overlay: overlayReducer,\n  jobs: jobsReducer,\n  users: usersReducer,\n  chat: chatReducer,\n});\n","export const apiConfig = {\n  baseUrl: \"https://siee-gate-test.herokuapp.com/api/\",\n};\n","export const showOverlay = ({\n  notification,\n  form,\n  menu,\n  timeout,\n  callbacks,\n  redirect,\n}) => {\n  return {\n    type: \"SHOW_OVERLAY\",\n    payload: {\n      notification,\n      form,\n      menu,\n      timeout,\n      callbacks,\n      redirect,\n    },\n  };\n};\n\nexport const resetOverlay = () => {\n  return {\n    type: \"RESET_OVERLAY\",\n  };\n};\n","import io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { apiConfig } from \"../config\";\nimport { showOverlay } from \"../actions/overlayAction\";\n\nexport const devMiddleware = (store) => (next) => (action) => {\n  console.log(action.type);\n  return next(action);\n};\n\nexport const socketMiddleware = () => {\n  let socket;\n  return (store) => (next) => (action) => {\n    if (!socket && store.getState().auth.isLoggedIn) {\n      console.log(\"socket somehow disconnected\");\n    }\n    if (\n      action.type === \"REQUEST_LOG_IN:SUCCESS\" ||\n      action.type === \"REQUEST_SIGN_UP:SUCCESS\" ||\n      action.type === \"REQUEST_VERIFY_TOKEN:SUCCESS\"\n    ) {\n      const { token } = action.data;\n      socket = io(apiConfig.baseUrl.replace(\"/api/\", \"\"), {\n        forceNode: true,\n        transportOptions: {\n          polling: {\n            extraHeaders: {\n              \"Access-Control-Allow-Origin\": \"*\",\n              authorization: token,\n            },\n          },\n        },\n      });\n      socket.on(\"connected\", (data) => {\n        console.log(\"Socket connected\");\n      });\n      socket.on(\"unauthorized\", (data) => {\n        console.log(\"Socket disconnected\");\n      });\n      socket.on(\"authenticated\", (data) => {\n        console.log(\"Socket authenticated\");\n      });\n      socket.on(\"private-conversation\", (data) => {\n        store.dispatch({\n          type: \"RECEIVE_PRIVATE_CONVERSATION\",\n          ...data,\n          receivedAt: new Date(),\n        });\n      });\n      socket.on(\"private-conversation-ack\", (data) => {\n        store.dispatch({\n          type: \"PRIVATE_CONVERSATION_ACK\",\n          ...data,\n          receivedAt: new Date(),\n        });\n      });\n      socket.on(\"private-message\", (data) => {\n        store.dispatch({\n          type: \"RECEIVE_PRIVATE_MESSAGE\",\n          ...data,\n          receivedAt: new Date(),\n        });\n      });\n      socket.on(\"private-message-ack\", (data) => {\n        store.dispatch({\n          type: \"PRIVATE_MESSAGE_ACK\",\n          ...data,\n          receivedAt: new Date(),\n        });\n      });\n    }\n    if (action.type?.substring(0, 6) === \"SOCKET\") {\n      socket.emit(action.event, action.payload);\n    }\n    if (action.type === \"REQUEST_LOG_OUT:SUCCESS\") {\n      socket.disconnect();\n      console.log(\"socket disconnected\");\n    }\n\n    return next(action);\n  };\n};\n\nexport const axiosMiddleware = (store) => (next) => (action) => {\n  if (\n    action.type?.substring(0, 7) === \"REQUEST\" &&\n    action.type?.includes(\":\") === false\n  ) {\n    let https;\n    if (action.type.substring(0, 14) === \"REQUEST_UPLOAD\") {\n      https = axios.create({\n        baseURL: apiConfig.baseUrl,\n        timeout: 3000,\n        headers: {\n          accept: \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${store.getState().auth.token}`,\n        },\n      });\n    } else {\n      https = axios.create({\n        baseURL: apiConfig.baseUrl,\n        timeout: 3000,\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${store.getState().auth.token}`,\n        },\n      });\n    }\n    const request = new Promise(function (resolve, reject) {\n      let res;\n\n      switch (action.method) {\n        case \"GET\":\n          res = https.get(action.route);\n          return resolve(res);\n        case \"POST\":\n          res = https.post(action.route, action.payload);\n          return resolve(res);\n        case \"DELETE\":\n          res = https.delete(action.route, action.payload);\n          return resolve(res);\n        case \"PATCH\":\n          res = https.patch(action.route, action.payload);\n          return resolve(res);\n        default:\n          return;\n      }\n    });\n    request\n      .then((res) => {\n        if (action.successNotification) {\n          store.dispatch(\n            showOverlay({\n              timeout: 3000,\n              redirect: action.successNotification.redirect,\n              callbacks: action.successNotification.callbacks,\n              notification: {\n                variant: \"success\",\n                message: action.successNotification.message,\n              },\n            })\n          );\n        }\n        return store.dispatch({\n          type: `${action.type}:SUCCESS`,\n          data: res.data,\n          receivedAt: new Date(),\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        if (\n          action.errorNotification ||\n          err.response?.data.forceReconnect === true\n        ) {\n          store.dispatch(\n            showOverlay({\n              timeout: 3000,\n              redirect: err.response?.data.forceReconnect && \"Auth\",\n              callbacks: err.response?.data.forceReconnect && [\n                \"REQUEST_LOG_OUT:SUCCESS\",\n              ],\n              notification: {\n                variant: \"error\",\n                message: err.response?.data.message || \"Cela n'a pas marché...\",\n              },\n            })\n          );\n        }\n        return store.dispatch({\n          type: `${action.type}:ERROR`,\n          error: err,\n          receivedAt: new Date(),\n        });\n      });\n\n    return next(action);\n  } else {\n    return next(action);\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\nimport { Platform } from \"react-native\";\nimport {\n  socketMiddleware,\n  axiosMiddleware,\n  devMiddleware,\n} from \"./reduxMiddlewares\";\nimport { AsyncStorage } from \"react-native\";\nimport logger from \"redux-logger\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: AsyncStorage,\n  blacklist: [\"overlay\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middlewares = [thunk, devMiddleware, axiosMiddleware, socketMiddleware()];\n\nif (Platform.OS === \"web\") {\n  middlewares.push(logger);\n}\n\nconst store = createStore(persistedReducer, applyMiddleware(...middlewares));\n\nlet persistor = persistStore(store);\n\nexport { store, persistor };\n","import * as React from \"react\";\nexport const isMountedRef = React.createRef();\n\nexport const navigationRef = React.createRef();\n\nexport function navigate(name, params) {\n  if (isMountedRef.current && navigationRef.current) {\n    navigationRef.current.navigate(name, params);\n  } else {\n  }\n}\nexport function openDrawer() {\n  navigationRef.current?.openDrawer();\n}\n","import React, { useContext } from \"react\";\nimport { Icon, ThemeContext } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport { logOut } from \"../actions/authActions\";\nimport { View, Text, Platform } from \"react-native\";\nimport Constants from \"expo-constants\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { navigate } from \"../RootNavigation\";\n\nconst AppNavbar = ({\n  navigation,\n  leftButton,\n  title,\n  logOut,\n  noRightButton\n}) => {\n  const { theme } = useContext(ThemeContext);\n\n  const LeftButtonComponent = () => {\n    switch (leftButton) {\n      case \"profile\":\n        return (\n          <Icon\n            name=\"menu\"\n            onPress={() => navigation.openDrawer()}\n            color=\"white\"\n          />\n        );\n      case \"back\":\n        return (\n          <Icon\n            name=\"arrow-left\"\n            color=\"white\"\n            onPress={() => navigate(\"Main\")}\n          />\n        );\n      default:\n        return (\n          <Icon\n            name=\"menu\"\n            onPress={() => navigation.openDrawer()}\n            color=\"white\"\n          />\n        );\n    }\n  };\n\n  const CenterComponent = () => {\n    return (\n      <View>\n        <Text\n          style={{\n            color: \"white\",\n            fontSize: 20,\n            textAlign: \"center\"\n          }}\n        >\n          {title}\n        </Text>\n      </View>\n    );\n  };\n\n  const RightComponent = () => {\n    if (noRightButton) {\n      return <View></View>;\n    } else {\n      return (\n        <View>\n          <Icon name=\"logout\" color=\"white\" onPress={() => logOut()} />\n        </View>\n      );\n    }\n  };\n\n  return (\n    <LinearGradient\n      colors={[theme.colors.primary, theme.colors.secondary]}\n      start={[0.25, 1]}\n      end={[0.25, 0]}\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        paddingTop: Platform.OS === \"web\" ? 10 : Constants.statusBarHeight,\n        paddingHorizontal: 10,\n        paddingBottom: 8\n      }}\n    >\n      <LeftButtonComponent />\n      <CenterComponent />\n      <RightComponent />\n    </LinearGradient>\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logOut: () => dispatch(logOut())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavbar);\n","export const logIn = (credentials) => {\n  return {\n    type: \"REQUEST_LOG_IN\",\n    route: \"/auth/login\",\n    payload: credentials,\n    method: \"POST\",\n    errorNotification: true,\n  };\n};\n\nexport const verifyToken = () => {\n  return {\n    type: \"REQUEST_VERIFY_TOKEN\",\n    route: \"auth/token/verify\",\n    method: \"GET\",\n    errorNotification: true,\n  };\n};\n\nexport const signUp = (credentials) => {\n  return {\n    type: \"REQUEST_SIGN_UP\",\n    route: \"/auth/signup\",\n    payload: credentials,\n    method: \"POST\",\n    successNotification: {\n      message: `Bienvenue ! Rendez-vous à l'onglet \"Mon profil\" pour éditer vos informations.`,\n      variant: \"success\",\n      redirect: \"Root\",\n    },\n    errorNotification: true,\n  };\n};\n\nexport const logOut = () => {\n  return {\n    type: \"REQUEST_LOG_OUT\",\n    route: \"/auth/logout\",\n    method: \"GET\",\n    errorNotification: true,\n    successNotification: {\n      message: \"Au revoir !\",\n      variant: \"success\",\n      redirect: \"Auth\",\n    },\n  };\n};\n\nexport const updateUser = (user) => {\n  return {\n    type: \"REQUEST_UPDATE_USER\",\n    method: \"PATCH\",\n    route: \"auth\",\n    payload: user,\n    successNotification: {\n      message: \"Vos informations ont été mises à jour.\",\n      variant: \"success\",\n      redirect: \"Read\",\n    },\n    errorNotification: true,\n  };\n};\n\nexport const updateUserPassword = (password, newPassword) => {\n  return {\n    type: \"REQUEST_UPDATE_USER\",\n    method: \"PATCH\",\n    route: \"auth/password\",\n    payload: { password, newPassword },\n    successNotification: {\n      message: \"Votre mot de passe à été mis à jour.\",\n      variant: \"success\",\n      redirect: \"Read\",\n    },\n    errorNotification: true,\n  };\n};\n\nexport const deleteAccount = () => {\n  return {\n    type: \"REQUEST_DELETE_ACCOUNT\",\n    method: \"DELETE\",\n    route: \"auth\",\n    successNotification: {\n      message: \"Votre compte a bien été supprimé.\",\n      redirect: \"Auth\",\n    },\n    errorNotification: true,\n  };\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { View, Text, FlatList, TouchableOpacity } from \"react-native\";\nimport { Icon, ThemeContext } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport AppNavbar from \"../AppNavbar\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchMyJobs } from \"../../actions/jobsActions\";\n\nconst Item = ({ item, navigation }) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <TouchableOpacity\n      onPress={() => navigation.navigate(\"Edit\", { job: item, id: item._id })}\n    >\n      <View\n        style={{\n          paddingTop: 8,\n          paddingHorizontal: 20,\n          marginVertical: 4,\n          marginHorizontal: 0,\n          borderBottomWidth: 1,\n          borderBottomColor: theme.colors.grey4,\n          paddingVertical: 12,\n          flexDirection: \"row\",\n        }}\n      >\n        <View style={{ flex: 1 }}>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16,\n            }}\n          >\n            {item?.jobTitle} en {item?.employmentType}\n          </Text>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              {item?.organisation}\n            </Text>\n          </View>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\", flex: 1 }}>\n            <Icon name=\"map-marker\" size={20} />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {_.capitalize(item?.city)}\n            </Text>\n            <Text\n              color=\"grey\"\n              style={{\n                color: \"grey\",\n                fontSize: 10,\n                textAlignVertical: \"bottom\",\n              }}\n            >\n              {_.capitalize(moment(item?.publishedAt).locale(\"fr\").fromNow())}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst MyJobsScreen = ({ auth, navigation, fetchMyJobs }) => {\n  useEffect(() => {\n    function fetchData() {\n      fetchMyJobs();\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <View style={{ flex: 1, backgroundColor: \"white\" }}>\n      <AppNavbar\n        title=\"Mes offres d'emploi\"\n        navigation={navigation}\n        noRightButton={true}\n        leftButton=\"back\"\n      />\n      <FlatList\n        data={auth?.user.jobs}\n        renderItem={({ item }) => <Item item={item} navigation={navigation} />}\n        keyExtractor={(item) => item?._id}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    jobs: state.jobs,\n    auth: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchMyJobs: () => dispatch(fetchMyJobs()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyJobsScreen);\n","export const createJob = (job) => {\n  return {\n    type: \"REQUEST_CREATE_JOB\",\n    route: \"jobs\",\n    payload: job,\n    method: \"POST\",\n    successNotification: {\n      message: \"Votre offre d'emploi a été créée\",\n      redirect: \"MyJobs\",\n    },\n    errorNotification: true,\n  };\n};\n\nexport const fetchJobs = () => {\n  return {\n    type: \"REQUEST_JOBS\",\n    route: \"jobs\",\n    method: \"GET\",\n  };\n};\n\nexport const fetchMyJobs = () => {\n  return {\n    type: \"REQUEST_MY_JOBS\",\n    route: \"jobs/me\",\n    method: \"GET\",\n  };\n};\n\nexport const updateJob = (job) => {\n  return {\n    type: \"REQUEST_UPDATE_JOB\",\n    method: \"PATCH\",\n    route: `jobs/${job._id}`,\n    payload: job,\n    successNotification: {\n      message: \"Votre offre d'emploi a été mise à jour.\",\n      variant: \"success\",\n      redirect: \"MyJobs\",\n      timeout: 1000,\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000,\n    },\n  };\n};\n\nexport const deleteJob = (id) => {\n  return {\n    type: \"REQUEST_DELETE_JOB\",\n    method: \"DELETE\",\n    route: `jobs/${id}`,\n    successNotification: {\n      message: \"Offre d'emploi supprimée.\",\n      variant: \"success\",\n      redirect: \"MyJobs\",\n      timeout: 1000,\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000,\n    },\n  };\n};\n","import React, { useContext, useState } from \"react\";\nimport { View, Text, Switch, ScrollView } from \"react-native\";\nimport { Input, Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport { updateJob, deleteJob, fetchMyJobs } from \"../../actions/jobsActions\";\n\nconst MyJobsEditScreen = ({\n  updateJob,\n  deleteJob,\n  route,\n  fetchMyJobs,\n  navigation\n}) => {\n  const [deleting, setDeleting] = useState(false);\n  const [updating, setUpdating] = useState(false);\n  const { job } = route.params;\n  const { theme } = useContext(ThemeContext);\n  const [employmentType, setEmploymentType] = useState(job.employmentType);\n  const [asap, setAsap] = useState(job.asap);\n  const [organisation, setOrganisation] = useState(job.organisation);\n  const [city, setCity] = useState(job.city);\n  const [salary, setSalary] = useState(job.salary);\n  const [jobTitle, setJobTitle] = useState(job.jobTitle);\n  const [jobDesc, setJobDesc] = useState(job.jobDesc);\n  const [minExp, setMinExp] = useState(`${job.minExp}`);\n  const [contact, setContact] = useState(job.contact);\n  const [errors, setErrors] = useState({});\n\n  const onEditJob = () => {\n    {\n      if (!employmentType) {\n        return setErrors({\n          employmentType: \"Ce champs est obligatoire.\"\n        });\n      } else if (!organisation) {\n        return setErrors({\n          organisation: \"Ce champs est obligatoire.\"\n        });\n      } else if (!city) {\n        return setErrors({\n          city: \"Ce champs est obligatoire.\"\n        });\n      } else if (!jobDesc) {\n        return setErrors({\n          jobDesc: \"Ce champs est obligatoire.\"\n        });\n      } else if (!jobTitle) {\n        return setErrors({\n          jobTitle: \"Ce champs est obligatoire.\"\n        });\n      } else if (!minExp) {\n        return setErrors({\n          minExp: \"Ce champs est obligatoire.\"\n        });\n      }\n    }\n\n    updateJob({\n      ...job,\n      employmentType,\n      asap,\n      organisation,\n      city,\n      salary,\n      jobDesc,\n      jobTitle,\n      minExp,\n      contact\n    });\n\n    {\n      setAsap(false);\n      setCity();\n      setSalary();\n      setContact();\n      setErrors({});\n      setEmploymentType();\n      setOrganisation();\n      setJobDesc();\n      setJobTitle();\n    }\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\"\n      }}\n    >\n      <ScrollView>\n        <Input\n          label=\"Type de contrat*\"\n          placeholder=\"CDI, CDD, Apprentissage...\"\n          value={employmentType}\n          onChangeText={value => setEmploymentType(value)}\n          errorMessage={errors.employmentType}\n        />\n        <Input\n          label=\"Organisation*\"\n          placeholder=\"Deloitte, Engie, EY...\"\n          value={organisation}\n          onChangeText={value => setOrganisation(value)}\n          errorMessage={errors.organisation}\n        />\n        <Input\n          placeholder=\"Paris, Shanghai, Lyon...\"\n          label=\"Ville*\"\n          value={city}\n          onChangeText={value => setCity(value)}\n          errorMessage={errors.city}\n        />\n        <Input\n          placeholder=\"Auditeur des SI, Pentester junior...\"\n          label=\"Intitulé du poste*\"\n          value={jobTitle}\n          onChangeText={value => setJobTitle(value)}\n          errorMessage={errors.jobTitle}\n        />\n        <Input\n          label=\"Description du poste*\"\n          multiline\n          inputStyle={{ height: 200, textAlignVertical: \"top\" }}\n          placeholder=\"Les missions, les compétences requises, l'employeur...\"\n          value={jobDesc}\n          onChangeText={value => setJobDesc(value)}\n          errorMessage={errors.jobDesc}\n        />\n        <Input\n          label=\"Expérience*\"\n          placeholder=\"Années passées dans un poste similaire\"\n          value={minExp}\n          keyboardType=\"number-pad\"\n          onChangeText={value => setMinExp(value)}\n          errorMessage={errors.minExp}\n        />\n        <Input\n          label=\"Rémunération\"\n          placeholder=\"En €\"\n          keyboardType=\"decimal-pad\"\n          value={salary}\n          onChangeText={value => setSalary(value)}\n          showSoftInputOnFocus={false}\n          errorMessage={errors.salary}\n        />\n        <View\n          style={{\n            marginBottom: 12,\n            flexDirection: \"row\",\n            display: \"flex\",\n            height: 40\n          }}\n        >\n          <Text\n            style={{\n              color: theme.colors.grey3,\n              fontWeight: \"bold\",\n              paddingLeft: 10,\n              fontSize: 16,\n              flex: 1,\n              textAlignVertical: \"center\"\n            }}\n          >\n            Poste à pourvoir dès que possible\n          </Text>\n          <Switch\n            trackColor={{\n              false: theme.colors.grey4,\n              true: theme.colors.primarySoft\n            }}\n            thumbColor={asap ? theme.colors.primary : theme.colors.grey2}\n            value={asap}\n            onValueChange={value => setAsap(value)}\n          />\n        </View>\n        <Input\n          label=\"Contact\"\n          placeholder=\"Email\"\n          value={contact}\n          onChangeText={value => setContact(value)}\n          errorMessage={errors.contact}\n        />\n      </ScrollView>\n      <View style={{ paddingTop: 8 }}>\n        <Button\n          title=\"Valider les changements\"\n          loading={updating}\n          onPress={() => {\n            setUpdating(true);\n            onEditJob();\n            setUpdating(false);\n            fetchMyJobs();\n            navigation.navigate(\"Read\");\n          }}\n          buttonStyle={{ backgroundColor: theme.colors.primary }}\n        />\n        <Button\n          title=\"Supprimer l'offre\"\n          loading={deleting}\n          onPress={async () => {\n            setDeleting(true);\n            await deleteJob(job._id);\n            setDeleting(false);\n            fetchMyJobs();\n            navigation.navigate(\"Read\");\n          }}\n          buttonStyle={{ backgroundColor: theme.colors.error }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { jobs: state.jobs, auth: state.auth };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateJob: job => dispatch(updateJob(job)),\n    deleteJob: id => dispatch(deleteJob(id)),\n    fetchMyJobs: () => dispatch(fetchMyJobs())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyJobsEditScreen);\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Read from \"./MyJobsReadScreen\";\nimport Edit from \"./MyJobsEditScreen\";\n\nconst Stack = createStackNavigator();\n\nconst MyJobsScreen = () => {\n  return (\n    <View style={{ flex: 1 }}>\n      <Stack.Navigator initialRouteName=\"Read\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"Read\"\n          component={Read}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Edit\"\n          component={Edit}\n          options={{ title: \"Modifier\" }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default MyJobsScreen;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport {\n  View,\n  FlatList,\n  Text,\n  RefreshControl,\n  ActivityIndicator,\n} from \"react-native\";\nimport { Icon, Button } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { fetchJobs } from \"../../actions/jobsActions\";\n\nconst Item = ({ item, navigation }) => {\n  return (\n    <TouchableOpacity\n      onPress={() =>\n        navigation.navigate(\"Read\", {\n          job: item,\n          id: item._id,\n        })\n      }\n    >\n      <View\n        style={{\n          paddingTop: 8,\n          paddingHorizontal: 20,\n          marginVertical: 4,\n          marginHorizontal: 0,\n          borderBottomWidth: 1,\n          borderBottomColor: theme.colors.grey4,\n          paddingVertical: 12,\n          flexDirection: \"row\",\n        }}\n      >\n        <View style={{ flex: 1 }}>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16,\n            }}\n          >\n            {item?.jobTitle} en {item?.employmentType}\n          </Text>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              {item?.organisation}\n            </Text>\n          </View>\n          <View style={{ flexDirection: \"row\", flex: 1, alignItems: \"center\" }}>\n            <Icon name=\"map-marker\" size={20} />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {_.capitalize(item?.city)}\n            </Text>\n            <Text\n              color=\"grey\"\n              style={{\n                color: \"grey\",\n                fontSize: 10,\n                textAlignVertical: \"bottom\",\n              }}\n            >\n              {_.capitalize(moment(item?.publishedAt).locale(\"fr\").fromNow())}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst JobsListScreen = ({ navigation, fetchJobs, jobs }) => {\n  const [refreshing, setRefreshing] = useState(false);\n\n  useEffect(() => {\n    function fetchData() {\n      fetchJobs();\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    fetchJobs();\n    setRefreshing(false);\n  }, [refreshing]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {jobs.isLoaded ? (\n        <FlatList\n          style={{\n            borderRadius: 0,\n            shadowOffset: { width: 10, height: 10 },\n            shadowColor: \"black\",\n            shadowOpacity: 0.3,\n            elevation: 2,\n            backgroundColor: \"white\",\n          }}\n          data={jobs.jobs}\n          renderItem={({ item }) => (\n            <Item item={item} navigation={navigation} />\n          )}\n          keyExtractor={(item) => item?._id}\n          refreshControl={\n            <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n          }\n        />\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n      <Button\n        containerStyle={{\n          position: \"absolute\",\n          bottom: 0,\n          left: 10,\n        }}\n        buttonStyle={{\n          borderRadius: 50,\n        }}\n        icon={<Icon name=\"plus\" size={30} color=\"white\" />}\n        onPress={() => navigation.navigate(\"Post\")}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  jobs: state.jobs,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchJobs: () => dispatch(fetchJobs()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobsListScreen);\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { View, Text, ScrollView } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { fetchJobs } from \"../../actions/jobsActions\";\n\nconst JobsReadScreen = ({ route }) => {\n  const { job } = route.params;\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\",\n      }}\n    >\n      <ScrollView\n        style={{\n          flex: 1,\n          paddingHorizontal: 12,\n        }}\n      >\n        <View style={{ alignItems: \"flex-end\" }}>\n          <Text\n            style={{\n              color: \"grey\",\n              fontSize: 12,\n              textAlignVertical: \"bottom\",\n            }}\n          >\n            {_.capitalize(moment(job.publishedAt).locale(\"fr\").fromNow())}\n          </Text>\n        </View>\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Icon name=\"briefcase\" size={25} color=\"grey\" />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginStart: 8,\n              fontSize: 20,\n            }}\n          >\n            {job.organisation}\n          </Text>\n        </View>\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Icon name=\"map-marker\" size={25} color={theme.colors.grey2} />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginStart: 8,\n              fontSize: 20,\n            }}\n          >\n            {_.capitalize(job.city)}\n          </Text>\n        </View>\n        <Text\n          style={{\n            color: theme.colors.grey3,\n            fontWeight: \"bold\",\n            fontSize: 16,\n            marginTop: 8,\n          }}\n        >\n          Description\n        </Text>\n        <Text style={{ marginBottom: 4, textAlign: \"justify\", fontSize: 16 }}>\n          {job.jobDesc}\n        </Text>\n        {job.salary && (\n          <Text>Rémunération à hauteur de {job.salary} brut.</Text>\n        )}\n        {job.asap && (\n          <Text style={{ color: theme.colors.primary }}>\n            Poste à pourvoir dès que possible.\n          </Text>\n        )}\n        <Text\n          style={{\n            color: theme.colors.grey3,\n            fontWeight: \"bold\",\n            fontSize: 16,\n            marginTop: 8,\n          }}\n        >\n          Contact\n        </Text>\n        <Text>{job.contact}</Text>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  jobs: state.jobs,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchJobs: () => dispatch(fetchJobs()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobsReadScreen);\n","import React, { useState, useContext } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { View, Switch, Text, ScrollView } from \"react-native\";\nimport { Input, Button, ThemeContext } from \"react-native-elements\";\nimport AppNavbar from \"../AppNavbar\";\nimport { createJob } from \"../../actions/jobsActions\";\n\nconst PostScreen = ({}) => {\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const [uploading, setUploading] = useState(false);\n\n  const [errors, setErrors] = useState({});\n\n  // Job\n  const [employmentType, setEmploymentType] = useState(\"\");\n  const [asap, setAsap] = useState(false);\n  const [organisation, setOrganisation] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [salary, setSalary] = useState();\n  const [minExp, setMinExp] = useState();\n  const [contact, setContact] = useState(\"\");\n\n  const filled =\n    !city ||\n    !organisation ||\n    !employmentType ||\n    !jobDesc ||\n    !jobTitle ||\n    !contact\n      ? false\n      : true;\n\n  const uploadJobOffer = () => {\n    setUploading(true);\n\n    const jobOffer = {\n      employmentType,\n      asap,\n      organisation,\n      city,\n      salary,\n      jobDesc,\n      jobTitle,\n      minExp,\n      contact,\n    };\n\n    dispatch(createJob(jobOffer));\n    setUploading(false);\n\n    setAsap(false);\n    setCity();\n    setSalary();\n    setContact();\n    setErrors({});\n    setEmploymentType();\n    setOrganisation();\n    setJobDesc();\n    setJobTitle();\n    setUploading(false);\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flex: 1, backgroundColor: \"white\" }}>\n        <ScrollView\n          style={{\n            paddingHorizontal: 12,\n            paddingTop: 20,\n            paddingBottom: 100,\n          }}\n        >\n          <Input\n            label=\"Type de contrat*\"\n            placeholder=\"CDI, CDD, Apprentissage...\"\n            value={employmentType}\n            onChangeText={(value) => setEmploymentType(value)}\n            errorMessage={errors.employmentType}\n          />\n          <Input\n            label=\"Organisation*\"\n            placeholder=\"Deloitte, Engie, EY...\"\n            value={organisation}\n            onChangeText={(value) => setOrganisation(value)}\n            errorMessage={errors.organisation}\n          />\n          <Input\n            placeholder=\"Paris, Shanghai, Lyon...\"\n            label=\"Ville*\"\n            value={city}\n            onChangeText={(value) => setCity(value)}\n            errorMessage={errors.city}\n          />\n          <Input\n            placeholder=\"Auditeur des SI, Pentester junior...\"\n            label=\"Intitulé du poste*\"\n            value={jobTitle}\n            onChangeText={(value) => setJobTitle(value)}\n            errorMessage={errors.jobTitle}\n          />\n          <Input\n            label=\"Description du poste*\"\n            multiline\n            inputStyle={{ height: 200, textAlignVertical: \"top\" }}\n            placeholder=\"Les missions, les compétences requises, l'employeur...\"\n            value={jobDesc}\n            onChangeText={(value) => setJobDesc(value)}\n            errorMessage={errors.jobDesc}\n          />\n          <Input\n            label=\"Expérience\"\n            placeholder=\"Années passées dans un poste similaire\"\n            value={minExp}\n            keyboardType=\"numeric\"\n            onChangeText={(value) => setMinExp(value)}\n            errorMessage={errors.minExp}\n          />\n          <Input\n            label=\"Rémunération\"\n            placeholder=\"En €\"\n            value={salary}\n            onChangeText={(value) => setSalary(value)}\n            showSoftInputOnFocus={false}\n            errorMessage={errors.salary}\n          />\n          <View\n            style={{\n              marginBottom: 12,\n              flexDirection: \"row\",\n              display: \"flex\",\n              height: 40,\n            }}\n          >\n            <Text\n              style={{\n                color: theme.colors.grey3,\n                fontWeight: \"bold\",\n                paddingLeft: 10,\n                fontSize: 16,\n                flex: 1,\n                textAlignVertical: \"center\",\n              }}\n            >\n              Poste à pourvoir dès que possible\n            </Text>\n            <Switch value={asap} onValueChange={(value) => setAsap(value)} />\n          </View>\n          <Input\n            label=\"Contact*\"\n            placeholder=\"Email\"\n            value={contact}\n            onChangeText={(value) => setContact(value)}\n            errorMessage={errors.contact}\n          />\n          <Button\n            title={\n              filled\n                ? \"Poster l'offre d'emploi\"\n                : \"Veuillez remplir tous les champs obligatoires\"\n            }\n            loading={uploading}\n            disabled={!filled}\n            buttonStyle={{ height: 50, marginBottom: 12 }}\n            onPress={() => uploadJobOffer()}\n          />\n          <View style={{ height: 20 }}></View>\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default PostScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport AppNavbar from \"../AppNavbar\";\nimport JobsListScreen from \"./JobsListScreen\";\nimport JobsReadScreen from \"./JobsReadScreen\";\nimport JobsPostScreen from \"./JobsPostScreen\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nconst Stack = createStackNavigator();\n\nconst JobsScreen = ({ navigation }) => {\n  return (\n    <View style={{ flex: 1 }}>\n      <AppNavbar title=\"Emplois\" navigation={navigation} />\n      <Stack.Navigator initialRouteName=\"List\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"List\"\n          component={JobsListScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Read\"\n          component={JobsReadScreen}\n          options={({ route }) => ({\n            title:\n              route.params.job.jobTitle +\n              \" - \" +\n              route.params.job.employmentType,\n            headerStatusBarHeight: 0\n          })}\n        />\n        <Stack.Screen\n          name=\"Post\"\n          component={JobsPostScreen}\n          options={{\n            title: \"Poster une offre d'emploi\",\n            headerStatusBarHeight: 0\n          }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default JobsScreen;\n","export const dataURLtoBlob = (dataurl) => {\n  var arr = dataurl.split(\",\"),\n    mime = arr[0].match(/:(.*?);/)[1],\n    bstr = atob(arr[1]),\n    n = bstr.length,\n    u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new Blob([u8arr], { type: mime });\n};\n\nexport const fetchFile = (bucketName, fileId) => {\n  return {\n    type: \"REQUEST_FILE\",\n    route: `files/${bucketName}/${fileId}`,\n    method: \"GET\",\n  };\n};\n\nexport const deleteFile = (bucketName, fileId) => {\n  return {\n    type: \"REQUEST_DELETE_FILE\",\n    route: `files/${bucketName}/${fileId}`,\n    method: \"DELETE\",\n    successNotification: {\n      message: \"Votre document a bien été supprimé de la base de données.\",\n      variant: \"success\",\n      timeout: 2000,\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000,\n    },\n  };\n};\n\nexport const uploadFile = (blob, bucketName, name) => {\n  let formData = new FormData();\n\n  // if (Platform.OS === \"web\") {\n  formData.append(\"file\", blob);\n  // } else {\n  //   formData.append(\"file\", new File(file.uri));\n  //   //\n  // }\n\n  name && formData.append(\"name\", name);\n\n  return {\n    type: \"REQUEST_UPLOAD_FILE\",\n    route: `files/${bucketName}`,\n    payload: formData,\n    method: \"POST\",\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000,\n    },\n  };\n};\n","import React, { useState, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Avatar,\n  Divider,\n  Icon,\n  Button,\n  ThemeContext,\n} from \"react-native-elements\";\nimport {\n  View,\n  Text,\n  ScrollView,\n  ActivityIndicator,\n  Platform,\n} from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport {\n  uploadFile,\n  deleteFile,\n  dataURLtoBlob,\n} from \"../../actions/filesActions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport _ from \"lodash\";\nimport AppNavbar from \"../AppNavbar\";\n\nconst ReadProfileScreen = ({ navigation }) => {\n  const [showAvatarForm, setShowAvatarForm] = useState(false);\n  const { theme } = useContext(ThemeContext);\n  const { user } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const editAvatar = () => {\n    const selectPicture = async () => {\n      await ImagePicker.requestCameraRollPermissionsAsync();\n\n      const file = await ImagePicker.launchImageLibraryAsync({\n        allowsEditing: true,\n      });\n\n      if (file.cancelled) return;\n\n      if (Platform.OS === \"web\") {\n        let blob = dataURLtoBlob(file.uri);\n        console.log(\"selectPicture -> blob\", blob);\n        dispatch(uploadFile(blob, \"avatars\"));\n      } else {\n        let res = await fetch(file.uri);\n        console.log(\"selectPicture -> res\", res);\n        let blob = await res.blob();\n        console.log(\"selectPicture -> blob\", blob);\n        dispatch(uploadFile(blob, \"avatars\"));\n      }\n    };\n    selectPicture();\n    setShowAvatarForm(false);\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n      }}\n    >\n      <AppNavbar\n        navigation={navigation}\n        title=\"Mon profil\"\n        leftButton=\"back\"\n        noRightButton={true}\n      />\n      {user ? (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"space-between\",\n            backgroundColor: \"white\",\n          }}\n        >\n          <ScrollView\n            style={{\n              paddingTop: 40,\n              flex: 1,\n              paddingHorizontal: 12,\n            }}\n          >\n            <LinearGradient\n              colors={[theme.colors.primary, theme.colors.secondary]}\n              start={[0.25, 1]}\n              end={[0, 0]}\n              style={{\n                flexDirection: \"row\",\n                marginBottom: 20,\n                paddingVertical: 8,\n                paddingHorizontal: 16,\n                borderRadius: 5,\n              }}\n            >\n              <View\n                style={{\n                  flex: 1,\n                  alignContent: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Text style={{ fontSize: 20, color: theme.colors.grey5 }}>\n                  {_.capitalize(user.firstname)}\n                </Text>\n                <Text\n                  style={{ fontSize: 30, color: \"white\", fontWeight: \"bold\" }}\n                >\n                  {_.capitalize(user.lastname)}\n                </Text>\n                {user.professor && (\n                  <Text style={{ color: theme.colors.grey4, paddingLeft: 4 }}>\n                    Professeur\n                  </Text>\n                )}\n                {user.administration && (\n                  <Text style={{ color: theme.colors.grey4, paddingLeft: 4 }}>\n                    Membre du corps administratif\n                  </Text>\n                )}\n              </View>\n              {user.avatar ? (\n                <Avatar\n                  size=\"xlarge\"\n                  containerStyle={{\n                    borderColor: \"white\",\n                    borderWidth: 3,\n                  }}\n                  source={{\n                    uri: `http://localhost:8080/api/files/avatars/${user.avatar}`,\n                  }}\n                  onPress={() => setShowAvatarForm(!showAvatarForm)}\n                />\n              ) : (\n                <Avatar\n                  size=\"xlarge\"\n                  containerStyle={{\n                    borderColor: \"white\",\n                    borderWidth: 3,\n                  }}\n                  title={user.firstname\n                    .charAt(0)\n                    .concat(user.lastname.charAt(0))\n                    .toUpperCase()}\n                  onPress={() => setShowAvatarForm(!showAvatarForm)}\n                />\n              )}\n              <View\n                style={{\n                  marginLeft: -40,\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Button\n                  icon={<Icon name=\"pencil\" color={theme.colors.secondary} />}\n                  onPress={() => editAvatar()}\n                  buttonStyle={{\n                    elevation: 10,\n                    backgroundColor: theme.colors.primaryLight,\n                    width: 40,\n                    height: 40,\n                    borderRadius: 40,\n                  }}\n                />\n                {user.avatar && (\n                  <Button\n                    icon={<Icon name=\"delete\" color={theme.colors.grey4} />}\n                    buttonStyle={{\n                      backgroundColor: theme.colors.grey0,\n                      width: 40,\n                      height: 40,\n                      borderRadius: 40,\n                    }}\n                    onPress={() => dispatch(deleteFile(\"avatars\", user.avatar))}\n                  />\n                )}\n              </View>\n            </LinearGradient>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Icon name=\"briefcase\" size={20} color=\"grey\" />\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  marginHorizontal: 8,\n                  flex: 1,\n                }}\n              >\n                {user.jobTitle} chez {user.organisation}\n              </Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <Icon name=\"school\" size={20} color=\"grey\" />\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  marginHorizontal: 8,\n                  flex: 1,\n                }}\n              >\n                Promotion {user.promo}\n              </Text>\n            </View>\n            <Divider\n              style={{\n                marginVertical: 20,\n                backgroundColor: \"grey\",\n                borderWidth: 1,\n                width: 20,\n              }}\n            />\n            <View style={{ flexDirection: \"row\" }}>\n              <Text style={{ textAlign: \"justify\", flex: 1, marginEnd: 8 }}>\n                {user.description}\n              </Text>\n            </View>\n            <Divider\n              style={{\n                marginVertical: 20,\n                backgroundColor: \"grey\",\n                borderWidth: 1,\n                width: 20,\n              }}\n            />\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Icon name=\"at\" size={20} color=\"grey\" />\n              <Text\n                style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n              >\n                {user.email}\n              </Text>\n            </View>\n          </ScrollView>\n          <View style={{ paddingHorizontal: 20 }}>\n            <Button\n              title=\"Editer\"\n              onPress={() => navigation.navigate(\"Edit\")}\n            />\n          </View>\n        </View>\n      ) : (\n        <View\n          style={{ flex: 1, alignContent: \"center\", justifyContent: \"center\" }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default ReadProfileScreen;\n","import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Button, Input, ThemeContext } from \"react-native-elements\";\nimport { View, ScrollView, Text, TouchableOpacity, Switch } from \"react-native\";\nimport {\n  updateUser,\n  deleteAccount,\n  updateUserPassword,\n} from \"../../actions/authActions\";\n\nconst ProfileEditScreen = ({\n  updateUser,\n  deleteAccount,\n  auth,\n  updateUserPassword,\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const [desc, setDesc] = useState(auth?.user.description);\n  const [email, setEmail] = useState(auth?.user.email);\n  const [jobTitle, setJobTitle] = useState(auth?.user.jobTitle);\n  const [organisation, setOrganisation] = useState(auth?.user.organisation);\n  const [promo, setPromo] = useState(`${auth?.user.promo || \"\"}`);\n  const [alumni, setAlumni] = useState(auth?.user.alumni);\n  const [professor, setProfessor] = useState(auth?.user.professor);\n  const [administration, setAdministration] = useState(\n    auth?.user.administration\n  );\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [showEditPasswordForm, setShowEditPasswordForm] = useState(false);\n  const [showDeleteAccountForm, setShowDeleteAccountForm] = useState(false);\n  const [showEditAccountInfoForm, setShowEditAccountInfoForm] = useState(false);\n\n  const onEditProfile = () => {\n    updateUser({\n      ...auth?.user,\n      description: desc,\n      email,\n      jobTitle,\n      organisation,\n      promo,\n      alumni,\n      professor,\n      administration,\n    });\n  };\n\n  const onChangePassword = () => {\n    if (newPassword.length < 8) {\n      return setPasswordError(\n        \"Choisissez un mot de passe d'au moins 8 caractères.\"\n      );\n    } else if (newPassword !== confirmation) {\n      return setPasswordError(\"Les mots de passe ne correspondent pas.\");\n    }\n    updateUserPassword(password, newPassword);\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\",\n      }}\n    >\n      <ScrollView>\n        <View\n          style={{\n            borderBottomColor: theme.colors.grey4,\n            borderBottomWidth: 1,\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              paddingVertical: 12,\n              paddingHorizontal: 12,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignContent: \"center\",\n            }}\n            onPress={() => setShowEditAccountInfoForm(!showEditAccountInfoForm)}\n          >\n            <Text style={{ fontSize: 16 }}>Editer mes informations</Text>\n            <Icon\n              name={!showEditAccountInfoForm ? \"chevron-down\" : \"chevron-up\"}\n            />\n          </TouchableOpacity>\n          {showEditAccountInfoForm && (\n            <View style={{ marginBottom: 12 }}>\n              <View\n                style={{\n                  marginBottom: 12,\n                  flexDirection: \"row\",\n                  display: \"flex\",\n                  height: 40,\n                }}\n              >\n                <Text\n                  style={{\n                    color: theme.colors.grey3,\n                    fontWeight: \"bold\",\n                    paddingLeft: 10,\n                    fontSize: 16,\n                    flex: 1,\n                    textAlignVertical: \"center\",\n                  }}\n                >\n                  Diplomé\n                </Text>\n                <Switch\n                  value={alumni}\n                  onValueChange={(value) => setAlumni(value)}\n                />\n              </View>\n              {alumni && (\n                <Input\n                  label=\"Promotion\"\n                  value={promo}\n                  onChangeText={(text) => setPromo(text)}\n                  leftIcon={<Icon name=\"school\" />}\n                />\n              )}\n              <View\n                style={{\n                  marginBottom: 12,\n                  flexDirection: \"row\",\n                  display: \"flex\",\n                  height: 40,\n                }}\n              >\n                <Text\n                  style={{\n                    color: theme.colors.grey3,\n                    fontWeight: \"bold\",\n                    paddingLeft: 10,\n                    fontSize: 16,\n                    flex: 1,\n                    textAlignVertical: \"center\",\n                  }}\n                >\n                  Membre du corps professoral\n                </Text>\n                <Switch\n                  value={professor}\n                  onValueChange={(value) => setProfessor(value)}\n                />\n              </View>\n              <View\n                style={{\n                  marginBottom: 12,\n                  flexDirection: \"row\",\n                  display: \"flex\",\n                  height: 40,\n                }}\n              >\n                <Text\n                  style={{\n                    color: theme.colors.grey3,\n                    fontWeight: \"bold\",\n                    paddingLeft: 10,\n                    fontSize: 16,\n                    flex: 1,\n                    textAlignVertical: \"center\",\n                  }}\n                >\n                  Membre du corps administratif\n                </Text>\n                <Switch\n                  value={administration}\n                  onValueChange={(value) => setAdministration(value)}\n                />\n              </View>\n              <Input\n                value={organisation}\n                label=\"Organisation\"\n                onChangeText={(text) => setOrganisation(text)}\n                leftIcon={<Icon name=\"domain\" />}\n              />\n              <Input\n                value={jobTitle}\n                onChangeText={(text) => setJobTitle(text)}\n                label=\"Profession\"\n                leftIcon={<Icon name=\"briefcase\" />}\n              />\n              <Input\n                label=\"Description\"\n                value={desc}\n                multiline\n                numberOfLines={8}\n                onChangeText={(text) => setDesc(text)}\n              />\n              <Input\n                label=\"email\"\n                value={email}\n                leftIcon={<Icon name=\"email\" />}\n                onChangeText={(text) => setEmail(text)}\n              />\n              <Button\n                title=\"Valider les changements\"\n                onPress={() => onEditProfile()}\n                buttonStyle={{ backgroundColor: theme.colors.primary }}\n              />\n            </View>\n          )}\n        </View>\n        <View\n          style={{\n            borderBottomColor: theme.colors.grey4,\n            borderBottomWidth: 1,\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              paddingVertical: 12,\n              paddingHorizontal: 12,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n            onPress={() => setShowEditPasswordForm(!showEditPasswordForm)}\n          >\n            <Text style={{ fontSize: 16 }}>Changer mon mot de passe</Text>\n            <Icon\n              name={!showEditPasswordForm ? \"chevron-down\" : \"chevron-up\"}\n            />\n          </TouchableOpacity>\n          {showEditPasswordForm && (\n            <View style={{ marginBottom: 12 }}>\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Ancien mot de passe\"\n                secureTextEntry\n                value={password}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={(value) => setPassword(value)}\n              />\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Nouveau mot de passe\"\n                secureTextEntry\n                value={newPassword}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={(value) => {\n                  setPasswordError(\"\");\n                  setNewPassword(value);\n                }}\n                errorMessage={passwordError}\n              />\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={\n                  <Icon\n                    name={confirmation === newPassword ? \"check\" : \"close\"}\n                    color={confirmation === newPassword ? \"green\" : \"red\"}\n                  />\n                }\n                label=\"Confirmation\"\n                secureTextEntry\n                value={confirmation}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 40, marginTop: 8 }}\n                onChangeText={(value) => setConfirmation(value)}\n              />\n              <Button\n                title=\"Valider\"\n                onPress={() => onChangePassword()}\n                buttonStyle={{ backgroundColor: theme.colors.primary }}\n                loading={auth.isUpdatingPassword}\n              />\n            </View>\n          )}\n        </View>\n        <View>\n          <TouchableOpacity\n            style={{\n              paddingVertical: 12,\n              paddingHorizontal: 12,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n            onPress={() => setShowDeleteAccountForm(!showDeleteAccountForm)}\n          >\n            <Text style={{ fontSize: 16 }}>Supprimer mon compte</Text>\n            <Icon\n              name={!showDeleteAccountForm ? \"chevron-down\" : \"chevron-up\"}\n            />\n          </TouchableOpacity>\n          {showDeleteAccountForm && (\n            <View style={{ marginBottom: 12 }}>\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Mot de passe\"\n                secureTextEntry\n                value={password}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={(value) => setPassword(value)}\n              />\n              <Button\n                title=\"Valider\"\n                disabled={!password}\n                onPress={(password) => deleteAccount(password)}\n                buttonStyle={{ backgroundColor: theme.colors.error }}\n              />\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateUser: (user) => dispatch(updateUser(user)),\n    deleteAccount: (password) => dispatch(deleteAccount(password)),\n    updateUserPassword: (password, newPassword) =>\n      dispatch(updateUserPassword(password, newPassword)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEditScreen);\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport ReadProfileScreen from \"./ProfileReadScreen\";\nimport EditProfileScreen from \"./ProfileEditScreen\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nconst Stack = createStackNavigator();\n\nconst ProfileScreen = () => {\n  return (\n    <View style={{ flex: 1 }}>\n      <Stack.Navigator initialRouteName=\"Lobby\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"Read\"\n          component={ReadProfileScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Edit\"\n          component={EditProfileScreen}\n          options={{ title: \"Modifier mon compte\" }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default ProfileScreen;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  View,\n  Text,\n  ActivityIndicator,\n  FlatList,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Avatar, Icon } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport _ from \"lodash\";\n\nconst Item = ({ item, navigation }) => {\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Read\", { id: item._id, item });\n      }}\n    >\n      <View\n        style={{\n          paddingTop: 8,\n          paddingHorizontal: 20,\n          marginVertical: 4,\n          marginHorizontal: 0,\n          borderBottomWidth: 1,\n          borderBottomColor: theme.colors.grey4,\n          paddingVertical: 12,\n          flexDirection: \"row\",\n        }}\n      >\n        <View\n          style={{\n            alignContent: \"center\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginRight: 12,\n          }}\n        >\n          {item?.avatar ? (\n            <Avatar\n              source={{\n                uri: `https://siee-gate.herokuapp.com/api/files/avatar/${item?.avatar?.filename}`,\n              }}\n              size=\"medium\"\n            />\n          ) : (\n            <Avatar\n              size=\"medium\"\n              title={item?.firstname[0].concat(item?.lastname[0]).toUpperCase()}\n            />\n          )}\n        </View>\n        <View>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16,\n            }}\n          >\n            {_.capitalize(item?.firstname)} {_.capitalize(item?.lastname)}\n          </Text>\n          <View style={{ flexDirection: \"row\", flex: 1, alignItems: \"center\" }}>\n            <Icon name=\"account-card-details\" size={20} />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              {item?.jobTitle} chez {item?.organisation}\n            </Text>\n          </View>\n          <View style={{ flexDirection: \"row\", flex: 1, alignItems: \"center\" }}>\n            <Icon name=\"school\" size={20} />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              SIEE promotion {item?.promo}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst PeopleScreen = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const { users, auth } = useSelector((state) => state);\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchUsers());\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {users.isLoaded ? (\n        <FlatList\n          style={{\n            borderRadius: 0,\n            shadowOffset: { width: 10, height: 10 },\n            shadowColor: \"black\",\n            shadowOpacity: 0.3,\n            elevation: 2,\n            backgroundColor: \"white\",\n          }}\n          data={users.users}\n          renderItem={({ item }) => (\n            <Item item={item} navigation={navigation} />\n          )}\n          keyExtractor={(item) => item?._id}\n        />\n      ) : (\n        <View\n          style={{ flex: 1, alignContent: \"center\", justifyContent: \"center\" }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default PeopleScreen;\n","export const fetchUsers = () => {\n  return {\n    type: \"REQUEST_USERS\",\n    method: \"GET\",\n    route: \"users\"\n  };\n};\n","export const sendPrivateMessage = (message) => {\n  return {\n    type: \"SOCKET\",\n    event: \"private-message\",\n    payload: {\n      ...message,\n      sentAt: new Date(),\n    },\n  };\n};\n\nexport const startPrivateConversation = (message) => {\n  return {\n    type: \"SOCKET\",\n    event: \"private-conversation\",\n    payload: {\n      ...message,\n      sentAt: new Date(),\n    },\n  };\n};\n\nexport const fetchConversation = (conversation_id) => {\n  return {\n    type: \"REQUEST_CONVERSATION\",\n    method: \"GET\",\n    route: `conversations/single/${conversation_id}`,\n  };\n};\n\nexport const fetchConversations = () => {\n  return {\n    type: \"REQUEST_CONVERSATIONS\",\n    method: \"GET\",\n    route: `conversations`,\n  };\n};\n\nexport const deleteConversation = (conversation_id) => {\n  return {\n    type: \"REQUEST_DELETE_CONVERSATION\",\n    method: \"DELETE\",\n    route: `conversations/${conversation_id}`,\n    errorNotification: true,\n  };\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { View, Text, ScrollView } from \"react-native\";\nimport { Avatar, Divider, Icon, Button } from \"react-native-elements\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport theme from \"../../Theme.json\";\nimport _ from \"lodash\";\nimport { showOverlay } from \"../../actions/overlayAction\";\nimport { startPrivateConversation } from \"../../actions/chatActions\";\n\nconst PeopleScreen = ({ route, navigation }) => {\n  const { auth } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const { item } = route.params;\n  const fullname =\n    _.capitalize(item?.firstname) + \" \" + _.capitalize(item?.lastname);\n\n  if (item) {\n    return (\n      <View\n        style={{\n          flex: 1,\n          alignContent: \"space-between\",\n          paddingVertical: 10,\n          paddingHorizontal: 8,\n          backgroundColor: \"white\",\n        }}\n      >\n        <ScrollView\n          style={{\n            flex: 1,\n          }}\n        >\n          <LinearGradient\n            colors={[theme.colors.primary, theme.colors.secondary]}\n            start={[0.25, 1]}\n            end={[0, 0]}\n            style={{\n              flexDirection: \"row\",\n              marginBottom: 20,\n              paddingVertical: 8,\n              paddingHorizontal: 16,\n              borderRadius: 5,\n            }}\n          >\n            <View\n              style={{\n                flex: 1,\n                alignContent: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Text style={{ fontSize: 20, color: theme.colors.grey5 }}>\n                {_.capitalize(item?.firstname)}\n              </Text>\n              <Text\n                style={{ fontSize: 30, color: \"white\", fontWeight: \"bold\" }}\n              >\n                {_.capitalize(item?.lastname)}\n              </Text>\n              {item.professor && (\n                <Text style={{ color: theme.colors.grey4, paddingLeft: 4 }}>\n                  Professeur\n                </Text>\n              )}\n              {item.administration && (\n                <Text style={{ color: theme.colors.grey4, paddingLeft: 4 }}>\n                  Membre du corps administratif\n                </Text>\n              )}\n            </View>\n            {item?.avatar ? (\n              <Avatar\n                size=\"xlarge\"\n                containerStyle={{\n                  borderColor: \"white\",\n                  borderWidth: 3,\n                }}\n                source={{\n                  uri: `https://siee-gate.herokuapp.com/api/files/avatar/${item?.avatar?.filename}`,\n                }}\n              />\n            ) : (\n              <Avatar\n                size=\"xlarge\"\n                containerStyle={{\n                  borderColor: \"white\",\n                  borderWidth: 3,\n                }}\n                title={item?.firstname\n                  .charAt(0)\n                  .concat(item?.lastname.charAt(0))\n                  .toUpperCase()}\n              />\n            )}\n          </LinearGradient>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text\n              style={{\n                textAlignVertical: \"bottom\",\n                marginHorizontal: 8,\n                flex: 1,\n              }}\n            >\n              {item?.jobTitle} chez {item?.organisation}\n            </Text>\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Icon name=\"school\" size={20} color=\"grey\" />\n            <Text\n              style={{\n                textAlignVertical: \"bottom\",\n                marginHorizontal: 8,\n                flex: 1,\n              }}\n            >\n              Promotion {item?.promo}\n            </Text>\n          </View>\n          <Divider\n            style={{\n              marginVertical: 20,\n              backgroundColor: \"grey\",\n              borderWidth: 1,\n              width: 20,\n            }}\n          />\n          <View style={{ flexDirection: \"row\" }}>\n            <Text style={{ textAlign: \"justify\", flex: 1, marginEnd: 8 }}>\n              {item?.description}\n            </Text>\n          </View>\n          <Divider\n            style={{\n              marginVertical: 20,\n              backgroundColor: \"grey\",\n              borderWidth: 1,\n              width: 20,\n            }}\n          />\n          <View style={{ flexDirection: \"row\" }}>\n            <Icon name=\"at\" size={20} color=\"grey\" />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {item?.email}\n            </Text>\n          </View>\n        </ScrollView>\n        {item._id !== auth.user._id && (\n          <View>\n            <Button\n              title=\"Contacter\"\n              onPress={() => {\n                let a = auth?.user.privateConversations.filter(\n                  (c) => c.interlocutor_id == item._id\n                );\n                if (a.length > 0) {\n                  navigation.navigate(\"Messages\", {\n                    screen: \"Room\",\n                    params: {\n                      title: fullname,\n                      conversation_id: a[0].conversation_id,\n                    },\n                  });\n                } else\n                  dispatch(\n                    showOverlay({\n                      form: {\n                        action: startPrivateConversation,\n                        inputName: \"text\",\n                        actionParams: { recipient: item?._id },\n                        message:\n                          \"Demarrer une conversation avec \" +\n                          _.capitalize(item?.firstname) +\n                          \" \" +\n                          _.capitalize(item?.lastname),\n                      },\n                      redirect: \"Messages\",\n                    })\n                  );\n              }}\n            />\n          </View>\n        )}\n      </View>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default PeopleScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AppNavbar from \"../AppNavbar\";\nimport PeopleListScreen from \"./PeopleListScreen\";\nimport PeopleReadScreen from \"./PeopleReadScreen\";\nconst Stack = createStackNavigator();\n\nconst PeopleScreen = ({ navigation }) => {\n  return (\n    <View style={{ flex: 1 }}>\n      <AppNavbar title=\"Annuaire\" navigation={navigation} />\n      <Stack.Navigator initialRouteName=\"List\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"List\"\n          component={PeopleListScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Read\"\n          component={PeopleReadScreen}\n          options={{ headerStatusBarHeight: 0, title: \"\" }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default PeopleScreen;\n","import React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  View,\n  Text,\n  ActivityIndicator,\n  FlatList,\n  TouchableOpacity,\n  RefreshControl,\n  TextInput,\n} from \"react-native\";\nimport {\n  SearchBar,\n  Avatar,\n  ThemeContext,\n  Button,\n  Icon,\n} from \"react-native-elements\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport { fetchConversations } from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\nimport { showOverlay } from \"../../actions/overlayAction\";\n\nconst SearchResultItem = ({ item, theme, navigation, chat, dispatch }) => {\n  const [showMessageForm, setShowMessageForm] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const fullName =\n    _.capitalize(item?.firstname) + \" \" + _.capitalize(item?.lastname);\n\n  return (\n    <TouchableOpacity\n      onPress={\n        chat.interlocutorsIds.includes(item?._id)\n          ? () =>\n              navigation.navigate(\"Room\", {\n                title: fullName,\n                conversation: chat.convIdsWithPartsIds\n                  .filter(\n                    (element) =>\n                      element.participants.includes(item?._id) === true\n                  )\n                  .filter((conv) => conv.participants.length === 2)[0],\n              })\n          : () =>\n              dispatch(\n                showOverlay({\n                  form: {\n                    action: sendMessage,\n                    inputName: \"text\",\n                    actionParams: { recipients: [item?._id] },\n                    message: \"Demarrer une conversation avec \" + fullName,\n                  },\n                })\n              )\n      }\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          paddingVertical: 4,\n          paddingHorizontal: 8,\n          borderBottomColor: theme.colors.grey5,\n          borderBottomWidth: 1,\n        }}\n      >\n        <View\n          style={{\n            alignContent: \"center\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginRight: 12,\n          }}\n        >\n          {item?.avatar ? (\n            <Avatar\n              source={{\n                uri: `https://siee-gate.herokuapp.com/api/files/avatar/${item?.avatar?.filename}`,\n              }}\n              size=\"small\"\n            />\n          ) : (\n            <Avatar\n              size=\"small\"\n              title={item?.firstname[0].concat(item?.lastname[0]).toUpperCase()}\n            />\n          )}\n        </View>\n        {!showMessageForm ? (\n          <Text style={{ paddingLeft: 12 }}>{fullName}</Text>\n        ) : (\n          <View\n            style={{\n              flexDirection: \"row\",\n              backgroundColor: \"white\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              marginTop: 8,\n            }}\n          >\n            <TextInput\n              value={newMessage}\n              multiline\n              placeholder=\"Ecrivez ici.\"\n              placeholderTextColor=\"grey\"\n              onChangeText={(text) => setNewMessage(text)}\n              style={{\n                backgroundColor: theme.colors.grey5,\n                borderColor: theme.colors.grey4,\n                borderWidth: 1,\n                borderRadius: 5,\n                paddingVertical: 2,\n                paddingHorizontal: 4,\n                maxHeight: 80,\n              }}\n            />\n            <Button\n              containerStyle={{ height: 30 }}\n              icon={\n                <Icon\n                  name=\"send\"\n                  size={20}\n                  color={newMessage ? theme.colors.primary : theme.colors.grey2}\n                />\n              }\n              disabled={!newMessage}\n              type=\"clear\"\n              onPress={() => {\n                onSendMessage(newMessage, item?._id);\n                setNewMessage(\"\");\n                setShowMessageForm(false);\n              }}\n            />\n          </View>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst Item = ({ item, navigation, auth, theme, dispatch }) => {\n  const listParticipants = () => {\n    _.remove(\n      item?.participants,\n      (participant) => participant._id === auth?.user._id\n    );\n\n    if (item?.participants?.length > 1) {\n      const participantsList = item?.participants?.map((participant) =>\n        _.capitalize(participant.firstname)\n      );\n      return participantsList.toString().replace(\",\", \", \");\n    } else if (item?.participants?.length === 1) {\n      return _.capitalize(item?.participants[0]?.firstname).concat(\n        \" \",\n        _.capitalize(item?.participants[0]?.lastname)\n      );\n    } else {\n      return \"Compte supprimé\";\n    }\n  };\n\n  const title = listParticipants();\n  const participants = listParticipants(item);\n\n  return (\n    <TouchableOpacity\n      onPress={() =>\n        navigation.navigate(\"Room\", {\n          title,\n          conversation_id: item._id,\n        })\n      }\n    >\n      <View\n        style={{\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          borderBottomColor: \"white\",\n          borderBottomWidth: 3,\n          backgroundColor: \"white\",\n        }}\n      >\n        <View style={{ flexDirection: \"row\" }}>\n          <View\n            style={{\n              alignContent: \"center\",\n              justifyContent: \"center\",\n              paddingRight: 8,\n            }}\n          >\n            {item?.participants[0]?.avatar ? (\n              <Avatar\n                source={{\n                  uri: `${apiConfig.baseUrl}/files/avatar/${item?.participants[0]?.avatar?.filename}`,\n                }}\n                size=\"medium\"\n              />\n            ) : (\n              <Avatar\n                size=\"medium\"\n                title={item?.participants[0]?.firstname[0]\n                  .concat(item?.participants[0]?.lastname[0])\n                  .toUpperCase()}\n              />\n            )}\n          </View>\n          <View\n            style={{\n              flex: 1,\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  fontSize: 16,\n                  fontWeight: \"bold\",\n                }}\n              >\n                {participants}\n              </Text>\n              <Text\n                color=\"grey\"\n                style={{\n                  color: \"grey\",\n                  fontSize: 10,\n                  textAlignVertical: \"bottom\",\n                }}\n              >\n                {_.capitalize(\n                  moment(item?.lastMessage?.sentAt).locale(\"fr\").fromNow()\n                )}\n              </Text>\n            </View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <View\n                style={{ alignContent: \"center\", justifyContent: \"center\" }}\n              >\n                {item?.lastMessage?.sender === auth?.user._id ? (\n                  <Icon\n                    name=\"arrow-top-right\"\n                    color={theme.colors.grey1}\n                    size={14}\n                  />\n                ) : (\n                  <Icon\n                    name=\"arrow-bottom-left\"\n                    color={theme.colors.grey3}\n                    size={14}\n                  />\n                )}\n              </View>\n              <Text\n                style={{\n                  textAlignVertical: \"center\",\n                  fontSize: 14,\n                  flex: 1,\n                }}\n              >\n                {item?.lastMessage?.text}\n              </Text>\n            </View>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst ChatLobbyScreen = ({ navigation }) => {\n  const [refreshing, setRefreshing] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const { chat, users, auth } = useSelector((state) => state);\n\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchConversations());\n      dispatch(fetchUsers());\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    dispatch(fetchConversations());\n    setRefreshing(false);\n  }, [refreshing]);\n\n  const searchProcess = () => {\n    const searchResults = [];\n    users.users?.forEach((user) => {\n      if (user._id !== auth?.user._id) {\n        if (\n          user.firstname.includes(search.toLowerCase()) === true ||\n          user.lastname.includes(search.toLowerCase())\n        ) {\n          searchResults.push(user);\n        }\n      }\n    });\n    return searchResults;\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      {/* <View style={{ backgroundColor: \"white\", paddingVertical: 4 }}>\n        <SearchBar\n          placeholder=\"Chercher un alumni ici...\"\n          onChangeText={setSearch}\n          value={search}\n          platform=\"android\"\n          containerStyle={{\n            paddingTop: 0,\n            height: 40,\n          }}\n        />\n        {users.isLoaded && (\n          <FlatList\n            data={search && searchProcess()}\n            renderItem={({ item }) => (\n              <SearchResultItem\n                item={item}\n                theme={theme}\n                chat={chat}\n                navigation={navigation}\n                dispatch={dispatch}\n              />\n            )}\n            keyExtractor={(item) => item?._id}\n          />\n        )}\n        {!users.isLoaded && (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <ActivityIndicator size=\"small\" />\n          </View>\n        )}\n      </View> */}\n      {chat.isLoaded ? (\n        chat.conversations.length > 0 ? (\n          <FlatList\n            data={chat.conversations}\n            renderItem={({ item }) => (\n              <Item\n                item={item}\n                auth={auth}\n                navigation={navigation}\n                theme={theme}\n                dispatch={dispatch}\n              />\n            )}\n            keyExtractor={(item) => item?._id}\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n          />\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text style={{ textAlign: \"center\", color: theme.colors.grey3 }}>\n              Aucune conversation\n            </Text>\n            <Button\n              title=\"Rafraichir\"\n              type=\"clear\"\n              onPress={() => dispatch(fetchConversations())}\n            />\n          </View>\n        )\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default ChatLobbyScreen;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  FlatList,\n  ActivityIndicator,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ThemeContext, Button, Icon } from \"react-native-elements\";\nimport {\n  sendPrivateMessage,\n  fetchConversation,\n} from \"../../actions/chatActions\";\nimport _ from \"lodash\";\n\nconst Message = ({ message, incoming, theme }) => {\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n      }}\n    >\n      {!incoming && <View style={{ flex: 1 }}></View>}\n      <View\n        style={{\n          backgroundColor: incoming ? \"white\" : theme.colors.primary,\n          borderTopLeftRadius: !incoming ? 10 : 0,\n          borderTopRightRadius: 10,\n          borderBottomLeftRadius: 10,\n          borderBottomRightRadius: incoming ? 10 : 0,\n          maxWidth: \"80%\",\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          marginBottom: 8,\n          marginHorizontal: 8,\n        }}\n      >\n        <Text\n          style={{\n            color: !incoming ? \"white\" : \"black\",\n            textAlign: incoming ? \"left\" : \"right\",\n          }}\n        >\n          {message.text}\n        </Text>\n      </View>\n      {incoming && <View style={{ flex: 1 }}></View>}\n    </View>\n  );\n};\n\nconst RoomScreen = ({ route }) => {\n  const { conversation_id } = route.params;\n  const [newMessage, setNewMessage] = useState(\"\");\n  const { theme } = useContext(ThemeContext);\n\n  const { user } = useSelector((state) => state.auth);\n  const conversation = useSelector(\n    (state) =>\n      state.chat.conversations.filter((conv) => conv._id === conversation_id)[0]\n  );\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchConversation(conversation_id));\n    }\n    fetchData();\n  }, []);\n\n  const onSendMessage = () => {\n    const interlocutors = conversation?.participants.filter(\n      (p) => p._id != user._id\n    );\n    dispatch(\n      sendPrivateMessage({\n        text: newMessage,\n        conversation_id,\n        recipient: interlocutors[0],\n      })\n    );\n    setNewMessage(\"\");\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      {conversation?.messages ? (\n        <FlatList\n          data={conversation.messages}\n          renderItem={({ item }) => (\n            <Message\n              message={item}\n              incoming={item?.sender !== user._id}\n              theme={theme}\n            />\n          )}\n          keyExtractor={(item) => item?._id}\n          inverted={true}\n        />\n      ) : (\n        <ActivityIndicator />\n      )}\n      <View\n        style={{\n          flexDirection: \"row\",\n          backgroundColor: \"white\",\n          paddingVertical: 8,\n          paddingHorizontal: 16,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n        }}\n      >\n        <TextInput\n          style={{\n            height: 40,\n            flex: 1,\n          }}\n          onChangeText={(text) => setNewMessage(text)}\n          value={newMessage}\n          multiline\n          placeholder=\"Ecrivez votre message ici.\"\n        />\n        <Button\n          icon={\n            <Icon\n              name=\"send\"\n              size={20}\n              color={newMessage ? theme.colors.primary : theme.colors.grey2}\n            />\n          }\n          disabled={!newMessage}\n          type=\"clear\"\n          onPress={() => onSendMessage()}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default RoomScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport AppNavbar from \"../AppNavbar\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Lobby from \"./MessagesLobbyScreen\";\nimport Room from \"./MessagesRoomScreen\";\nimport _ from \"lodash\";\n\nconst Stack = createStackNavigator();\n\nconst MessagesScreen = ({ navigation }) => {\n  return (\n    <View style={{ flex: 1 }}>\n      <AppNavbar title=\"Messagerie\" navigation={navigation} />\n      <Stack.Navigator initialRouteName=\"Lobby\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"Lobby\"\n          component={Lobby}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Room\"\n          component={Room}\n          options={({ route }) => {\n            const { title } = route.params;\n            if (!title) {\n              return {\n                title: \"Compte supprimé\",\n                headerStatusBarHeight: 0,\n              };\n            } else {\n              return {\n                title: title,\n                headerStatusBarHeight: 0,\n              };\n            }\n          }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default MessagesScreen;\n","import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { View, Image } from \"react-native\";\nimport { Input, Button, Icon, ThemeContext } from \"react-native-elements\";\nimport { logIn } from \"../../actions/authActions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst logInScreen = ({ auth, logIn, navigation }) => {\n  const { theme } = useContext(ThemeContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const handleLogIn = async () => {\n    if (!email) {\n      return setErrors({ email: \"Mél invalide.\" });\n    } else if (!password) {\n      return setErrors({ password: \"Mot de passe invalide.\" });\n    }\n\n    setErrors({});\n    logIn({ email, password });\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        backgroundColor: \"white\",\n      }}\n    >\n      <LinearGradient\n        colors={[theme.colors.primary, theme.colors.secondary]}\n        start={[0.25, 1]}\n        end={[0, 0]}\n        style={{\n          flexDirection: \"row\",\n          marginBottom: 20,\n          height: 150,\n          width: 150,\n          borderRadius: 100,\n        }}\n      >\n        <Image\n          source={require(\"../../assets/images/logo.png\")}\n          style={{\n            height: 150,\n            width: 150,\n            borderRadius: 100,\n          }}\n        />\n      </LinearGradient>\n      <Input\n        placeholder=\"Email\"\n        leftIcon={<Icon name=\"email\" type=\"material-community\" />}\n        value={email}\n        onChangeText={(value) => setEmail(value)}\n        label=\"Email\"\n        errorStyle={{ color: \"red\" }}\n        errorMessage={errors.email}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={<Icon name=\"lock\" />}\n        label=\"Mot de passe\"\n        secureTextEntry\n        value={password}\n        containerStyle={{ marginBottom: 30, marginTop: 8 }}\n        onChangeText={(value) => setPassword(value)}\n        errorStyle={{ color: \"red\" }}\n        errorMessage={errors.password}\n      />\n      <Button\n        title=\"Se connecter\"\n        onPress={handleLogIn}\n        loading={auth.isLoggingIn}\n        containerStyle={{ marginBottom: 20, marginTop: 8 }}\n      />\n      <Button\n        title=\"Nouveau? Je m'enregistre.\"\n        type=\"clear\"\n        onPress={() => navigation.navigate(\"SignUp\")}\n        containerStyle={{ marginBottom: 30 }}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logIn: (credentials) => dispatch(logIn(credentials)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(logInScreen);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ScrollView } from \"react-native\";\nimport { Input, Button, Icon } from \"react-native-elements\";\nimport { signUp } from \"../../actions/authActions\";\n\nconst SignUpScreen = ({ signUp, auth }) => {\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const handleSignUp = async () => {\n    if (!firstname) {\n      return setErrors({ firstname: \"Prénom manquant.\" });\n    } else if (!lastname) {\n      return setErrors({ lastname: \"Nom manquant.\" });\n    } else if (!email) {\n      return setErrors({ mail: \"Mél manquant.\" });\n    } else if (password.length < 8 === true) {\n      return setErrors({ password: \"Mot de passe manquant.\" });\n    } else if (password !== confirmation) {\n      return setErrors({\n        confirmation: \"Veuillez retaper la confirmation de votre mot de passe.\",\n      });\n    }\n    setErrors({});\n    signUp({ email, password, firstname, lastname, code });\n  };\n\n  return (\n    <ScrollView\n      containerStyle={{\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n      style={{\n        backgroundColor: \"white\",\n        paddingHorizontal: 12,\n        paddingVertical: 20,\n        flex: 1,\n      }}\n    >\n      <Input\n        placeholder=\"Prénom\"\n        value={firstname}\n        onChangeText={(value) => setFirstname(value)}\n        label=\"Prénom\"\n        errorMessage={errors.firstname}\n      />\n      <Input\n        placeholder=\"Nom\"\n        value={lastname}\n        onChangeText={(value) => setLastname(value)}\n        label=\"Nom\"\n        errorMessage={errors.lastname}\n      />\n      <Input\n        placeholder=\"Email\"\n        leftIcon={<Icon name=\"email\" type=\"material-community\" />}\n        value={email}\n        onChangeText={(value) => setEmail(value)}\n        label=\"Email\"\n        errorMessage={errors.email}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={<Icon name=\"lock\" />}\n        label=\"Mot de passe\"\n        secureTextEntry\n        value={password}\n        onChangeText={(value) => setPassword(value)}\n        errorMessage={errors.password}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={\n          <Icon\n            name={\n              confirmation !== password || password.length < 8\n                ? \"close\"\n                : \"check\"\n            }\n            color={\n              confirmation !== password || password.length < 8 ? \"red\" : \"green\"\n            }\n          />\n        }\n        label=\"Confirmation\"\n        secureTextEntry\n        value={confirmation}\n        leftIconContainerStyle={{ marginRight: 12 }}\n        onChangeText={(value) => setConfirmation(value)}\n        errorMessage={errors.confirmation}\n      />\n      <Button\n        title=\"S'inscrire\"\n        onPress={handleSignUp}\n        loading={auth.isSigningUp}\n        containerStyle={{ marginBottom: 20, marginTop: 40 }}\n      />\n    </ScrollView>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (credentials) => dispatch(signUp(credentials)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpScreen);\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport LogInScreen from \"./LogInScreen\";\nimport SignUpScreen from \"./SignUpScreen\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nconst Stack = createStackNavigator();\n\nconst AuthNavigator = () => {\n  return (\n    <View style={{ flex: 1 }}>\n      <Stack.Navigator initialRouteName=\"LogIn\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"LogIn\"\n          component={LogInScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"SignUp\"\n          component={SignUpScreen}\n          options={{\n            title: \"S'inscrire\",\n          }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default AuthNavigator;\n","import React, { useContext, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Text, View, Dimensions, TextInput } from \"react-native\";\nimport { Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { resetOverlay } from \"../actions/overlayAction\";\nimport * as RootNavigation from \"../RootNavigation.js\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nconst Notifier = ({ notification, theme }) => {\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      <Icon\n        containerStyle={{ marginBottom: 8 }}\n        size={30}\n        name={\n          notification.variant === \"success\"\n            ? \"check-circle-outline\"\n            : notification.variant === \"warning\"\n            ? \"alert-circle-outline\"\n            : notification.variant === \"error\"\n            ? \"close-circle-outline\"\n            : notification.icon\n        }\n        color={\n          notification.variant === \"success\"\n            ? \"green\"\n            : notification.variant === \"warning\"\n            ? \"yellow\"\n            : notification.variant === \"error\"\n            ? \"red\"\n            : notification.variant === \"error\"\n            ? \"blue\"\n            : theme.colors.grey1\n        }\n      />\n      {notification.message && (\n        <Text style={{ fontSize: 14 }}>{notification.message}</Text>\n      )}\n    </View>\n  );\n};\n\nconst InputForm = ({ form, dispatchRedirectReset, theme, dispatch }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          marginTop: 8,\n        }}\n      >\n        {form.message && <Text style={{ fontSize: 14 }}>{form.message}</Text>}\n      </View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"stretch\",\n          marginTop: 8,\n        }}\n      >\n        <TextInput\n          value={inputValue}\n          multiline\n          placeholder=\"Ecrivez ici.\"\n          placeholderTextColor=\"grey\"\n          onChangeText={(text) => setInputValue(text)}\n          style={{\n            backgroundColor: theme.colors.grey5,\n            borderColor: theme.colors.grey4,\n            borderWidth: 1,\n            borderRadius: 5,\n            height: 60,\n            paddingHorizontal: 4,\n            paddingVertical: 4,\n            flex: 1,\n          }}\n          textAlignVertical=\"top\"\n        />\n        <Button\n          buttonStyle={{\n            height: 60,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          icon={\n            <Icon\n              name=\"send\"\n              size={20}\n              color={inputValue ? theme.colors.primary : theme.colors.grey2}\n            />\n          }\n          disabled={!inputValue}\n          type=\"clear\"\n          onPress={() => {\n            dispatch(\n              form.action({\n                [form.inputName]: inputValue,\n                ...form.actionParams,\n              })\n            );\n            dispatchRedirectReset();\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst Menu = ({ menu, dispatchRedirectReset, dispatch }) => {\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      {menu.buttons?.map((button, i) => {\n        return (\n          <Button\n            title={button.title}\n            key={i}\n            containerStyle={{ height: 30 }}\n            onPress={() => {\n              dispatch(button.action(...button.actionParams));\n              dispatchRedirectReset();\n            }}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nconst CustomOverlay = () => {\n  const overlay = useSelector((state) => state.overlay);\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  if (overlay.show === false) return null;\n\n  const dispatchRedirectReset = () => {\n    dispatch(resetOverlay());\n    typeof overlay.callbacks === \"array\" &&\n      overlay.callbacks.forEach((d) => {\n        dispatch(d());\n      });\n    overlay.redirect && RootNavigation.navigate(overlay.redirect, {});\n  };\n\n  overlay.timeout &&\n    setTimeout(() => {\n      dispatchRedirectReset();\n    }, overlay.timeout);\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        height: Dimensions.get(\"window\").height,\n        width: Dimensions.get(\"window\").width,\n        maxWidth: 500,\n        backgroundColor: theme.colors.grey6,\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\",\n      }}\n    >\n      <TouchableOpacity\n        containerStyle={{ flex: 1, minHeight: 12 }}\n        style={{\n          flex: 1,\n          minHeight: 12,\n        }}\n        onPress={() => {\n          overlay.notification\n            ? dispatchRedirectReset()\n            : dispatch(resetOverlay());\n        }}\n      />\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minWidth: 12 }}\n          style={{\n            flex: 1,\n            minWidth: 12,\n          }}\n          onPress={() => {\n            overlay.notification\n              ? dispatchRedirectReset()\n              : dispatch(resetOverlay());\n          }}\n        />\n        {overlay.notification && (\n          <Notifier\n            notification={overlay.notification}\n            dispatchRedirectReset={dispatchRedirectReset}\n            theme={theme}\n          />\n        )}\n        {overlay.form && (\n          <InputForm\n            form={overlay.form}\n            dispatchRedirectReset={dispatchRedirectReset}\n            dispatch={dispatch}\n            theme={theme}\n          />\n        )}\n        {overlay.menu && (\n          <Menu\n            menu={overlay.menu}\n            dispatchRedirectReset={dispatchRedirectReset}\n            dispatch={dispatch}\n          />\n        )}\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minWidth: 12 }}\n          style={{\n            flex: 1,\n            minWidth: 12,\n          }}\n          onPress={() => {\n            overlay.notification\n              ? dispatchRedirectReset()\n              : dispatch(resetOverlay());\n          }}\n        />\n      </View>\n      <TouchableOpacity\n        containerStyle={{ flex: 1, minHeight: 12 }}\n        style={{\n          flex: 1,\n          minHeight: 12,\n        }}\n        onPress={() => {\n          overlay.notification\n            ? dispatchRedirectReset()\n            : dispatch(resetOverlay());\n        }}\n      />\n    </View>\n  );\n};\n\nexport default CustomOverlay;\n","import React from \"react\";\nimport { Provider, useSelector, shallowEqual, useDispatch } from \"react-redux\";\nimport { SafeAreaView, Platform, StatusBar, View } from \"react-native\";\nimport { store, persistor } from \"./store/index\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { ThemeProvider, Icon } from \"react-native-elements\";\nimport { SplashScreen } from \"expo\";\n\nimport MyJobs from \"./components/MyJobs\";\nimport Jobs from \"./components/Jobs\";\nimport Profile from \"./components/Profile\";\nimport People from \"./components/People\";\nimport Messages from \"./components/Messages\";\nimport Auth from \"./components/Auth\";\nimport CustomOverlay from \"./components/CustomOverlay\";\n\nimport theme from \"./Theme.json\";\nimport useLinking from \"./useLinking\";\n\nimport { navigationRef, isMountedRef } from \"./RootNavigation\";\n\nimport { verifyToken } from \"./actions/authActions\";\nimport { fetchJobs, fetchMyJobs } from \"./actions/jobsActions\";\nimport { fetchUsers } from \"./actions/usersActions\";\nimport { fetchConversations } from \"./actions/chatActions\";\n\nconst BottomTab = createBottomTabNavigator();\nconst Drawer = createDrawerNavigator();\nconst Switch = createStackNavigator();\n\nconst MainStack = () => {\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"People\"\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          switch (route.name) {\n            case \"Home\":\n              iconName = \"home\";\n              break;\n            case \"Jobs\":\n              iconName = \"briefcase\";\n              break;\n            case \"People\":\n              iconName = \"account-group\";\n              break;\n            case \"Messages\":\n              iconName = \"forum\";\n              break;\n            default:\n              break;\n          }\n\n          return <Icon name={iconName} size={size} color={color} />;\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: theme.colors.primary,\n        inactiveTintColor: \"gray\",\n      }}\n    >\n      <BottomTab.Screen\n        name=\"People\"\n        component={People}\n        options={{ title: \"Annuaire\" }}\n      />\n      <BottomTab.Screen\n        name=\"Jobs\"\n        component={Jobs}\n        options={{ title: \"Emplois\" }}\n      />\n      <BottomTab.Screen\n        name=\"Messages\"\n        component={Messages}\n        options={{ title: \"Messages\" }}\n      />\n    </BottomTab.Navigator>\n  );\n};\n\nconst DrawerStack = () => {\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    function fetchData() {\n      dispatch(fetchJobs());\n      dispatch(fetchMyJobs());\n      dispatch(fetchUsers());\n      dispatch(fetchConversations());\n    }\n\n    fetchData();\n  }, []);\n  return (\n    <Drawer.Navigator initialRouteName=\"Main\" headerMode=\"screen\">\n      <Drawer.Screen\n        name=\"Main\"\n        component={MainStack}\n        options={{ title: \"Accueil\" }}\n      />\n      <Drawer.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{ title: \"Mon profil\" }}\n      />\n      <Drawer.Screen\n        name=\"MyJobs\"\n        component={MyJobs}\n        options={{ title: \"Mes offres d'emplois\" }}\n      />\n    </Drawer.Navigator>\n  );\n};\n\nconst AppStack = (props) => {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\n  const containerRef = React.useRef();\n  const { getInitialState } = useLinking(navigationRef);\n  const dispatch = useDispatch();\n\n  const userToken = useSelector((state) => state.auth.token, shallowEqual);\n\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      if (userToken !== null) {\n        dispatch(verifyToken());\n      }\n      try {\n        SplashScreen.preventAutoHide();\n\n        setInitialNavigationState(await getInitialState());\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hide();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null;\n  } else {\n    return (\n      <View\n        style={{\n          maxWidth: 500,\n          flex: 1,\n        }}\n      >\n        <NavigationContainer\n          ref={navigationRef}\n          initialState={initialNavigationState}\n        >\n          <Switch.Navigator headerMode=\"none\">\n            {userToken && <Switch.Screen name=\"Root\" component={DrawerStack} />}\n            {!userToken && <Switch.Screen name=\"Auth\" component={Auth} />}\n          </Switch.Navigator>\n          <CustomOverlay />\n        </NavigationContainer>\n      </View>\n    );\n  }\n};\n\nconst App = () => {\n  React.useEffect(() => {\n    console.log(\"Platform.OS\", Platform.OS);\n    isMountedRef.current = true;\n    return () => (isMountedRef.current = false);\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <SafeAreaView\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            {Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />}\n            <AppStack />\n          </SafeAreaView>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { useLinking } from \"@react-navigation/native\";\nimport { Linking } from \"expo\";\n\nexport default function (containerRef) {\n  return useLinking(containerRef, {\n    prefixes: [Linking.makeUrl(\"/\")],\n    config: {\n      Auth: {\n        path: \"auth\",\n        screens: {\n          LogIn: \"login\",\n          SignUp: \"signup\",\n        },\n      },\n      Root: {\n        path: \"root\",\n        screens: {\n          Main: {\n            path: \"main\",\n            screens: {\n              Jobs: {\n                path: \"emplois\",\n                screens: {\n                  List: \"emplois\",\n                  Read: \"emplois/:id\",\n                  Post: \"emplois/poster\",\n                },\n              },\n              People: {\n                path: \"annuaire\",\n                screens: {\n                  List: \"annuaire\",\n                  Read: \"annuaire/:id\",\n                },\n              },\n              Messages: {\n                path: \"messagerie\",\n                screens: {\n                  Lobby: \"messagerie\",\n                  Room: \"messagerie/:conversation_id\",\n                },\n              },\n            },\n          },\n          Profile: {\n            path: \"mon-profil\",\n            Read: \"mon-profil\",\n            Edit: \"mon-profil/modifier\",\n          },\n          MyJobs: {\n            path: \"mes-offres\",\n            Read: \"mes-offres\",\n            Edit: \"mes-offres/:id\",\n          },\n        },\n      },\n    },\n  });\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var map = {\n\t\"./af\": 282,\n\t\"./af.js\": 282,\n\t\"./ar\": 283,\n\t\"./ar-dz\": 284,\n\t\"./ar-dz.js\": 284,\n\t\"./ar-kw\": 285,\n\t\"./ar-kw.js\": 285,\n\t\"./ar-ly\": 286,\n\t\"./ar-ly.js\": 286,\n\t\"./ar-ma\": 287,\n\t\"./ar-ma.js\": 287,\n\t\"./ar-sa\": 288,\n\t\"./ar-sa.js\": 288,\n\t\"./ar-tn\": 289,\n\t\"./ar-tn.js\": 289,\n\t\"./ar.js\": 283,\n\t\"./az\": 290,\n\t\"./az.js\": 290,\n\t\"./be\": 291,\n\t\"./be.js\": 291,\n\t\"./bg\": 292,\n\t\"./bg.js\": 292,\n\t\"./bm\": 293,\n\t\"./bm.js\": 293,\n\t\"./bn\": 294,\n\t\"./bn.js\": 294,\n\t\"./bo\": 295,\n\t\"./bo.js\": 295,\n\t\"./br\": 296,\n\t\"./br.js\": 296,\n\t\"./bs\": 297,\n\t\"./bs.js\": 297,\n\t\"./ca\": 298,\n\t\"./ca.js\": 298,\n\t\"./cs\": 299,\n\t\"./cs.js\": 299,\n\t\"./cv\": 300,\n\t\"./cv.js\": 300,\n\t\"./cy\": 301,\n\t\"./cy.js\": 301,\n\t\"./da\": 302,\n\t\"./da.js\": 302,\n\t\"./de\": 303,\n\t\"./de-at\": 304,\n\t\"./de-at.js\": 304,\n\t\"./de-ch\": 305,\n\t\"./de-ch.js\": 305,\n\t\"./de.js\": 303,\n\t\"./dv\": 306,\n\t\"./dv.js\": 306,\n\t\"./el\": 307,\n\t\"./el.js\": 307,\n\t\"./en-SG\": 308,\n\t\"./en-SG.js\": 308,\n\t\"./en-au\": 309,\n\t\"./en-au.js\": 309,\n\t\"./en-ca\": 310,\n\t\"./en-ca.js\": 310,\n\t\"./en-gb\": 311,\n\t\"./en-gb.js\": 311,\n\t\"./en-ie\": 312,\n\t\"./en-ie.js\": 312,\n\t\"./en-il\": 313,\n\t\"./en-il.js\": 313,\n\t\"./en-nz\": 314,\n\t\"./en-nz.js\": 314,\n\t\"./eo\": 315,\n\t\"./eo.js\": 315,\n\t\"./es\": 316,\n\t\"./es-do\": 317,\n\t\"./es-do.js\": 317,\n\t\"./es-us\": 318,\n\t\"./es-us.js\": 318,\n\t\"./es.js\": 316,\n\t\"./et\": 319,\n\t\"./et.js\": 319,\n\t\"./eu\": 320,\n\t\"./eu.js\": 320,\n\t\"./fa\": 321,\n\t\"./fa.js\": 321,\n\t\"./fi\": 322,\n\t\"./fi.js\": 322,\n\t\"./fo\": 323,\n\t\"./fo.js\": 323,\n\t\"./fr\": 117,\n\t\"./fr-ca\": 324,\n\t\"./fr-ca.js\": 324,\n\t\"./fr-ch\": 325,\n\t\"./fr-ch.js\": 325,\n\t\"./fr.js\": 117,\n\t\"./fy\": 326,\n\t\"./fy.js\": 326,\n\t\"./ga\": 327,\n\t\"./ga.js\": 327,\n\t\"./gd\": 328,\n\t\"./gd.js\": 328,\n\t\"./gl\": 329,\n\t\"./gl.js\": 329,\n\t\"./gom-latn\": 330,\n\t\"./gom-latn.js\": 330,\n\t\"./gu\": 331,\n\t\"./gu.js\": 331,\n\t\"./he\": 332,\n\t\"./he.js\": 332,\n\t\"./hi\": 333,\n\t\"./hi.js\": 333,\n\t\"./hr\": 334,\n\t\"./hr.js\": 334,\n\t\"./hu\": 335,\n\t\"./hu.js\": 335,\n\t\"./hy-am\": 336,\n\t\"./hy-am.js\": 336,\n\t\"./id\": 337,\n\t\"./id.js\": 337,\n\t\"./is\": 338,\n\t\"./is.js\": 338,\n\t\"./it\": 339,\n\t\"./it-ch\": 340,\n\t\"./it-ch.js\": 340,\n\t\"./it.js\": 339,\n\t\"./ja\": 341,\n\t\"./ja.js\": 341,\n\t\"./jv\": 342,\n\t\"./jv.js\": 342,\n\t\"./ka\": 343,\n\t\"./ka.js\": 343,\n\t\"./kk\": 344,\n\t\"./kk.js\": 344,\n\t\"./km\": 345,\n\t\"./km.js\": 345,\n\t\"./kn\": 346,\n\t\"./kn.js\": 346,\n\t\"./ko\": 347,\n\t\"./ko.js\": 347,\n\t\"./ku\": 348,\n\t\"./ku.js\": 348,\n\t\"./ky\": 349,\n\t\"./ky.js\": 349,\n\t\"./lb\": 350,\n\t\"./lb.js\": 350,\n\t\"./lo\": 351,\n\t\"./lo.js\": 351,\n\t\"./lt\": 352,\n\t\"./lt.js\": 352,\n\t\"./lv\": 353,\n\t\"./lv.js\": 353,\n\t\"./me\": 354,\n\t\"./me.js\": 354,\n\t\"./mi\": 355,\n\t\"./mi.js\": 355,\n\t\"./mk\": 356,\n\t\"./mk.js\": 356,\n\t\"./ml\": 357,\n\t\"./ml.js\": 357,\n\t\"./mn\": 358,\n\t\"./mn.js\": 358,\n\t\"./mr\": 359,\n\t\"./mr.js\": 359,\n\t\"./ms\": 360,\n\t\"./ms-my\": 361,\n\t\"./ms-my.js\": 361,\n\t\"./ms.js\": 360,\n\t\"./mt\": 362,\n\t\"./mt.js\": 362,\n\t\"./my\": 363,\n\t\"./my.js\": 363,\n\t\"./nb\": 364,\n\t\"./nb.js\": 364,\n\t\"./ne\": 365,\n\t\"./ne.js\": 365,\n\t\"./nl\": 366,\n\t\"./nl-be\": 367,\n\t\"./nl-be.js\": 367,\n\t\"./nl.js\": 366,\n\t\"./nn\": 368,\n\t\"./nn.js\": 368,\n\t\"./pa-in\": 369,\n\t\"./pa-in.js\": 369,\n\t\"./pl\": 370,\n\t\"./pl.js\": 370,\n\t\"./pt\": 371,\n\t\"./pt-br\": 372,\n\t\"./pt-br.js\": 372,\n\t\"./pt.js\": 371,\n\t\"./ro\": 373,\n\t\"./ro.js\": 373,\n\t\"./ru\": 374,\n\t\"./ru.js\": 374,\n\t\"./sd\": 375,\n\t\"./sd.js\": 375,\n\t\"./se\": 376,\n\t\"./se.js\": 376,\n\t\"./si\": 377,\n\t\"./si.js\": 377,\n\t\"./sk\": 378,\n\t\"./sk.js\": 378,\n\t\"./sl\": 379,\n\t\"./sl.js\": 379,\n\t\"./sq\": 380,\n\t\"./sq.js\": 380,\n\t\"./sr\": 381,\n\t\"./sr-cyrl\": 382,\n\t\"./sr-cyrl.js\": 382,\n\t\"./sr.js\": 381,\n\t\"./ss\": 383,\n\t\"./ss.js\": 383,\n\t\"./sv\": 384,\n\t\"./sv.js\": 384,\n\t\"./sw\": 385,\n\t\"./sw.js\": 385,\n\t\"./ta\": 386,\n\t\"./ta.js\": 386,\n\t\"./te\": 387,\n\t\"./te.js\": 387,\n\t\"./tet\": 388,\n\t\"./tet.js\": 388,\n\t\"./tg\": 389,\n\t\"./tg.js\": 389,\n\t\"./th\": 390,\n\t\"./th.js\": 390,\n\t\"./tl-ph\": 391,\n\t\"./tl-ph.js\": 391,\n\t\"./tlh\": 392,\n\t\"./tlh.js\": 392,\n\t\"./tr\": 393,\n\t\"./tr.js\": 393,\n\t\"./tzl\": 394,\n\t\"./tzl.js\": 394,\n\t\"./tzm\": 395,\n\t\"./tzm-latn\": 396,\n\t\"./tzm-latn.js\": 396,\n\t\"./tzm.js\": 395,\n\t\"./ug-cn\": 397,\n\t\"./ug-cn.js\": 397,\n\t\"./uk\": 398,\n\t\"./uk.js\": 398,\n\t\"./ur\": 399,\n\t\"./ur.js\": 399,\n\t\"./uz\": 400,\n\t\"./uz-latn\": 401,\n\t\"./uz-latn.js\": 401,\n\t\"./uz.js\": 400,\n\t\"./vi\": 402,\n\t\"./vi.js\": 402,\n\t\"./x-pseudo\": 403,\n\t\"./x-pseudo.js\": 403,\n\t\"./yo\": 404,\n\t\"./yo.js\": 404,\n\t\"./zh-cn\": 405,\n\t\"./zh-cn.js\": 405,\n\t\"./zh-hk\": 406,\n\t\"./zh-hk.js\": 406,\n\t\"./zh-tw\": 407,\n\t\"./zh-tw.js\": 407\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 676;","module.exports = __webpack_public_path__ + \"static/media/logo.ccfb714c.png\";"],"sourceRoot":""}